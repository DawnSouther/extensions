!function(){function s(s){return function(s){if(Array.isArray(s))return n(s)}(s)||function(s){if("undefined"!=typeof Symbol&&null!=s[Symbol.iterator]||null!=s["@@iterator"])return Array.from(s)}(s)||function(s,a){if(!s)return;if("string"==typeof s)return n(s,a);var t=Object.prototype.toString.call(s).slice(8,-1);"Object"===t&&s.constructor&&(t=s.constructor.name);if("Map"===t||"Set"===t)return Array.from(s);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return n(s,a)}(s)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(s,n){(null==n||n>s.length)&&(n=s.length);for(var a=0,t=new Array(n);a<n;a++)t[a]=s[a];return t}function a(s,n){if(!(s instanceof n))throw new TypeError("Cannot call a class as a function")}function t(s,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(s,t.key,t)}}function l(s,n,a){return n&&t(s.prototype,n),a&&t(s,a),s}(self.webpackChunkextensions_srcs=self.webpackChunkextensions_srcs||[]).push([[854],{89854:function(n,t,e){"use strict";e.r(t),e.d(t,{DataGridApiComponent:function(){return js},DataGridModule:function(){return xs},DataGridOverviewComponent:function(){return us},TranslateHttpLoaderFactory:function(){return hs}});var p,r=e(54655),o=e(63270),c=e(32472),i=e(91841),h=e(29790),d=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}],m=e(37716),g=e(35404),u={title:"Basic",component:(p=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",type:"number",typeParameter:{digitsInfo:"1.2-2"}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Date",field:"date",type:"date",typeParameter:{format:"yyyy-MM-dd"}}],this.list=d}return l(s,[{key:"trackByName",value:function(s,n){return n.name}}]),s}(),p.\u0275fac=function(s){return new(s||p)},p.\u0275cmp=m.Xpm({type:p,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","trackBy"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)("trackBy",n.trackByName)},directives:[g.C],styles:[""]}),p),files:[{file:"app.component.html",content:e(75599),filecontent:e(62185)},{file:"app.component.ts",content:e(3235),filecontent:e(1585)},{file:"app.component.scss",content:e(33846),filecontent:e(22176)},{file:"data.ts",content:e(18913),filecontent:e(49013)}]},j=e(7539),x=e(3679),f={title:"Loading status",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.isLoading=!0};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(s,n){1&s&&(m.TgZ(0,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.isLoading=s}),m._uU(1,"Loading"),m.qZA(),m._UZ(2,"mtx-grid",1)),2&s&&(m.Q6J("ngModel",n.isLoading),m.xp6(2),m.Q6J("data",n.list)("columns",n.columns)("loading",n.isLoading))},directives:[j.oG,x.JJ,x.On,g.C],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:e(47115),filecontent:e(8907)},{file:"app.component.ts",content:e(62061),filecontent:e(32762)},{file:"app.component.scss",content:e(16134),filecontent:e(27468)}]},b={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)("pageOnFront",!1)("showPaginator",!1)},directives:[g.C],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(25837),filecontent:e(89018)},{file:"app.component.ts",content:e(77738),filecontent:e(2637)},{file:"app.component.scss",content:e(90562),filecontent:e(80397)}]},y={title:"Sortable",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!1},{header:"City",field:"city",sortable:!0,sortProp:{arrowPosition:"before",disableClear:!0,start:"desc"}}],this.list=d}return l(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:5,consts:[["sortActive","name","sortDirection","asc","sortStart","asc",3,"data","columns","sortOnFront","sortDisableClear","sortDisabled","sortChange"]],template:function(s,n){1&s&&(m.TgZ(0,"mtx-grid",0),m.NdJ("sortChange",function(s){return n.log(s)}),m.qZA()),2&s&&m.Q6J("data",n.list)("columns",n.columns)("sortOnFront",!0)("sortDisableClear",!0)("sortDisabled",!1)},directives:[g.C],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(50671),filecontent:e(46935)},{file:"app.component.ts",content:e(16974),filecontent:e(24891)},{file:"app.component.scss",content:e(63598),filecontent:e(90660)}]},w=e(82613),C={title:"Row selectable",description:"\n  <p>If you choose multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple row.</p>\n  ",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=d.slice(2,3),this.rowSelectionFormatter={disabled:function(s){return"Boron"===s.name},hideCheckbox:function(s){return"John"===s.name}}}return l(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectionChange","cellSelectionChange"]],template:function(s,n){1&s&&(m.TgZ(0,"div"),m.TgZ(1,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.rowSelectable=s}),m._uU(2,"Row selectable"),m.qZA(),m.TgZ(3,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.hideRowSelectionCheckbox=s}),m._uU(4,"Hide checkbox"),m.qZA(),m.TgZ(5,"mat-radio-group",0),m.NdJ("ngModelChange",function(s){return n.multiSelectable=s}),m.TgZ(6,"mat-radio-button",1),m._uU(7,"Single"),m.qZA(),m.TgZ(8,"mat-radio-button",1),m._uU(9,"Multiple"),m.qZA(),m.qZA(),m.qZA(),m.TgZ(10,"mtx-grid",2),m.NdJ("rowSelectionChange",function(s){return n.log(s)})("cellSelectionChange",function(s){return n.log(s)}),m.qZA()),2&s&&(m.xp6(1),m.Q6J("ngModel",n.rowSelectable),m.xp6(2),m.Q6J("ngModel",n.hideRowSelectionCheckbox),m.xp6(2),m.Q6J("ngModel",n.multiSelectable),m.xp6(1),m.Q6J("value",!1),m.xp6(2),m.Q6J("value",!0),m.xp6(2),m.Q6J("data",n.list)("columns",n.columns)("multiSelectable",n.multiSelectable)("hideRowSelectionCheckbox",n.hideRowSelectionCheckbox)("rowSelectable",n.rowSelectable)("rowSelected",n.rowSelected)("rowSelectionFormatter",n.rowSelectionFormatter))},directives:[j.oG,x.JJ,x.On,w.VQ,w.U0,g.C],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:e(26986),filecontent:e(20881)},{file:"app.component.ts",content:e(65323),filecontent:e(50378)},{file:"app.component.scss",content:e(71244),filecontent:e(22923)}]};function M(s,n){1&s&&m._uU(0),2&s&&m.hij(" ",n.$implicit.name,"\n")}var k={title:"Expandable row",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d}return l(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(s,n){if(1&s&&(m.TgZ(0,"mtx-grid",0),m.NdJ("expansionChange",function(s){return n.log(s)}),m.qZA(),m.YNc(1,M,1,1,"ng-template",null,1,m.W1O)),2&s){var a=m.MAs(2);m.Q6J("data",n.list)("columns",n.columns)("expandable",!0)("expansionTemplate",a)}},directives:[g.C],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(56359),filecontent:e(43855)},{file:"app.component.ts",content:e(39022),filecontent:e(82577)},{file:"app.component.scss",content:e(48650),filecontent:e(49463)}]},q=["grid"];function A(s,n){if(1&s){var a=m.EpF();m.TgZ(0,"button"),m._uU(1,"Save"),m.qZA(),m.TgZ(2,"button",6),m.NdJ("click",function(){return m.CHM(a),m.oxw().closeMenu()}),m._uU(3,"Close"),m.qZA()}}var T={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.columnHideable=!0,this.columnMovable=!0,this.columnHideableChecked="show"}return l(s,[{key:"closeMenu",value:function(){this.grid.columnMenu.menuTrigger.closeMenu()}},{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;(1&s&&m.Gf(q,5),2&s)&&(m.iGM(a=m.CRH())&&(n.grid=a.first))},decls:16,vars:14,consts:[[3,"ngModel","ngModelChange"],["value","show"],["value","hide"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnHideableChecked","columnMovable","showColumnMenuHeader","columnMenuHeaderText","showColumnMenuFooter","columnMenuFooterTemplate","columnChange"],["grid",""],["menuFooter",""],[3,"click"]],template:function(s,n){if(1&s&&(m.TgZ(0,"div"),m.TgZ(1,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.columnHideable=s}),m._uU(2,"Column Hiding"),m.qZA(),m.TgZ(3,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.columnMovable=s}),m._uU(4,"Column Moving"),m.qZA(),m.TgZ(5,"label"),m._uU(6,"columnHideableChecked:"),m.qZA(),m.TgZ(7,"mat-radio-group",0),m.NdJ("ngModelChange",function(s){return n.columnHideableChecked=s}),m.TgZ(8,"mat-radio-button",1),m._uU(9,"show"),m.qZA(),m.TgZ(10,"mat-radio-button",2),m._uU(11,"hide"),m.qZA(),m.qZA(),m.qZA(),m.TgZ(12,"mtx-grid",3,4),m.NdJ("columnChange",function(s){return n.log(s)}),m.qZA(),m.YNc(14,A,4,0,"ng-template",null,5,m.W1O)),2&s){var a=m.MAs(15);m.xp6(1),m.Q6J("ngModel",n.columnHideable),m.xp6(2),m.Q6J("ngModel",n.columnMovable),m.xp6(4),m.Q6J("ngModel",n.columnHideableChecked),m.xp6(5),m.Q6J("data",n.list)("columns",n.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",n.columnHideable)("columnHideableChecked",n.columnHideableChecked)("columnMovable",n.columnMovable)("showColumnMenuHeader",!0)("columnMenuHeaderText","Title")("showColumnMenuFooter",!0)("columnMenuFooterTemplate",a)}},directives:[j.oG,x.JJ,x.On,w.VQ,w.U0,g.C],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}.mat-radio-button[_ngcontent-%COMP%]{margin:0 4px}label[_ngcontent-%COMP%]{vertical-align:middle}"]}),s}(),files:[{file:"app.component.html",content:e(6961),filecontent:e(10272)},{file:"app.component.ts",content:e(86571),filecontent:e(78617)},{file:"app.component.scss",content:e(42840),filecontent:e(51156)}]},v={title:"Column pinnable",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)},directives:[g.C],styles:[""]}),s}(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:e(88519),filecontent:e(13943)},{file:"app.component.ts",content:e(81111),filecontent:e(53595)},{file:"app.component.scss",content:e(13307),filecontent:e(57841)}]},_={title:"Hover & striped",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.rowHover=!0,this.rowStriped=!1};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:6,vars:7,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped","rowSelectable"]],template:function(s,n){1&s&&(m.TgZ(0,"div"),m.TgZ(1,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.rowHover=s}),m._uU(2,"Hover"),m.qZA(),m.TgZ(3,"mat-checkbox",0),m.NdJ("ngModelChange",function(s){return n.rowStriped=s}),m._uU(4,"Striped"),m.qZA(),m.qZA(),m._UZ(5,"mtx-grid",1)),2&s&&(m.xp6(1),m.Q6J("ngModel",n.rowHover),m.xp6(2),m.Q6J("ngModel",n.rowStriped),m.xp6(2),m.Q6J("data",n.list)("columns",n.columns)("rowHover",n.rowHover)("rowStriped",n.rowStriped)("rowSelectable",!0))},directives:[j.oG,x.JJ,x.On,g.C],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:e(92586),filecontent:e(21735)},{file:"app.component.ts",content:e(86299),filecontent:e(34723)},{file:"app.component.scss",content:e(14017),filecontent:e(25616)}]},S={title:"Row with buttons",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"160px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"copy",icon:"file_copy",tooltip:"copy",disabled:!0,click:function(){alert("copy")}},{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:function(){alert("edit")}},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:!0,popTitle:"Confirm delete?",click:function(){alert("delete")}}]}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)},directives:[g.C],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(164),filecontent:e(30840)},{file:"app.component.ts",content:e(61898),filecontent:e(31981)},{file:"app.component.scss",content:e(85143),filecontent:e(40175)}]},D=e(45396),E=["statusTpl"];function G(s,n){1&s&&(m.TgZ(0,"mat-slide-toggle",2),m._uU(1,"Slide me!"),m.qZA()),2&s&&m.Q6J("checked",n.$implicit.status)}var N={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:function(){var s=function(){function s(){a(this,s),this.columns=[],this.list=d}return l(s,[{key:"ngOnInit",value:function(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;(1&s&&m.Gf(E,7),2&s)&&(m.iGM(a=m.CRH())&&(n.statusTpl=a.first))},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(s,n){1&s&&(m._UZ(0,"mtx-grid",0),m.YNc(1,G,2,1,"ng-template",null,1,m.W1O)),2&s&&m.Q6J("data",n.list)("columns",n.columns)},directives:[g.C,D.Rr],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(77258),filecontent:e(29633)},{file:"app.component.ts",content:e(6490),filecontent:e(12282)},{file:"app.component.scss",content:e(79774),filecontent:e(55914)}]},P=e(51095);function U(s,n){if(1&s&&(m.TgZ(0,"button",3),m._uU(1),m.qZA()),2&s){var a=n.$implicit;m.xp6(1),m.Oqu(a.mobile)}}function L(s,n){if(1&s&&(m.TgZ(0,"button",4),m._uU(1),m.qZA()),2&s){var a=n.$implicit;m.xp6(1),m.Oqu(a.city)}}var I=function(s,n){return{mobile:s,city:n}},W={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ mobile: mobileTpl, city: cityTpl }"</code>,\n  the key of cellTemplate is the column field.</p>\n  ',component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:5,vars:6,consts:[[3,"data","columns","cellTemplate"],["mobileTpl",""],["cityTpl",""],["mat-raised-button","","color","accent"],["mat-raised-button","","color","primary"]],template:function(s,n){if(1&s&&(m._UZ(0,"mtx-grid",0),m.YNc(1,U,2,1,"ng-template",null,1,m.W1O),m.YNc(3,L,2,1,"ng-template",null,2,m.W1O)),2&s){var a=m.MAs(2),t=m.MAs(4);m.Q6J("data",n.list)("columns",n.columns)("cellTemplate",m.WLB(3,I,a,t))}},directives:[g.C,P.lW],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(74037),filecontent:e(11363)},{file:"app.component.ts",content:e(6230),filecontent:e(93759)},{file:"app.component.scss",content:e(79317),filecontent:e(36055)}]},O={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name",formatter:function(s){return'<span class="label">'.concat(s.name,"</span>")}},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)},directives:[g.C],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),s}(),files:[{file:"app.component.html",content:e(35465),filecontent:e(54037)},{file:"app.component.ts",content:e(26991),filecontent:e(21054)},{file:"app.component.scss",content:e(18261),filecontent:e(24747)}]},X={title:"No result",description:'\n  <p>You can use <code>[noResultTemplate]="noResultTpl"</code> to customize it.</p>\n  ',component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)},directives:[g.C],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(55971),filecontent:e(45659)},{file:"app.component.ts",content:e(94138),filecontent:e(73858)},{file:"app.component.scss",content:e(25725),filecontent:e(19982)}]},H=e(76627),Z=e(11436);function F(s,n){if(1&s&&(m._uU(0),m.TgZ(1,"mat-icon",2),m._uU(2,"info"),m.qZA()),2&s){var a=n.$implicit;m.hij(" ",a.header," "),m.xp6(1),m.Q6J("matTooltip",a.description)}}var R={title:"Custom header template",description:"\n  <p>If you just want to append something to header, you can try\n  <code>[headerExtraTemplate]</code> instead.</p>\n  ",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(s,n){if(1&s&&(m._UZ(0,"mtx-grid",0),m.YNc(1,F,3,2,"ng-template",null,1,m.W1O)),2&s){var a=m.MAs(2);m.Q6J("data",n.list)("columns",n.columns)("headerTemplate",a)}},directives:[g.C,H.Hw,Z.gM],styles:[""]}),s}(),files:[{file:"app.component.html",content:e(47958),filecontent:e(6688)},{file:"app.component.ts",content:e(57155),filecontent:e(84615)},{file:"app.component.scss",content:e(75969),filecontent:e(83650)}]},J=e(38583);function B(s,n){if(1&s&&(m.TgZ(0,"div"),m._uU(1),m.ALo(2,"currency"),m.qZA()),2&s){var a=n.$implicit,t=m.oxw();m.xp6(1),m.Oqu(m.lcZ(2,1,t.getTotalCost(a)))}}var Q=function(s){return{cost:s}},z={title:"Custom footer template",component:function(){var n=function(){function n(){a(this,n),this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:function(n){return Math.max.apply(Math,s(n))}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=d}return l(n,[{key:"getTotalCost",value:function(s){return s.reduce(function(s,n){return s+n},0)}}]),n}();return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=m.Xpm({type:n,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(s,n){if(1&s&&(m._UZ(0,"mtx-grid",0),m.YNc(1,B,3,3,"ng-template",null,1,m.W1O)),2&s){var a=m.MAs(2);m.Q6J("data",n.list)("columns",n.columns)("showSummary",!0)("summaryTemplate",m.VKq(4,Q,a))}},directives:[g.C],pipes:[J.H9],styles:[""]}),n}(),files:[{file:"app.component.html",content:e(91975),filecontent:e(2086)},{file:"app.component.ts",content:e(4908),filecontent:e(32636)},{file:"app.component.scss",content:e(62628),filecontent:e(61281)}]};function $(s,n){1&s&&m._UZ(0,"input",2)}var Y={title:"Custom toolbar template",component:function(){var n=function n(){a(this,n),this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:function(n){return Math.max.apply(Math,s(n))}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=d};return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=m.Xpm({type:n,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(s,n){if(1&s&&(m._UZ(0,"mtx-grid",0),m.YNc(1,$,1,0,"ng-template",null,1,m.W1O)),2&s){var a=m.MAs(2);m.Q6J("data",n.list)("columns",n.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",a)}},directives:[g.C],styles:[""]}),n}(),files:[{file:"app.component.html",content:e(75296),filecontent:e(91626)},{file:"app.component.ts",content:e(80553),filecontent:e(57197)},{file:"app.component.scss",content:e(6764),filecontent:e(13480)}]};function V(s,n){if(1&s&&(m.TgZ(0,"mat-radio-button",3),m._uU(1),m.qZA()),2&s){var a=n.$implicit;m.Q6J("value",a.value),m.xp6(1),m.hij(" ",a.label," ")}}var K={title:"I18n ngx-translate",component:function(){var s=function s(n){a(this,s),this.translate=n,this.columns=[{header:this.translate.stream("name"),field:"name"},{header:this.translate.stream("weight"),field:"weight"},{header:this.translate.stream("gender"),field:"gender"},{header:this.translate.stream("mobile"),field:"mobile"},{header:this.translate.stream("city"),field:"city"},{header:this.translate.stream("operation"),field:"operation",width:"40px",pinned:"right",right:"0px",type:"button",buttons:[{type:"basic",text:this.translate.stream("delete"),icon:"delete",tooltip:this.translate.stream("delete"),color:"warn",pop:!0,popTitle:this.translate.stream("confirm_delete"),popCloseText:this.translate.stream("close"),popOkText:this.translate.stream("ok"),click:function(){alert("delete")}}]}],this.list=d,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",n.addLangs(this.langs.map(function(s){return s.value})),n.setDefaultLang(this.defaultlang)};return s.\u0275fac=function(n){return new(n||s)(m.Y36(h.sK))},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:3,vars:7,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],[3,"data","columns","showToolbar","columnHideable","columnMovable"],[3,"value"]],template:function(s,n){1&s&&(m.TgZ(0,"mat-radio-group",0),m.NdJ("ngModelChange",function(s){return n.defaultlang=s})("change",function(s){return n.translate.use(s.value)}),m.YNc(1,V,2,2,"mat-radio-button",1),m.qZA(),m._UZ(2,"mtx-grid",2)),2&s&&(m.Q6J("ngModel",n.defaultlang),m.xp6(1),m.Q6J("ngForOf",n.langs),m.xp6(1),m.Q6J("data",n.list)("columns",n.columns)("showToolbar",!0)("columnHideable",!0)("columnMovable",!0))},directives:[w.VQ,x.JJ,x.On,J.sg,g.C,w.U0],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),s}(),files:[{file:"app.component.html",content:e(71483),filecontent:e(85073)},{file:"app.component.ts",content:e(51479),filecontent:e(22724)},{file:"app.component.scss",content:e(16427),filecontent:e(8896)},{file:"assets/zh-CN.json",content:e(40340),filecontent:e(15215)},{file:"assets/en-US.json",content:e(75497),filecontent:e(61863)}]},ss=function(){return[5,10,20]},ns={title:"Remote Data",component:function(){var s=function(){function s(n){a(this,s),this.http=n,this.columns=[{header:"Name",field:"name",formatter:function(s){return'<a href="'.concat(s.html_url,'" target="_blank">').concat(s.name,"</a>")}},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}return l(s,[{key:"params",get:function(){var s=Object.assign({},this.query);return s.page+=1,s}},{key:"ngOnInit",value:function(){this.getData()}},{key:"getData",value:function(){var s=this;this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe(function(n){s.list=n.items,s.total=n.total_count,s.isLoading=!1},function(){s.isLoading=!1},function(){s.isLoading=!1})}},{key:"getNextPage",value:function(s){this.query.page=s.pageIndex,this.query.per_page=s.pageSize,this.getData()}},{key:"refresh",value:function(){this.getData()}}]),s}();return s.\u0275fac=function(n){return new(n||s)(m.Y36(i.eN))},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:3,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(s,n){1&s&&(m.TgZ(0,"button",0),m.NdJ("click",function(){return n.refresh()}),m._uU(1,"Refresh"),m.qZA(),m.TgZ(2,"mtx-grid",1),m.NdJ("page",function(s){return n.getNextPage(s)}),m.qZA()),2&s&&(m.xp6(2),m.Q6J("data",n.list)("columns",n.columns)("length",n.total)("loading",n.isLoading)("pageOnFront",!1)("pageIndex",n.query.page)("pageSize",n.query.per_page)("pageSizeOptions",m.DdM(8,ss)))},directives:[P.lW,g.C],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:e(97818),filecontent:e(46151)},{file:"app.component.ts",content:e(69377),filecontent:e(49398)},{file:"app.component.scss",content:e(72155),filecontent:e(80110)}]},as=function(){return[1,2,5,10]},ts={title:"Column resize",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name",minWidth:200,maxWidth:300},{header:"Weight",field:"weight",minWidth:200},{header:"Gender",field:"gender",width:"100px",resizable:!1},{header:"Mobile",field:"mobile",maxWidth:200},{header:"City",field:"city",minWidth:200}],this.list=[].concat(d,d,d)};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:5,consts:[[3,"data","columns","columnResizable","pageSizeOptions"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)("columnResizable",!0)("pageSizeOptions",m.DdM(4,as))},directives:[g.C],styles:["[_nghost-%COMP%]     .mtx-grid{height:280px}"]}),s}(),files:[{file:"app.component.html",content:e(91850),filecontent:e(9553)},{file:"app.component.ts",content:e(51995),filecontent:e(82306)},{file:"app.component.scss",content:e(2448),filecontent:e(87146)}]},ls={title:"Custom class for row and column",component:function(){var s=function s(){a(this,s),this.rowClassFormatter={success:function(s,n){return"Boron"===s.name},danger:function(s,n){return 1===n}},this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile",class:"warning"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Xpm({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","rowClassFormatter"]],template:function(s,n){1&s&&m._UZ(0,"mtx-grid",0),2&s&&m.Q6J("data",n.list)("columns",n.columns)("rowClassFormatter",n.rowClassFormatter)},directives:[g.C],styles:["[_nghost-%COMP%]     .mtx-grid .success{background-color:#d1e7dd}[_nghost-%COMP%]     .mtx-grid .danger{background-color:#f8d7da}[_nghost-%COMP%]     .mtx-grid .warning{background-color:#fff3cd}"]}),s}(),files:[{file:"app.component.html",content:e(5438),filecontent:e(77076)},{file:"app.component.ts",content:e(63127),filecontent:e(27797)},{file:"app.component.scss",content:e(30948),filecontent:e(60739)}]},es=e(28860),ps=e(22281),rs=e(29241);function os(s,n){if(1&s&&(m.ynx(0),m._UZ(1,"doc-heading",2),m._UZ(2,"example-viewer",3),m.BQk()),2&s){var a=n.$implicit;m.xp6(1),m.Q6J("text",a.title),m.xp6(1),m.Q6J("exampleData",a)}}function cs(s,n){if(1&s&&(m.ynx(0),m.YNc(1,os,3,2,"ng-container",1),m.BQk()),2&s){var a=n.ngIf;m.xp6(1),m.Q6J("ngForOf",a.examples)}}function is(s,n){if(1&s&&(m.ynx(0),m._UZ(1,"doc-viewer",1),m.BQk()),2&s){var a=n.ngIf;m.xp6(1),m.Q6J("textContent",a.content.default)}}function hs(s){return new c.w(s,"assets/i18n/data-grid/","_json")}var ds,ms,gs,us=((gs=function s(n){a(this,s),this.route=n}).\u0275fac=function(s){return new(s||gs)(m.Y36(r.gz))},gs.\u0275cmp=m.Xpm({type:gs,selectors:[["app-data-grid-overview"]],decls:7,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(m.TgZ(0,"p"),m._uU(1," The "),m.TgZ(2,"code"),m._uU(3,"mtx-grid"),m.qZA(),m._uU(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),m.qZA(),m.YNc(5,cs,2,1,"ng-container",0),m.ALo(6,"async")),2&s&&(m.xp6(5),m.Q6J("ngIf",m.lcZ(6,1,n.route.data)))},directives:[J.O5,J.sg,es.Q,ps.B],pipes:[J.Ov],encapsulation:2}),gs),js=((ms=function s(n){a(this,s),this.route=n}).\u0275fac=function(s){return new(s||ms)(m.Y36(r.gz))},ms.\u0275cmp=m.Xpm({type:ms,selectors:[["app-data-grid-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(s,n){1&s&&(m.YNc(0,is,2,1,"ng-container",0),m.ALo(1,"async")),2&s&&m.Q6J("ngIf",m.lcZ(1,1,n.route.data))},directives:[J.O5,rs.z],pipes:[J.Ov],encapsulation:2}),ms),xs=((ds=function s(){a(this,s)}).\u0275fac=function(s){return new(s||ds)},ds.\u0275mod=m.oAB({type:ds}),ds.\u0275inj=m.cJS({imports:[[o.m,h.aw.forRoot({loader:{provide:h.Zw,useFactory:hs,deps:[i.eN]}}),r.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:us,pathMatch:"full",data:{examples:[u,ts,f,b,y,C,k,T,v,_,S,N,W,O,ls,X,R,z,Y,K,ns]}},{path:"api",component:js,pathMatch:"full",data:{content:e(47469)}},{path:"**",redirectTo:"overview"}])]]}),ds)},75599:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">trackBy</span>]=<span class="hljs-string">&quot;trackByName&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},6961:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideable&quot;</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>Column Moving<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>columnHideableChecked:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>show<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>hide<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span> #<span class="hljs-attr">grid</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">&quot;&#x27;Data Grid&#x27;&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;columnHideable&quot;</span>\n          [<span class="hljs-attr">columnHideableChecked</span>]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;columnMovable&quot;</span>\n          (<span class="hljs-attr">columnChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          [<span class="hljs-attr">showColumnMenuHeader</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuHeaderText</span>]=<span class="hljs-string">&quot;&#x27;Title&#x27;&quot;</span>\n          [<span class="hljs-attr">showColumnMenuFooter</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuFooterTemplate</span>]=<span class="hljs-string">&quot;menuFooter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">menuFooter</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>Save<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;closeMenu()&quot;</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},88519:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},91850:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">columnResizable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[1,2,5,10]&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},74037:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">&quot;{mobile: mobileTpl, city: cityTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">mobileTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;accent&quot;</span>&gt;</span>{{row.mobile}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},77258:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">&quot;row.status&quot;</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},91975:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">&quot;{&#x27;cost&#x27;: footerTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},47958:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">&quot;headerTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">&quot;col.description&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},75296:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">&quot;toolbarTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},35465:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},56359:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">&quot;expansionTpl&quot;</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},25837:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},92586:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowHover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowStriped&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">&quot;rowHover&quot;</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">&quot;rowStriped&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},71483:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},47115:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},55971:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},97818:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;refresh()&quot;</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">&quot;total&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">&quot;query.page&quot;</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">&quot;query.per_page&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[5,10,20]&quot;</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">&quot;getNextPage($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},5438:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowClassFormatter</span>]=<span class="hljs-string">&quot;rowClassFormatter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},26986:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowSelectable&quot;</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiSelectable&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">&quot;multiSelectable&quot;</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;rowSelectable&quot;</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">&quot;rowSelected&quot;</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">&quot;rowSelectionFormatter&quot;</span>\n          (<span class="hljs-attr">rowSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          (<span class="hljs-attr">cellSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},164:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},50671:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">sortOnFront</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortActive</span>=<span class="hljs-string">&quot;name&quot;</span>\n          <span class="hljs-attr">sortDirection</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          [<span class="hljs-attr">sortDisableClear</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">sortDisabled</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          <span class="hljs-attr">sortStart</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},75497:function(s){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Name&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;Weight&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;Gender&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;Mobile&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;City&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Operation&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;Delete&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;Confirm delete?&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;CLOSE&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;OK&quot;</span>\n}\n'},40340:function(s){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;\u59d3\u540d&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;\u4f53\u91cd&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;\u6027\u522b&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;\u624b\u673a&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;\u57ce\u5e02&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;\u64cd\u4f5c&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;\u5220\u9664&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;\u786e\u8ba4\u5220\u9664\uff1f&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;\u5173\u95ed&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span>\n}\n'},33846:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},42840:function(s){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span>;\n}\n\n<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">vertical-align</span>: middle;\n}\n'},13307:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},2448:function(s){s.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep .mtx-grid {\n  height: <span class="hljs-number">280px</span>;\n}\n'},79317:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},79774:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},62628:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},75969:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},6764:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},18261:function(s){s.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep .label {\n  padding: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},48650:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},90562:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},14017:function(s){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},16427:function(s){s.exports='<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},16134:function(s){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},25725:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},72155:function(s){s.exports='<span class="hljs-selector-class">.mat-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},30948:function(s){s.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep .mtx-grid {\n  .success {\n    background-color: <span class="hljs-number">#d1e7dd</span>;\n  }\n\n  <span class="hljs-selector-class">.danger</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f8d7da</span>;\n  }\n\n  <span class="hljs-selector-class">.warning</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff3cd</span>;\n  }\n}\n'},71244:function(s){s.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},85143:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},63598:function(s){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},18913:function(s){s.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> EXAMPLE_DATA: <span class="hljs-built_in">any</span>[] = [\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">10.811</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;B&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;male&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;13198765432&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;567891234&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Berlin&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;Bernauer Str.111,13355&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Boron@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">4</span>\n  },\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">2</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Helium&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;blue&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">8.0026</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;He&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;female&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;13034676675&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;80675432&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Shanghai&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;88 Songshan Road&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Helium@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">5</span>\n  },\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">3</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Nitrogen&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;yellow&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">14.0067</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;N&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;male&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;15811112222&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;345678912&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Sydney&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;Circular Quay, Sydney NSW 2000&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Nitrogen@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">2</span>\n  },\n];\n'},3235:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;number&#x27;</span>,\n      <span class="hljs-attr">typeParameter</span>: {\n        <span class="hljs-attr">digitsInfo</span>: <span class="hljs-string">&#x27;1.2-2&#x27;</span>,\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Date&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-attr">typeParameter</span>: {\n        <span class="hljs-attr">format</span>: <span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">trackByName</span>(<span class="hljs-params">index: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-keyword">return</span> item.name;\n  }\n}\n'},86571:function(s){s.exports='<span class="hljs-keyword">import</span> { Component, ViewChild } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;grid&#x27;</span>) grid!: MtxGridComponent;\n\n  columns: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = <span class="hljs-literal">true</span>;\n  columnMovable = <span class="hljs-literal">true</span>;\n  columnHideableChecked: <span class="hljs-string">&#x27;show&#x27;</span> | <span class="hljs-string">&#x27;hide&#x27;</span> = <span class="hljs-string">&#x27;show&#x27;</span>;\n\n  <span class="hljs-function"><span class="hljs-title">closeMenu</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},81111:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Position&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;position&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;tags&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;tag.0.value&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Symbol&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;symbol&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Tele&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;tele&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Address&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;address&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;date&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Website&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;website&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Company&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;company&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Email&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Status&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},51995:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">300</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;100px&#x27;</span>,\n      <span class="hljs-attr">resizable</span>: <span class="hljs-literal">false</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n  ];\n\n  list = [...EXAMPLE_DATA, ...EXAMPLE_DATA, ...EXAMPLE_DATA];\n}\n'},6230:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},6490:function(s){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> <span class="hljs-title">implements</span> <span class="hljs-title">OnInit</span> </span>{\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;statusTpl&#x27;</span>, { <span class="hljs-attr">static</span>: <span class="hljs-literal">true</span> }) statusTpl!: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">ngOnInit</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.columns = [\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Status&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-attr">cellTemplate</span>: <span class="hljs-built_in">this</span>.statusTpl },\n    ];\n  }\n}\n'},4908:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Cost&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">getTotalCost</span>(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-keyword">return</span> data.reduce(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},57155:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},80553:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Cost&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},26991:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class=&quot;label&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},39022:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">showExpand</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},77738:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},86299:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},51479:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { TranslateService } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;name&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;weight&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;gender&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;mobile&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;city&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;operation&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,\n      <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span>,\n      <span class="hljs-attr">right</span>: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;basic&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">pop</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">popTitle</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;confirm_delete&#x27;</span>),\n          <span class="hljs-attr">popCloseText</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;close&#x27;</span>),\n          <span class="hljs-attr">popOkText</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>)</span> {\n    translate.addLangs(<span class="hljs-built_in">this</span>.langs.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.value));\n    translate.setDefaultLang(<span class="hljs-built_in">this</span>.defaultlang);\n  }\n}\n'},62061:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},94138:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = [];\n}\n'},69377:function(s){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { PageEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/paginator&#x27;</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common/http&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> <span class="hljs-title">implements</span> <span class="hljs-title">OnInit</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">${data.html_url}</span>&quot; target=&quot;_blank&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Owner&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;owner.login&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Owner Avatar&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;owner.avatar_url&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;image&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Description&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;description&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;300px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Stars&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;stargazers_count&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Forks&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;forks_count&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Score&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;score&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Issues&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;open_issues&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Language&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;language&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;License&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;license.name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Home Page&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;homepage&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;link&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Is forked&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;fork&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Archived&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;archived&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;tag&#x27;</span>,\n      <span class="hljs-attr">tag</span>: {\n        <span class="hljs-attr">true</span>: { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Yes&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red-100&#x27;</span> },\n        <span class="hljs-attr">false</span>: { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;No&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;green-100&#x27;</span> },\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Created Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;created_at&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Updated Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;updated_at&#x27;</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    <span class="hljs-attr">q</span>: <span class="hljs-string">&#x27;user:nzbin&#x27;</span>,\n    <span class="hljs-attr">page</span>: <span class="hljs-number">0</span>,\n    <span class="hljs-attr">per_page</span>: <span class="hljs-number">5</span>,\n  };\n\n  <span class="hljs-keyword">get</span> <span class="hljs-title">params</span>() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Object</span>.assign({}, <span class="hljs-built_in">this</span>.query);\n    p.page += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>)</span> {}\n\n  <span class="hljs-function"><span class="hljs-title">ngOnInit</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  <span class="hljs-function"><span class="hljs-title">getData</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">true</span>;\n    <span class="hljs-built_in">this</span>.http\n      .get(<span class="hljs-string">&#x27;https://api.github.com/search/repositories&#x27;</span>, { <span class="hljs-attr">params</span>: <span class="hljs-built_in">this</span>.params <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> })\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.list = res.items;\n          <span class="hljs-built_in">this</span>.total = res.total_count;\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        }\n      );\n  }\n\n  <span class="hljs-function"><span class="hljs-title">getNextPage</span>(<span class="hljs-params">e: PageEvent</span>)</span> {\n    <span class="hljs-built_in">this</span>.query.page = e.pageIndex;\n    <span class="hljs-built_in">this</span>.query.per_page = e.pageSize;\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  <span class="hljs-function"><span class="hljs-title">refresh</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n}\n'},63127:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowClassFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">rowClassFormatter</span>: MtxGridRowClassFormatter = {\n    <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">danger</span>: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> index === <span class="hljs-number">1</span>,\n  };\n\n  columns: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">class</span>: <span class="hljs-string">&#x27;warning&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},65323:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowSelectionFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = EXAMPLE_DATA.slice(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    <span class="hljs-attr">disabled</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">hideCheckbox</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;John&#x27;</span>,\n  };\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},61898:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Operation&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;160px&#x27;</span>,\n      <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span>,\n      <span class="hljs-attr">right</span>: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;file_copy&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;copy&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;Edit&#x27;</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;edit&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;Delete&#x27;</span>,\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">pop</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">popTitle</span>: <span class="hljs-string">&#x27;Confirm delete?&#x27;</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},16974:function(s){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">false</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">sortProp</span>: {\n        <span class="hljs-attr">arrowPosition</span>: <span class="hljs-string">&#x27;before&#x27;</span>,\n        <span class="hljs-attr">disableClear</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">start</span>: <span class="hljs-string">&#x27;desc&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},47469:function(s,n,a){"use strict";a.r(n),n.default='<h1 id="data-grid">Data Grid</h1>\n<h2 id="api-reference-for-material-extensions-data-grid">API reference for Material Extensions data-grid</h2>\n<p><code>import { MtxGridModule } from &apos;@ng-matero/extensions/data-grid&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxgrid"><code>MtxGrid</code></h4>\n<p>Selector: <code>[mtx-grid]</code></p>\n<p>Exported as: <code>mtxGrid</code></p>\n<h5 id="properties">Properties</h5>\n<h6 id="basic">Basic</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>columns: MtxGridColumn[]</code></td>\n<td align="left">The grid columns defination.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>data: any[]</code></td>\n<td align="left">The grid data source.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>length: number</code></td>\n<td align="left">The length of the total number of data. Defaulted to <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>loading: boolean</code></td>\n<td align="left">Whether the table loading is ended. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>trackBy: TrackByFunction&lt;any&gt;</code></td>\n<td align="left">Tracking function that will be used to check the differences in data changes.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnResizable: boolean</code></td>\n<td align="left">Whether the column can be resized. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n</tbody></table>\n<h6 id="page">Page</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>pageOnFront: boolean</code></td>\n<td align="left">Whether paging the data just on front end. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>showPaginator: boolean</code></td>\n<td align="left">Whether show the paginator. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>pageDisabled: boolean</code></td>\n<td align="left">Whether the paginator is disabled. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>showFirstLastButtons: boolean</code></td>\n<td align="left">Whether to show the first/last buttons UI to the user. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>pageIndex: number</code></td>\n<td align="left">The zero-based page index of the displayed list of items. Defaulted to <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>pageSize: number</code></td>\n<td align="left">Number of items to display on a page. By default set to <strong><code>10</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>pageSizeOptions: number[]</code></td>\n<td align="left">The set of provided page size options to display to the user. By default set to <strong><code>[10, 50, 100]</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>hidePageSize: boolean</code></td>\n<td align="left">Whether hide the pagesize. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Output() <code>page: EventEmitter&lt;PageEvent&gt;</code></td>\n<td align="left">Event emitted when the paginator changes the page size or page index.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>paginationTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The pagination template.</td>\n</tr>\n</tbody></table>\n<h6 id="sort">Sort</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>sortOnFront: boolean</code></td>\n<td align="left">Whether sort data just on front end. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>sortActive: string</code></td>\n<td align="left">The id of the most recently sorted MatSortable.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>sortDirection: SortDirection</code></td>\n<td align="left">The sort direction of the currently active MatSortable.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>sortDisableClear: boolean</code></td>\n<td align="left">Whether to disable the user from clearing the sort by finishing the sort direction cycle. May be overriden by the column&apos;s disable clear definition. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>sortDisabled: boolean</code></td>\n<td align="left">Whether the grid sort is disabled. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>sortStart: &apos;asc&apos; | &apos;desc&apos;</code></td>\n<td align="left">The direction to set when an MatSortable is initially sorted. May be overriden by the column&apos;s sort definition. Defaulted to <strong><code>asc</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Output() <code>sortChange: EventEmitter&lt;sort&gt;</code></td>\n<td align="left">Event emitted when the user changes either the active sort or sort direction.</td>\n</tr>\n</tbody></table>\n<h6 id="expansion">Expansion</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>expandable: boolean</code></td>\n<td align="left">Whether the row can be expanded. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>expansionTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template of expandable row.</td>\n</tr>\n<tr>\n<td align="left">@Output() <code>expansionChange: EventEmitter&lt;any&gt;</code></td>\n<td align="left">Event emitted when the user toggle the expandable row.</td>\n</tr>\n</tbody></table>\n<h6 id="selection">Selection</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>multiSelectable: boolean</code></td>\n<td align="left">Whether the user can selecte multiple row. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>multiSelectionWithClick: boolean</code></td>\n<td align="left">Whether the user can selecte multiple row with clicks. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>rowSelectable: boolean</code></td>\n<td align="left">Whether the row can be selectable. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>rowSelected: any[]</code></td>\n<td align="left">The row selected items default. Defaulted to <strong><code>[]</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>hideRowSelectionCheckbox: boolean</code></td>\n<td align="left">Whether hide the row selection checkbox. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>rowSelectionFormatter: MtxGridRowSelectionFormatter</code></td>\n<td align="left">The row selection formatter to set disabled and checkbox hiding.</td>\n</tr>\n<tr>\n<td align="left">@Output()<code>rowClassFormatter: MtxGridRowClassFormatter</code></td>\n<td align="left">The row class formatter to set class.</td>\n</tr>\n<tr>\n<td align="left">@Output()<code>rowSelectionChange: EventEmitter&lt;any&gt;</code></td>\n<td align="left">Event emitted when the row be selected.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>cellSelectable: boolean</code></td>\n<td align="left">Whether the cell can be selectable. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Output() <code>cellSelectionChange: EventEmitter&lt;any&gt;</code></td>\n<td align="left">Event emitted when the cell be selected.</td>\n</tr>\n</tbody></table>\n<h6 id="toolbar">Toolbar</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>showToolbar: boolean</code></td>\n<td align="left">Whether show the grid toolbar. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>toolbarTitle: string</code></td>\n<td align="left">The toolbar title. Defaulted to <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>toolbarTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The toolbar template.</td>\n</tr>\n</tbody></table>\n<h6 id="column-menu">Column menu</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>columnHideable: boolean</code></td>\n<td align="left">Whether the column can be hiding. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnHideableChecked: &apos;show&apos; | &apos;hide&apos;</code></td>\n<td align="left">Hide or show when column hiding checkbox be checked. Defaulted to <strong><code>&apos;show&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMovable: boolean</code></td>\n<td align="left">Whether the column can be moving. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnPinnable: boolean</code></td>\n<td align="left">Whether the column can be fixed. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Output() <code>columnChange: EventEmitter&lt;string[]&gt;</code></td>\n<td align="left">Event emitted when the column be hided or be resorted.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>showColumnMenuHeader: boolean</code></td>\n<td align="left">Whether show header of column menu. Defaulted to <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuHeaderText: string</code></td>\n<td align="left">The header text of column menu. Defaulted to <strong><code>&apos;Columns Header&apos;</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuHeaderTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The header template of column menu.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>showColumnMenuFooter: boolean</code></td>\n<td align="left">Whether show footer of column menu. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuFooterText: string</code></td>\n<td align="left">The header text of column menu. Defaulted to <strong><code>&apos;Columns Footer&apos;</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuFooterTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The footer template of column menu.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>showColumnMenuButton: boolean</code></td>\n<td align="left">Whether show column menu button. Defaulted to <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuButtonText: string</code></td>\n<td align="left">The column menu button text. Defaulted to <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuButtonType: &apos;raised&apos; | &apos;stroked&apos; | &apos;flat&apos; | &apos;icon&apos; | &apos;fab&apos; | &apos;mini-fab&apos; | &apos;&apos;</code></td>\n<td align="left">The column menu button type. Defaulted to <strong><code>&apos;stroked&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuButtonColor: string</code></td>\n<td align="left">The column menu button color. Defaulted to <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuButtonClass: string</code></td>\n<td align="left">The column menu button class. Defaulted to <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>columnMenuButtonIcon: string</code></td>\n<td align="left">The column menu button icon. Defaulted to <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n</tbody></table>\n<h6 id="row">Row</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>rowHover: boolean</code></td>\n<td align="left">Whether use hover style. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>rowStriped: boolean</code></td>\n<td align="left">Whether use striped style. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Output() <code>rowClick: EventEmitter&lt;any&gt;;</code></td>\n<td align="left">Row click event.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>useContentRowTemplate: boolean</code></td>\n<td align="left">Whether use custom row template. If true, you should define a <code>matRowDef</code>. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n</tbody></table>\n<h6 id="cell-templates">Cell templates</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>headerTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The grid header cell template.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>headerExtraTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The grid header cell template exclude sort.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>cellTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The grid body cell template.</td>\n</tr>\n</tbody></table>\n<h6 id="summary">Summary</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>showSummary: boolean</code></td>\n<td align="left">Whether show summary. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>summaryTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The summary template.</td>\n</tr>\n</tbody></table>\n<h6 id="no-result">No result</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>noResultText: string</code></td>\n<td align="left">The no result text. Defaulted to <strong><code>&apos;No records found&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>noResultTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The no result template.</td>\n</tr>\n</tbody></table>\n<h6 id="sidebar">Sidebar</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>showSidebar: boolean</code></td>\n<td align="left">Whether show sidebar. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>sidebarTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The sidebar template.</td>\n</tr>\n</tbody></table>\n<h6 id="status-bar">Status bar</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>showStatusbar: boolean</code></td>\n<td align="left">Whether show status bar. Defaulted to <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left">@Input() <code>statusbarTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The status bar template.</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="column">Column</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridColumn {\n  <span class="hljs-attr">field</span>: <span class="hljs-built_in">string</span>;\n  header?: <span class="hljs-built_in">string</span>;\n  hide?: <span class="hljs-built_in">boolean</span>;\n  disabled?: <span class="hljs-built_in">boolean</span>;\n  pinned?: <span class="hljs-string">&apos;left&apos;</span> | <span class="hljs-string">&apos;right&apos;</span>;\n  left?: <span class="hljs-built_in">string</span>;\n  right?: <span class="hljs-built_in">string</span>;\n  width?: <span class="hljs-built_in">string</span>;\n  resizable?: <span class="hljs-built_in">boolean</span>;\n  sortable?: <span class="hljs-built_in">boolean</span> | <span class="hljs-built_in">string</span>;\n  sortProp?: MtxGridColumnSortProp;\n  <span class="hljs-keyword">type</span>?: MtxGridColumnType;\n  typeParameter?: MtxGridColumnTypeParameter;\n  tag?: MtxGridColumnTag;\n  buttons?: MtxGridColumnButton[];\n  formatter?: <span class="hljs-function">(<span class="hljs-params">rowData: <span class="hljs-built_in">any</span>, colDef?: MtxGridColumn</span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n  cellTemplate?: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt; | <span class="hljs-literal">null</span>;\n  showExpand?: <span class="hljs-built_in">boolean</span>;\n  description?: <span class="hljs-built_in">string</span>;\n  summary?: (<span class="hljs-function">(<span class="hljs-params">colData: <span class="hljs-built_in">any</span>, colDef?: MtxGridColumn</span>) =&gt;</span> <span class="hljs-built_in">void</span>) | <span class="hljs-built_in">string</span>;\n}</pre>\n<h4 id="column-type">Column Type</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">declare</span> <span class="hljs-keyword">type</span> MtxGridColumnType =\n  | <span class="hljs-string">&apos;tag&apos;</span>\n  | <span class="hljs-string">&apos;button&apos;</span>\n  | <span class="hljs-string">&apos;link&apos;</span>\n  | <span class="hljs-string">&apos;image&apos;</span>\n  | <span class="hljs-string">&apos;boolean&apos;</span>\n  | <span class="hljs-string">&apos;number&apos;</span>\n  | <span class="hljs-string">&apos;currency&apos;</span>\n  | <span class="hljs-string">&apos;percent&apos;</span>\n  | <span class="hljs-string">&apos;date&apos;</span>;</pre>\n<h4 id="column-type-parameter">Column Type Parameter</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridColumnTypeParameter {\n  currencyCode?: <span class="hljs-built_in">string</span>;\n  display?: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">boolean</span>;\n  digitsInfo?: <span class="hljs-built_in">string</span>;\n  format?: <span class="hljs-built_in">string</span>;\n  locale?: <span class="hljs-built_in">string</span>;\n  timezone?: <span class="hljs-built_in">string</span>;\n}</pre>\n<h4 id="column-sort-properties">Column Sort Properties</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridColumnSortProp {\n  arrowPosition?: <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n  disableClear?: <span class="hljs-built_in">boolean</span>;\n  id?: <span class="hljs-built_in">string</span>;\n  start?: <span class="hljs-string">&apos;asc&apos;</span> | <span class="hljs-string">&apos;desc&apos;</span>;\n}</pre>\n<h4 id="column-button">Column Button</h4>\n<pre class="hljs">export interface MtxGridColumnButton {\n  type?: &apos;basic&apos; | &apos;icon&apos;;\n  text?: string | Observable&lt;string&gt;;\n  icon?: string;\n  color?: &apos;primary&apos; | &apos;accent&apos; | &apos;warn&apos;;\n  class?: string;\n  click?: (record: any) =&gt; void;\n  pop?: boolean;\n  popTitle?: string | Observable&lt;string&gt;;\n  popDescription?: string | Observable&lt;string&gt;;\n  popOkColor?: &apos;&apos; | &apos;primary&apos; | &apos;accent&apos; | &apos;warn&apos;;\n  popOkText?: string | Observable&lt;string&gt;;\n  popCloseColor?: &apos;&apos; | &apos;primary&apos; | &apos;accent&apos; | &apos;warn&apos;;\n  popCloseText?: string | Observable&lt;string&gt;;\n  children?: MtxGridColumnButton[];\n  iif?: (record: any) =&gt; boolean;\n  tooltip?: string | Observable&lt;string&gt;;\n  disabled?: boolean;\n}</pre>\n<h4 id="column-tag">Column Tag</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridColumnTag {\n  [key: <span class="hljs-built_in">number</span>]: MtxGridColumnTagValue;\n  [key: <span class="hljs-built_in">string</span>]: MtxGridColumnTagValue;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridColumnTagValue {\n  text?: <span class="hljs-built_in">string</span>;\n  color?: <span class="hljs-built_in">string</span>;\n}</pre>\n<h4 id="row-selection-formatter">Row Selection Formatter</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridRowSelectionFormatter {\n  disabled?: <span class="hljs-function">(<span class="hljs-params">rowData: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n  hideCheckbox?: <span class="hljs-function">(<span class="hljs-params">rowData: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n}</pre>\n<h4 id="row-class-formatter">Row class formatter</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxGridRowClassFormatter {\n  [className: <span class="hljs-built_in">string</span>]: <span class="hljs-function">(<span class="hljs-params">rowData: <span class="hljs-built_in">any</span>, index?: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n}</pre>\n'},49013:function(s,n,a){"use strict";a.r(n),n.default="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2\n  },\n];\n"},62185:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [trackBy]="trackByName">\n</mtx-grid>\n'},22176:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},1585:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      type: 'number',\n      typeParameter: {\n        digitsInfo: '1.2-2',\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Date',\n      field: 'date',\n      type: 'date',\n      typeParameter: {\n        format: 'yyyy-MM-dd',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: number, item: any) {\n    return item.name;\n  }\n}\n"},10272:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnMovable">Column Moving</mat-checkbox>\n\n  <label>columnHideableChecked:</label>\n  <mat-radio-group [(ngModel)]="columnHideableChecked">\n    <mat-radio-button value="show">show</mat-radio-button>\n    <mat-radio-button value="hide">hide</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list" #grid\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnHideableChecked]="columnHideableChecked"\n          [columnMovable]="columnMovable"\n          (columnChange)="log($event)"\n          [showColumnMenuHeader]="true"\n          [columnMenuHeaderText]="\'Title\'"\n          [showColumnMenuFooter]="true"\n          [columnMenuFooterTemplate]="menuFooter">\n</mtx-grid>\n\n<ng-template #menuFooter>\n  <button>Save</button>\n  <button (click)="closeMenu()">Close</button>\n</ng-template>\n'},51156:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mat-radio-button {\n  margin: 0 4px;\n}\n\nlabel {\n  vertical-align: middle;\n}\n"},78617:function(s,n,a){"use strict";a.r(n),n.default="import { Component, ViewChild } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridComponent } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  @ViewChild('grid') grid!: MtxGridComponent;\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = true;\n  columnMovable = true;\n  columnHideableChecked: 'show' | 'hide' = 'show';\n\n  closeMenu() {\n    this.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},13943:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},57841:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},53595:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},9553:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [columnResizable]="true"\n          [pageSizeOptions]="[1,2,5,10]">\n</mtx-grid>\n'},87146:function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .mtx-grid {\n  height: 280px;\n}\n"},82306:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      minWidth: 200,\n      maxWidth: 300,\n    },\n    {\n      header: 'Weight',\n      field: 'weight',\n      minWidth: 200,\n    },\n    {\n      header: 'Gender',\n      field: 'gender',\n      width: '100px',\n      resizable: false,\n    },\n    {\n      header: 'Mobile',\n      field: 'mobile',\n      maxWidth: 200,\n    },\n    {\n      header: 'City',\n      field: 'city',\n      minWidth: 200,\n    },\n  ];\n\n  list = [...EXAMPLE_DATA, ...EXAMPLE_DATA, ...EXAMPLE_DATA];\n}\n"},11363:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{mobile: mobileTpl, city: cityTpl}">\n</mtx-grid>\n\n<ng-template #mobileTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="accent">{{row.mobile}}</button>\n</ng-template>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},36055:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},93759:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},29633:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},55914:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},12282:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl!: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},2086:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},61281:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},32636:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},6688:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},83650:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},84615:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},91626:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},13480:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},57197:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},54037:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},24747:function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},21054:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},43855:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},49463:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},82577:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},89018:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},80397:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},2637:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},21735:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped"\n          [rowSelectable]="true">\n</mtx-grid>\n'},25616:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},34723:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},85073:function(s,n,a){"use strict";a.r(n),n.default='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [columnHideable]="true"\n          [columnMovable]="true">\n</mtx-grid>\n'},8896:function(s,n,a){"use strict";a.r(n),n.default=".mat-radio-button {\n  margin: 0 1rem 1rem 0;\n}\n"},22724:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('name'),\n      field: 'name',\n    },\n    {\n      header: this.translate.stream('weight'),\n      field: 'weight',\n    },\n    {\n      header: this.translate.stream('gender'),\n      field: 'gender',\n    },\n    {\n      header: this.translate.stream('mobile'),\n      field: 'mobile',\n    },\n    {\n      header: this.translate.stream('city'),\n      field: 'city',\n    },\n    {\n      header: this.translate.stream('operation'),\n      field: 'operation',\n      width: '40px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'basic',\n          text: this.translate.stream('delete'),\n          icon: 'delete',\n          tooltip: this.translate.stream('delete'),\n          color: 'warn',\n          pop: true,\n          popTitle: this.translate.stream('confirm_delete'),\n          popCloseText: this.translate.stream('close'),\n          popOkText: this.translate.stream('ok'),\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},8907:function(s,n,a){"use strict";a.r(n),n.default='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},27468:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},32762:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},45659:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},19982:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},73858:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},46151:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},80110:function(s,n,a){"use strict";a.r(n),n.default=".mat-raised-button {\n  margin-bottom: 1rem;\n}\n"},49398:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.isLoading = true;\n    this.http\n      .get('https://api.github.com/search/repositories', { params: this.params as any })\n      .subscribe(\n        (res: any) => {\n          this.list = res.items;\n          this.total = res.total_count;\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getData();\n  }\n\n  refresh() {\n    this.getData();\n  }\n}\n"},77076:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowClassFormatter]="rowClassFormatter">\n</mtx-grid>\n'},60739:function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .mtx-grid {\n  .success {\n    background-color: #d1e7dd;\n  }\n\n  .danger {\n    background-color: #f8d7da;\n  }\n\n  .warning {\n    background-color: #fff3cd;\n  }\n}\n"},27797:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowClassFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  rowClassFormatter: MtxGridRowClassFormatter = {\n    success: (data, index) => data.name === 'Boron',\n    danger: (data, index) => index === 1,\n  };\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile', class: 'warning' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},20881:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectionChange)="log($event)"\n          (cellSelectionChange)="log($event)">\n</mtx-grid>\n'},22923:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},50378:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},30840:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},40175:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},31981:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '160px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'copy',\n          icon: 'file_copy',\n          tooltip: 'copy',\n          disabled: true,\n          click: () => {\n            alert('copy');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => {\n            alert('edit');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: true,\n          popTitle: 'Confirm delete?',\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},46935:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [sortOnFront]="true"\n          sortActive="name"\n          sortDirection="asc"\n          [sortDisableClear]="true"\n          [sortDisabled]="false"\n          sortStart="asc"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},90660:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},24891:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: false },\n    {\n      header: 'City',\n      field: 'city',\n      sortable: true,\n      sortProp: {\n        arrowPosition: 'before',\n        disableClear: true,\n        start: 'desc',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},61863:function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "Name",\n  "weight": "Weight",\n  "gender": "Gender",\n  "mobile": "Mobile",\n  "city": "City",\n  "operation": "Operation",\n  "delete": "Delete",\n  "confirm_delete": "Confirm delete?",\n  "close": "CLOSE",\n  "ok": "OK"\n}\n'},15215:function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "\u59d3\u540d",\n  "weight": "\u4f53\u91cd",\n  "gender": "\u6027\u522b",\n  "mobile": "\u624b\u673a",\n  "city": "\u57ce\u5e02",\n  "operation": "\u64cd\u4f5c",\n  "delete": "\u5220\u9664",\n  "confirm_delete": "\u786e\u8ba4\u5220\u9664\uff1f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a"\n}\n'}}])}();