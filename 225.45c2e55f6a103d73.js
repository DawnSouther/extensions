(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[225],{72225:(i,r,o)=>{"use strict";o.r(r),o.d(r,{PopoverApiComponent:()=>X,PopoverOverviewComponent:()=>L,routes:()=>As});var c=o(96814),U=o(52240),N=o(81208),q=o(26236),d=o(56223),T=o(32296),H=o(75986),J=o(14554),R=o(64170),W=o(2032),_=o(87466),G=o(98525),B=o(92202),C=o(4300),P=o(36028),y=o(33651),w=o(68484),s=o(19212),O=o(47394),K=o(22096),z=o(63019),Q=o(32181),V=o(48180),$=o(59773),Y=o(78645),g=o(86825);const ss=(0,g.X$)("transformPopover",[(0,g.SB)("void",(0,g.oB)({opacity:0,transform:"scale(0.8)"})),(0,g.eR)("void => enter",(0,g.jt)("120ms cubic-bezier(0, 0, 0.2, 1)",(0,g.oB)({opacity:1,transform:"scale(1)"}))),(0,g.eR)("* => void",(0,g.jt)("100ms 25ms linear",(0,g.oB)({opacity:0})))]),Z=new s.OlP("MtxPopoverContent");let ts=(()=>{class e{constructor(t,n,a,l,p,m,v){this._template=t,this._componentFactoryResolver=n,this._appRef=a,this._injector=l,this._viewContainerRef=p,this._document=m,this._changeDetectorRef=v,this._attached=new Y.x}attach(t={}){this._portal||(this._portal=new w.UE(this._template,this._viewContainerRef)),this.detach(),this._outlet||(this._outlet=new w.u0(this._document.createElement("div"),this._componentFactoryResolver,this._appRef,this._injector));const n=this._template.elementRef.nativeElement;n.parentNode.insertBefore(this._outlet.outletElement,n),this._changeDetectorRef&&this._changeDetectorRef.markForCheck(),this._portal.attach(this._outlet,t),this._attached.next()}detach(){this._portal.isAttached&&this._portal.detach()}ngOnDestroy(){this._outlet&&this._outlet.dispose()}static#s=this.\u0275fac=function(n){return new(n||e)(s.Y36(s.Rgc),s.Y36(s._Vd),s.Y36(s.z2F),s.Y36(s.zs3),s.Y36(s.s_b),s.Y36(c.K0),s.Y36(s.sBO))};static#t=this.\u0275dir=s.lG2({type:e})}return e})(),ns=(()=>{class e extends ts{static#s=this.\u0275fac=(()=>{let t;return function(a){return(t||(t=s.n5z(e)))(a||e)}})();static#t=this.\u0275dir=s.lG2({type:e,selectors:[["ng-template","mtxPopoverContent",""]],standalone:!0,features:[s._Bn([{provide:Z,useExisting:e}]),s.qOj]})}return e})();function ls(e,h){if(1&e&&s._UZ(0,"div",3),2&e){const t=s.oxw(2);s.Q6J("ngStyle",t.arrowStyles)}}function ps(e,h){if(1&e){const t=s.EpF();s.TgZ(0,"div",0),s.NdJ("keydown",function(a){s.CHM(t);const l=s.oxw();return s.KtG(l._handleKeydown(a))})("click",function(){s.CHM(t);const a=s.oxw();return s.KtG(a._handleClick())})("mouseover",function(){s.CHM(t);const a=s.oxw();return s.KtG(a._handleMouseOver())})("mouseleave",function(){s.CHM(t);const a=s.oxw();return s.KtG(a._handleMouseLeave())})("@transformPopover.start",function(a){s.CHM(t);const l=s.oxw();return s.KtG(l._onAnimationStart(a))})("@transformPopover.done",function(a){s.CHM(t);const l=s.oxw();return s.KtG(l._onAnimationDone(a))}),s.TgZ(1,"div",1),s.Hsn(2),s.qZA(),s.YNc(3,ls,1,1,"div",2),s.qZA()}if(2&e){const t=s.oxw();s.ekj("mtx-popover-panel-without-arrow",t.hideArrow),s.Q6J("id",t.panelId)("ngClass",t._classList)("@transformPopover",t._panelAnimationState)("cdkTrapFocus",t.focusTrapEnabled)("cdkTrapFocusAutoCapture",t.focusTrapAutoCaptureEnabled),s.uIk("aria-label",t.ariaLabel||null)("aria-labelledby",t.ariaLabelledby||null)("aria-describedby",t.ariaDescribedby||null),s.xp6(3),s.um2(3,t.hideArrow?-1:3)}}const rs=["*"],is=new s.OlP("mtx-popover-default-options",{providedIn:"root",factory:function cs(){return{backdropClass:"cdk-overlay-transparent-backdrop"}}});let hs=0,b=(()=>{class e{get position(){return this._position}set position(t){["before","after","above","below"].includes(t[0])||function es(){throw Error("mtxPopoverPosition[0] value must be either 'above', 'below', 'before' or 'after'.\n    Example: <mtx-popover [position]=\"['below', 'after']\" #popover=\"mtxPopover\"></mtx-popover>")}(),["before","after","above","below","center"].includes(t[1])||function os(){throw Error("mtxPopoverPosition[1] value must be either 'above', 'below', 'before', 'after' or 'center'.\n    Example: <mtx-popover [position]=\"['below', 'after']\" #popover=\"mtxPopover\"></mtx-popover>")}(),this._position=t,this.setPositionClasses()}get elevation(){return Math.max(0,Math.min(Math.round(this._elevation),24))}set elevation(t){this._elevation=t}set panelClass(t){t&&t.length&&(this._classList=t.split(" ").reduce((n,a)=>(n[a]=!0,n),{}),this._elementRef.nativeElement.className="",this.setPositionClasses())}get classList(){return this.panelClass}set classList(t){this.panelClass=t}constructor(t,n,a){this._elementRef=t,this._ngZone=n,this._defaultOptions=a,this._elevationPrefix="mat-elevation-z",this._classList={},this._panelAnimationState="void",this._animationDone=new Y.x,this._isAnimating=!1,this.closeDisabled=!1,this.overlayPanelClass=this._defaultOptions.overlayPanelClass||"",this.backdropClass=this._defaultOptions.backdropClass,this.triggerEvent=this._defaultOptions.triggerEvent??"hover",this.enterDelay=this._defaultOptions.enterDelay??100,this.leaveDelay=this._defaultOptions.leaveDelay??100,this._position=this._defaultOptions.position??["below","after"],this.xOffset=this._defaultOptions.xOffset??0,this.yOffset=this._defaultOptions.yOffset??0,this.arrowWidth=this._defaultOptions.arrowWidth??16,this.arrowHeight=this._defaultOptions.arrowHeight??16,this.arrowOffsetX=this._defaultOptions.arrowOffsetX??20,this.arrowOffsetY=this._defaultOptions.arrowOffsetY??20,this.hideArrow=this._defaultOptions.hideArrow??!1,this.closeOnPanelClick=this._defaultOptions.closeOnPanelClick??!1,this.closeOnBackdropClick=this._defaultOptions.closeOnBackdropClick??!0,this.focusTrapEnabled=this._defaultOptions.focusTrapEnabled??!1,this.focusTrapAutoCaptureEnabled=this._defaultOptions.focusTrapAutoCaptureEnabled??!1,this.hasBackdrop=this._defaultOptions.hasBackdrop,this._elevation=this._defaultOptions.elevation??8,this.closed=new s.vpe,this.panelId="mtx-popover-panel-"+hs++}ngOnInit(){this.setPositionClasses()}ngOnDestroy(){this.closed.complete()}_handleKeydown(t){t.keyCode===P.hY&&((0,P.Vb)(t)||(t.preventDefault(),this.closed.emit("keydown")))}_handleClick(){this.closeOnPanelClick&&this.closed.emit("click")}_handleMouseOver(){"hover"===this.triggerEvent&&(this.closeDisabled=!0)}_handleMouseLeave(){"hover"===this.triggerEvent&&setTimeout(()=>{this.closeDisabled=!1,this.closed.emit()},this.leaveDelay)}setCurrentStyles(t=this.position){const n="after"===t[1]?this.arrowOffsetX-this.arrowWidth/2+"px":"center"===t[1]?`calc(50% - ${this.arrowWidth/2}px)`:"",a="before"===t[1]?this.arrowOffsetX-this.arrowWidth/2+"px":"";this.arrowStyles="above"===t[0]||"below"===t[0]?{left:"ltr"===this.direction?n:a,right:"ltr"===this.direction?a:n}:{top:"below"===t[1]?this.arrowOffsetY-this.arrowHeight/2+"px":"",bottom:"above"===t[1]?this.arrowOffsetY-this.arrowHeight/2+"px":"center"===t[1]?`calc(50% - ${this.arrowHeight/2}px)`:""}}setPositionClasses(t=this.position){this._classList["mtx-popover-before-above"]="before"===t[0]&&"above"===t[1],this._classList["mtx-popover-before-center"]="before"===t[0]&&"center"===t[1],this._classList["mtx-popover-before-below"]="before"===t[0]&&"below"===t[1],this._classList["mtx-popover-after-above"]="after"===t[0]&&"above"===t[1],this._classList["mtx-popover-after-center"]="after"===t[0]&&"center"===t[1],this._classList["mtx-popover-after-below"]="after"===t[0]&&"below"===t[1],this._classList["mtx-popover-above-before"]="above"===t[0]&&"before"===t[1],this._classList["mtx-popover-above-center"]="above"===t[0]&&"center"===t[1],this._classList["mtx-popover-above-after"]="above"===t[0]&&"after"===t[1],this._classList["mtx-popover-below-before"]="below"===t[0]&&"before"===t[1],this._classList["mtx-popover-below-center"]="below"===t[0]&&"center"===t[1],this._classList["mtx-popover-below-after"]="below"===t[0]&&"after"===t[1]}setElevation(){const t=`${this._elevationPrefix}${this.elevation}`;this._previousElevation&&(this._classList[this._previousElevation]=!1),this._classList[t]=!0,this._previousElevation=t}_startAnimation(){this._panelAnimationState="enter"}_resetAnimation(){this._panelAnimationState="void"}_onAnimationDone(t){this._animationDone.next(t),this._isAnimating=!1}_onAnimationStart(t){this._isAnimating=!0}static#s=this.\u0275fac=function(n){return new(n||e)(s.Y36(s.SBq),s.Y36(s.R0b),s.Y36(is))};static#t=this.\u0275cmp=s.Xpm({type:e,selectors:[["mtx-popover"]],contentQueries:function(n,a,l){if(1&n&&s.Suo(l,Z,5),2&n){let p;s.iGM(p=s.CRH())&&(a.lazyContent=p.first)}},viewQuery:function(n,a){if(1&n&&s.Gf(s.Rgc,5),2&n){let l;s.iGM(l=s.CRH())&&(a.templateRef=l.first)}},inputs:{backdropClass:"backdropClass",ariaLabel:[s.lbL.None,"aria-label","ariaLabel"],ariaLabelledby:[s.lbL.None,"aria-labelledby","ariaLabelledby"],ariaDescribedby:[s.lbL.None,"aria-describedby","ariaDescribedby"],triggerEvent:"triggerEvent",enterDelay:"enterDelay",leaveDelay:"leaveDelay",position:"position",xOffset:"xOffset",yOffset:"yOffset",arrowWidth:"arrowWidth",arrowHeight:"arrowHeight",arrowOffsetX:"arrowOffsetX",arrowOffsetY:"arrowOffsetY",hideArrow:[s.lbL.HasDecoratorInputTransform,"hideArrow","hideArrow",s.VuI],closeOnPanelClick:[s.lbL.HasDecoratorInputTransform,"closeOnPanelClick","closeOnPanelClick",s.VuI],closeOnBackdropClick:[s.lbL.HasDecoratorInputTransform,"closeOnBackdropClick","closeOnBackdropClick",s.VuI],focusTrapEnabled:[s.lbL.HasDecoratorInputTransform,"focusTrapEnabled","focusTrapEnabled",s.VuI],focusTrapAutoCaptureEnabled:[s.lbL.HasDecoratorInputTransform,"focusTrapAutoCaptureEnabled","focusTrapAutoCaptureEnabled",s.VuI],hasBackdrop:[s.lbL.HasDecoratorInputTransform,"hasBackdrop","hasBackdrop",s.VuI],elevation:"elevation",panelClass:[s.lbL.None,"class","panelClass"],classList:"classList"},outputs:{closed:"closed"},exportAs:["mtxPopover"],standalone:!0,features:[s.Xq5,s.jDz],ngContentSelectors:rs,decls:1,vars:0,consts:[["tabindex","-1","role","dialog",1,"mtx-popover-panel",3,"id","ngClass","cdkTrapFocus","cdkTrapFocusAutoCapture","keydown","click","mouseover","mouseleave"],[1,"mtx-popover-content"],["class","mtx-popover-direction-arrow",3,"ngStyle"],[1,"mtx-popover-direction-arrow",3,"ngStyle"]],template:function(n,a){1&n&&(s.F$t(),s.YNc(0,ps,4,11,"ng-template"))},dependencies:[c.mk,c.PC,C.mK],styles:['.mtx-popover-panel{position:relative;max-height:calc(100vh - 48px);padding:8px;font-size:inherit;outline:0;border-radius:var(--mtx-popover-container-shape);background-color:var(--mtx-popover-background-color);color:var(--mtx-popover-text-color)}.mtx-popover-panel[class*=mtx-popover-below]{margin-top:calc(.5em + 2px)}.mtx-popover-panel[class*=mtx-popover-above]{margin-bottom:calc(.5em + 2px)}.mtx-popover-panel[class*=mtx-popover-before]{margin-right:calc(.5em + 2px)}[dir=rtl] .mtx-popover-panel[class*=mtx-popover-before]{margin-right:auto;margin-left:calc(.5em + 2px)}.mtx-popover-panel[class*=mtx-popover-after]{margin-left:calc(.5em + 2px)}[dir=rtl] .mtx-popover-panel[class*=mtx-popover-after]{margin-left:auto;margin-right:calc(.5em + 2px)}.mtx-popover-panel.mtx-popover-panel-without-arrow{margin:0}.mtx-popover-direction-arrow{position:absolute}.mtx-popover-direction-arrow:before,.mtx-popover-direction-arrow:after{position:absolute;display:inline-block;content:"";border-width:.5em;border-style:solid}.mtx-popover-direction-arrow:before{border-color:var(--mtx-popover-arrow-outline-color)}.mtx-popover-direction-arrow:after{border-width:calc(.5em - 1px);border-color:var(--mtx-popover-background-color)}[class*=mtx-popover-below] .mtx-popover-direction-arrow,[class*=mtx-popover-above] .mtx-popover-direction-arrow{width:1em}[class*=mtx-popover-below] .mtx-popover-direction-arrow:before,[class*=mtx-popover-below] .mtx-popover-direction-arrow:after,[class*=mtx-popover-above] .mtx-popover-direction-arrow:before,[class*=mtx-popover-above] .mtx-popover-direction-arrow:after{border-left-color:transparent;border-right-color:transparent}[class*=mtx-popover-below] .mtx-popover-direction-arrow:after,[class*=mtx-popover-above] .mtx-popover-direction-arrow:after{left:1px}[dir=rtl] [class*=mtx-popover-below] .mtx-popover-direction-arrow:after,[dir=rtl] [class*=mtx-popover-above] .mtx-popover-direction-arrow:after{right:1px;left:auto}[class*=mtx-popover-below] .mtx-popover-direction-arrow{top:0}[class*=mtx-popover-below] .mtx-popover-direction-arrow:before,[class*=mtx-popover-below] .mtx-popover-direction-arrow:after{bottom:0;border-top-width:0}[class*=mtx-popover-above] .mtx-popover-direction-arrow{bottom:0}[class*=mtx-popover-above] .mtx-popover-direction-arrow:before,[class*=mtx-popover-above] .mtx-popover-direction-arrow:after{top:0;border-bottom-width:0}[class*=mtx-popover-before] .mtx-popover-direction-arrow,[class*=mtx-popover-after] .mtx-popover-direction-arrow{height:1em}[class*=mtx-popover-before] .mtx-popover-direction-arrow:before,[class*=mtx-popover-before] .mtx-popover-direction-arrow:after,[class*=mtx-popover-after] .mtx-popover-direction-arrow:before,[class*=mtx-popover-after] .mtx-popover-direction-arrow:after{border-top-color:transparent;border-bottom-color:transparent}[class*=mtx-popover-before] .mtx-popover-direction-arrow:after,[class*=mtx-popover-after] .mtx-popover-direction-arrow:after{top:1px}[class*=mtx-popover-before] .mtx-popover-direction-arrow{right:0}[class*=mtx-popover-before] .mtx-popover-direction-arrow:before,[class*=mtx-popover-before] .mtx-popover-direction-arrow:after{left:0;border-right-width:0}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow{right:auto;left:0}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:before,[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:after{left:auto;right:0;border-left-width:0}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:before{border-right-width:.5em}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:after{border-right-width:calc(.5em - 1px)}[class*=mtx-popover-after] .mtx-popover-direction-arrow{left:0}[class*=mtx-popover-after] .mtx-popover-direction-arrow:before,[class*=mtx-popover-after] .mtx-popover-direction-arrow:after{right:0;border-left-width:0}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow{left:auto;right:0}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:before,[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:after{right:auto;left:0;border-right-width:0}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:before{border-left-width:.5em}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:after{border-left-width:calc(.5em - 1px)}\n'],encapsulation:2,data:{animation:[ss]},changeDetection:0})}return e})();var ms=o(49388);const F=new s.OlP("mtx-popover-scroll-strategy",{providedIn:"root",factory:()=>{const e=(0,s.f3M)(y.aV);return()=>e.scrollStrategies.reposition()}});let M=(()=>{class e{get popover(){return this._popover}set popover(t){t!==this._popover&&(this._popover=t,this._popoverCloseSubscription.unsubscribe(),t&&(this._popoverCloseSubscription=t.closed.subscribe(n=>{this._destroyPopover()})))}constructor(t,n,a,l,p,m,v){this._overlay=t,this._elementRef=n,this._viewContainerRef=a,this._dir=p,this._changeDetectorRef=m,this._focusMonitor=v,this._overlayRef=null,this._popoverOpen=!1,this._halt=!1,this._positionSubscription=O.w0.EMPTY,this._popoverCloseSubscription=O.w0.EMPTY,this._closingActionsSubscription=O.w0.EMPTY,this._openedBy=void 0,this.popoverOpened=new s.vpe,this.popoverClosed=new s.vpe,this._scrollStrategy=l}ngAfterContentInit(){this._checkPopover(),this._setCurrentConfig()}ngOnDestroy(){this._overlayRef&&(this._overlayRef.dispose(),this._overlayRef=null),this._positionSubscription.unsubscribe(),this._popoverCloseSubscription.unsubscribe(),this._closingActionsSubscription.unsubscribe()}_setCurrentConfig(){this.triggerEvent&&(this.popover.triggerEvent=this.triggerEvent),this.popover.setCurrentStyles()}get popoverOpen(){return this._popoverOpen}get dir(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}_handleClick(t){"click"===this.popover.triggerEvent&&this.togglePopover()}_handleMouseEnter(t){this._halt=!1,"hover"===this.popover.triggerEvent&&(this._mouseoverTimer=setTimeout(()=>{this.openPopover()},this.popover.enterDelay))}_handleMouseLeave(t){"hover"===this.popover.triggerEvent&&(this._mouseoverTimer&&(clearTimeout(this._mouseoverTimer),this._mouseoverTimer=null),this._popoverOpen?setTimeout(()=>{this.popover.closeDisabled||this.closePopover()},this.popover.leaveDelay):this._halt=!0)}_handleMousedown(t){(0,C.X6)(t)||(this._openedBy=0===t.button?"mouse":void 0)}_handleKeydown(t){const n=t.keyCode;(n===P.K5||n===P.L_)&&(this._openedBy="keyboard")}togglePopover(){return this._popoverOpen?this.closePopover():this.openPopover()}openPopover(){if(this._popoverOpen||this._halt)return;this._checkPopover();const t=this._createOverlay(),n=t.getConfig();this._setPosition(n.positionStrategy),"click"===this.popover.triggerEvent&&(n.hasBackdrop=this.popover.hasBackdrop??!0),t.attach(this._getPortal()),this.popover.lazyContent&&this.popover.lazyContent.attach(this.popoverData),this._closingActionsSubscription=this._popoverClosingActions().subscribe(()=>this.closePopover()),this._initPopover(),this.popover instanceof b&&this.popover._startAnimation()}closePopover(){this.popover.closed.emit()}focus(t,n){this._focusMonitor&&t?this._focusMonitor.focusVia(this._elementRef,t,n):this._elementRef.nativeElement.focus(n)}_destroyPopover(t){if(!this._overlayRef||!this.popoverOpen)return;this._mouseoverTimer&&(clearTimeout(this._mouseoverTimer),this._mouseoverTimer=null);const n=this.popover;this._closingActionsSubscription.unsubscribe(),this._overlayRef.detach(),this._openedBy=void 0,n instanceof b?(n._resetAnimation(),n.lazyContent?n._animationDone.pipe((0,Q.h)(a=>"void"===a.toState),(0,V.q)(1),(0,$.R)(n.lazyContent._attached)).subscribe({next:()=>n.lazyContent.detach(),complete:()=>this._setIsPopoverOpen(!1)}):this._setIsPopoverOpen(!1)):(this._setIsPopoverOpen(!1),n.lazyContent&&n.lazyContent.detach())}_initPopover(){this.popover.direction=this.dir,this.popover.setElevation(),this._setIsPopoverOpen(!0)}_setIsPopoverOpen(t){this._popoverOpen=t,this._popoverOpen?this.popoverOpened.emit():this.popoverClosed.emit()}_checkPopover(){this.popover||function as(){throw Error('mtx-popover-trigger: must pass in an mtx-popover instance.\n\n    Example:\n      <mtx-popover #popover="mtxPopover"></mtx-popover>\n      <button [mtxPopoverTriggerFor]="popover"></button>')}()}_createOverlay(){if(this._overlayRef)this._overlayRef.getConfig().positionStrategy.setOrigin(this._getTargetElement());else{const t=this._getOverlayConfig();this._subscribeToPositions(t.positionStrategy),this._overlayRef=this._overlay.create(t)}return this._overlayRef}_getOverlayConfig(){return new y.X_({positionStrategy:this._overlay.position().flexibleConnectedTo(this._getTargetElement()).withLockedPosition().withGrowAfterOpen().withTransformOriginOn(".mtx-popover-panel"),backdropClass:this.popover.backdropClass||"cdk-overlay-transparent-backdrop",panelClass:this.popover.overlayPanelClass,scrollStrategy:this._scrollStrategy(),direction:this._dir})}_getTargetElement(){return this.targetElement?this.targetElement.elementRef:this._elementRef}_subscribeToPositions(t){this._positionSubscription=t.positionChanges.subscribe(n=>{const a="start"===n.connectionPair.overlayX?"after":"end"===n.connectionPair.overlayX?"before":"center",l="top"===n.connectionPair.overlayY?"below":"bottom"===n.connectionPair.overlayY?"above":"center",p="above"===this.popover.position[0]||"below"===this.popover.position[0]?[l,a]:[a,l];this._changeDetectorRef.markForCheck(),this.popover.setCurrentStyles(p),this.popover.setPositionClasses(p)})}_setPosition(t){const[n,a,l]="before"===this.popover.position[0]||"after"===this.popover.position[1]?["start","center","end"]:"after"===this.popover.position[0]||"before"===this.popover.position[1]?["end","center","start"]:["center","start","end"],[p,m,v]="above"===this.popover.position[0]||"below"===this.popover.position[1]?["top","center","bottom"]:"below"===this.popover.position[0]||"above"===this.popover.position[1]?["bottom","center","top"]:["center","top","bottom"],[u,k]="below"===this.popover.position[0]||"above"===this.popover.position[0]?[n,n]:"before"===this.popover.position[0]?["end","start"]:["start","end"],[f,E]="before"===this.popover.position[0]||"after"===this.popover.position[0]?[p,p]:"below"===this.popover.position[0]?["top","bottom"]:["bottom","top"],A=u,D=f,j=this.popover.xOffset&&!isNaN(Number(this.popover.xOffset))?Number("ltr"===this.dir?this.popover.xOffset:-this.popover.xOffset):0,x=this.popover.yOffset&&!isNaN(Number(this.popover.yOffset))?Number(this.popover.yOffset):0;let S=[{originX:n,originY:p,overlayX:u,overlayY:f}];("above"===this.popover.position[0]||"below"===this.popover.position[0])&&(S=[{originX:n,originY:p,overlayX:u,overlayY:f,offsetY:x},{originX:a,originY:p,overlayX:a,overlayY:f,offsetY:x},{originX:l,originY:p,overlayX:l,overlayY:f,offsetY:x},{originX:n,originY:D,overlayX:u,overlayY:E,offsetY:-x},{originX:a,originY:D,overlayX:a,overlayY:E,offsetY:-x},{originX:l,originY:D,overlayX:l,overlayY:E,offsetY:-x}]),("before"===this.popover.position[0]||"after"===this.popover.position[0])&&(S=[{originX:n,originY:p,overlayX:u,overlayY:f,offsetX:j},{originX:n,originY:m,overlayX:u,overlayY:m,offsetX:j},{originX:n,originY:v,overlayX:u,overlayY:v,offsetX:j},{originX:A,originY:p,overlayX:k,overlayY:f,offsetX:-j},{originX:A,originY:m,overlayX:k,overlayY:m,offsetX:-j},{originX:A,originY:v,overlayX:k,overlayY:v,offsetX:-j}]),t.withPositions(S).withDefaultOffsetX(j).withDefaultOffsetY(x)}_popoverClosingActions(){const t="click"===this.popover.triggerEvent&&!0===this.popover.closeOnBackdropClick?this._overlayRef.backdropClick():(0,K.of)(),n=this._overlayRef.detachments();return(0,z.T)(t,n)}_getPortal(){return(!this._portal||this._portal.templateRef!==this.popover.templateRef)&&(this._portal=new w.UE(this.popover.templateRef,this._viewContainerRef)),this._portal}static#s=this.\u0275fac=function(n){return new(n||e)(s.Y36(y.aV),s.Y36(s.SBq),s.Y36(s.s_b),s.Y36(F),s.Y36(ms.Is,8),s.Y36(s.sBO),s.Y36(C.tE))};static#t=this.\u0275dir=s.lG2({type:e,selectors:[["","mtx-popover-trigger-for",""],["","mtxPopoverTriggerFor",""]],hostAttrs:["aria-haspopup","true"],hostVars:2,hostBindings:function(n,a){1&n&&s.NdJ("click",function(p){return a._handleClick(p)})("mouseenter",function(p){return a._handleMouseEnter(p)})("mouseleave",function(p){return a._handleMouseLeave(p)})("mousedown",function(p){return a._handleMousedown(p)})("keydown",function(p){return a._handleKeydown(p)}),2&n&&s.uIk("aria-expanded",a.popoverOpen||null)("aria-controls",a.popoverOpen?a.popover.panelId:null)},inputs:{popover:[s.lbL.None,"mtxPopoverTriggerFor","popover"],popoverData:[s.lbL.None,"mtxPopoverTriggerData","popoverData"],targetElement:[s.lbL.None,"mtxPopoverTargetAt","targetElement"],triggerEvent:[s.lbL.None,"mtxPopoverTriggerOn","triggerEvent"]},outputs:{popoverOpened:"popoverOpened",popoverClosed:"popoverClosed"},exportAs:["mtxPopoverTrigger"],standalone:!0})}return e})();function ds(e,h){if(1&e&&(s.TgZ(0,"mat-option",12),s._uU(1),s.qZA()),2&e){const t=h.$implicit;s.Q6J("value",t),s.xp6(),s.Oqu(t)}}function vs(e,h){if(1&e&&(s.TgZ(0,"mat-option",12),s._uU(1),s.qZA()),2&e){const t=h.$implicit;s.Q6J("value",t),s.xp6(),s.Oqu(t)}}function us(e,h){if(1&e){const t=s.EpF();s.TgZ(0,"section")(1,"mat-form-field")(2,"mat-label"),s._uU(3,"EnterDelay"),s.qZA(),s.TgZ(4,"input",2),s.NdJ("ngModelChange",function(a){s.CHM(t);const l=s.oxw();return s.KtG(l.enterDelay=a)}),s.qZA()(),s.TgZ(5,"mat-form-field")(6,"mat-label"),s._uU(7,"LeaveDelay"),s.qZA(),s.TgZ(8,"input",2),s.NdJ("ngModelChange",function(a){s.CHM(t);const l=s.oxw();return s.KtG(l.leaveDelay=a)}),s.qZA()()()}if(2&e){const t=s.oxw();s.xp6(4),s.Q6J("ngModel",t.enterDelay),s.xp6(4),s.Q6J("ngModel",t.leaveDelay)}}function fs(e,h){if(1&e){const t=s.EpF();s.TgZ(0,"section")(1,"mat-checkbox",1),s.NdJ("ngModelChange",function(a){s.CHM(t);const l=s.oxw();return s.KtG(l.hasBackdrop=a)}),s._uU(2,"HasBackdrop"),s.qZA()()}if(2&e){const t=s.oxw();s.xp6(),s.Q6J("ngModel",t.hasBackdrop)}}function js(e,h){if(1&e&&(s.TgZ(0,"button",7,13),s._uU(2," Show Popover With Hover "),s.qZA()),2&e){s.oxw();const t=s.MAs(55);s.Q6J("mtxPopoverTriggerFor",t)}}function xs(e,h){if(1&e&&(s.TgZ(0,"button",8,14),s._uU(2," Show Popover With Click "),s.qZA()),2&e){s.oxw();const t=s.MAs(55);s.Q6J("mtxPopoverTriggerFor",t)}}const bs=(e,h)=>[e,h],_s={title:"Configurable popover",component:(()=>{class e{constructor(){this.triggerEvent="hover",this.enterDelay=100,this.leaveDelay=100,this.xOffset=0,this.yOffset=0,this.closeOnPanelClick=!1,this.hasBackdrop=!0,this.elevation=8,this.hideArrow=!1,this.positionXOptions=["before","after"],this.positionYOptions=["above","below"],this.positionStartOptions=[...this.positionYOptions,...this.positionXOptions],this.positionEndOptions=[],this.positionStart="below",this.positionEnd="after"}onPositionStartChange(t){this.positionXOptions.includes(this.positionStart)&&(this.positionEnd="below",this.positionEndOptions=[...this.positionYOptions,"center"]),this.positionYOptions.includes(this.positionStart)&&(this.positionEnd="after",this.positionEndOptions=[...this.positionXOptions,"center"])}ngOnInit(){this.onPositionStartChange()}static#s=this.\u0275fac=function(n){return new(n||e)};static#t=this.\u0275cmp=s.Xpm({type:e,selectors:[["popover-example"]],standalone:!0,features:[s.jDz],decls:58,vars:25,consts:[[1,"popover-position"],[3,"ngModel","ngModelChange"],["matInput","","type","number",3,"ngModel","ngModelChange"],["value","hover"],["value","click"],["min","0","max","24","discrete",""],["matSliderThumb","",3,"ngModel","ngModelChange"],["cdkDrag","","mat-raised-button","","color","primary","mtxPopoverTriggerOn","hover",3,"mtxPopoverTriggerFor"],["cdkDrag","","mat-raised-button","","color","primary","mtxPopoverTriggerOn","click",3,"mtxPopoverTriggerFor"],[3,"enterDelay","leaveDelay","position","xOffset","yOffset","closeOnPanelClick","closeOnBackdropClick","hasBackdrop","elevation","hideArrow"],["popover","mtxPopover"],[2,"max-width","300px"],[3,"value"],["popoverTrigger","mtxPopoverTrigger"],["popoverTrigger2","mtxPopoverTrigger"]],template:function(n,a){1&n&&(s.TgZ(0,"h2"),s._uU(1,"Popover configuration"),s.qZA(),s.TgZ(2,"section",0)(3,"label"),s._uU(4,"Position:"),s.qZA(),s._uU(5," [ "),s.TgZ(6,"mat-form-field")(7,"mat-label"),s._uU(8,"Start"),s.qZA(),s.TgZ(9,"mat-select",1),s.NdJ("ngModelChange",function(p){return a.positionStart=p})("ngModelChange",function(){return a.onPositionStartChange()}),s.SjG(10,ds,2,2,"mat-option",12,s.x6l),s.qZA()(),s._uU(12," , "),s.TgZ(13,"mat-form-field")(14,"mat-label"),s._uU(15,"End"),s.qZA(),s.TgZ(16,"mat-select",1),s.NdJ("ngModelChange",function(p){return a.positionEnd=p}),s.SjG(17,vs,2,2,"mat-option",12,s.x6l),s.qZA()(),s._uU(19," ]\n"),s.qZA(),s.TgZ(20,"section")(21,"mat-form-field")(22,"mat-label"),s._uU(23,"XOffset"),s.qZA(),s.TgZ(24,"input",2),s.NdJ("ngModelChange",function(p){return a.xOffset=p}),s.qZA()(),s.TgZ(25,"mat-form-field")(26,"mat-label"),s._uU(27,"YOffset"),s.qZA(),s.TgZ(28,"input",2),s.NdJ("ngModelChange",function(p){return a.yOffset=p}),s.qZA()()(),s.TgZ(29,"section")(30,"label"),s._uU(31,"TriggerEvent:"),s.qZA(),s.TgZ(32,"mat-radio-group",1),s.NdJ("ngModelChange",function(p){return a.triggerEvent=p}),s.TgZ(33,"mat-radio-button",3),s._uU(34,"Hover"),s.qZA(),s.TgZ(35,"mat-radio-button",4),s._uU(36,"Click"),s.qZA()()(),s.YNc(37,us,9,2,"section"),s.TgZ(38,"section")(39,"mat-checkbox",1),s.NdJ("ngModelChange",function(p){return a.closeOnPanelClick=p}),s._uU(40,"CloseOnPanelClick"),s.qZA()(),s.YNc(41,fs,3,1,"section"),s.TgZ(42,"section")(43,"mat-checkbox",1),s.NdJ("ngModelChange",function(p){return a.hideArrow=p}),s._uU(44,"HideArrow"),s.qZA()(),s.TgZ(45,"section")(46,"label"),s._uU(47,"Elevation:"),s.qZA(),s.TgZ(48,"mat-slider",5)(49,"input",6),s.NdJ("ngModelChange",function(p){return a.elevation=p}),s.qZA()()(),s.TgZ(50,"h2"),s._uU(51,"Result"),s.qZA(),s.YNc(52,js,3,1,"button",7)(53,xs,3,1,"button",8),s.TgZ(54,"mtx-popover",9,10)(56,"div",11),s._uU(57," A material design popover component created using Angular with the Angular CDK. "),s.qZA()()),2&n&&(s.xp6(9),s.Q6J("ngModel",a.positionStart),s.xp6(),s.wJu(a.positionStartOptions),s.xp6(6),s.Q6J("ngModel",a.positionEnd),s.xp6(),s.wJu(a.positionEndOptions),s.xp6(7),s.Q6J("ngModel",a.xOffset),s.xp6(4),s.Q6J("ngModel",a.yOffset),s.xp6(4),s.Q6J("ngModel",a.triggerEvent),s.xp6(5),s.um2(37,"hover"===a.triggerEvent?37:-1),s.xp6(2),s.Q6J("ngModel",a.closeOnPanelClick),s.xp6(2),s.um2(41,"click"===a.triggerEvent?41:-1),s.xp6(2),s.Q6J("ngModel",a.hideArrow),s.xp6(6),s.Q6J("ngModel",a.elevation),s.xp6(3),s.um2(52,"hover"===a.triggerEvent?52:-1),s.xp6(),s.um2(53,"click"===a.triggerEvent?53:-1),s.xp6(),s.Q6J("enterDelay",a.enterDelay)("leaveDelay",a.leaveDelay)("position",s.WLB(22,bs,a.positionStart,a.positionEnd))("xOffset",a.xOffset)("yOffset",a.yOffset)("closeOnPanelClick",a.closeOnPanelClick)("closeOnBackdropClick",!0)("hasBackdrop",a.hasBackdrop)("elevation",a.elevation)("hideArrow",a.hideArrow))},dependencies:[d.u5,d.Fj,d.wV,d.JJ,d.On,R.KE,W.Nt,R.hX,G.gD,J.ey,_.VQ,_.U0,H.oG,B.pH,B.$5,T.lW,q.Zt,M,b],styles:[".mat-mdc-form-field[_ngcontent-%COMP%]{margin-right:1rem}.popover-position[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]{width:120px;margin:0;font-size:14px}label[_ngcontent-%COMP%]{padding:0 8px}"]})}return e})(),files:[{file:"app.component.html",content:o(79778),filecontent:o(65618)},{file:"app.component.ts",content:o(61843),filecontent:o(94924)},{file:"app.component.scss",content:o(94791),filecontent:o(67708)}]};function Ps(e,h){if(1&e&&(s.TgZ(0,"div"),s._uU(1," Lazy rendering with additional context data "),s.TgZ(2,"strong"),s._uU(3),s.qZA(),s._uU(4,". "),s.qZA()),2&e){const t=h.name;s.xp6(3),s.Oqu(t)}}const ys=()=>({name:"Sally"}),Ts=()=>({name:"Bob"}),Cs={title:"Popover lazy rendering",component:(()=>{class e{static#s=this.\u0275fac=function(n){return new(n||e)};static#t=this.\u0275cmp=s.Xpm({type:e,selectors:[["popover-example"]],standalone:!0,features:[s.jDz],decls:9,vars:6,consts:[["popover","mtxPopover"],["mtxPopoverContent",""],["mat-raised-button","","color","primary",3,"mtxPopoverTriggerFor","mtxPopoverTriggerData"],["popoverTrigger","mtxPopoverTrigger"]],template:function(n,a){if(1&n&&(s.TgZ(0,"mtx-popover",null,0),s.YNc(2,Ps,5,1,"ng-template",1),s.qZA(),s.TgZ(3,"button",2,3),s._uU(5," Show Sally's Popover\n"),s.qZA(),s.TgZ(6,"button",2,3),s._uU(8," Show Bob's Popover\n"),s.qZA()),2&n){const l=s.MAs(1);s.xp6(3),s.Q6J("mtxPopoverTriggerFor",l)("mtxPopoverTriggerData",s.DdM(4,ys)),s.xp6(3),s.Q6J("mtxPopoverTriggerFor",l)("mtxPopoverTriggerData",s.DdM(5,Ts))}},dependencies:[b,ns,T.lW,M],styles:[".mat-mdc-button-base[_ngcontent-%COMP%]{margin:0 .5em}"]})}return e})(),files:[{file:"app.component.html",content:o(35911),filecontent:o(36583)},{file:"app.component.ts",content:o(18554),filecontent:o(86075)},{file:"app.component.scss",content:o(17944),filecontent:o(19781)}]};let ws=(()=>{class e{constructor(t){this.elementRef=t}static#s=this.\u0275fac=function(n){return new(n||e)(s.Y36(s.SBq))};static#t=this.\u0275dir=s.lG2({type:e,selectors:[["mtx-popover-target"],["","mtxPopoverTarget",""]],exportAs:["mtxPopoverTarget"],standalone:!0})}return e})();const Os={title:"Popover target",component:(()=>{class e{static#s=this.\u0275fac=function(n){return new(n||e)};static#t=this.\u0275cmp=s.Xpm({type:e,selectors:[["popover-example"]],standalone:!0,features:[s.jDz],decls:18,vars:5,consts:[[3,"ngModel","ngModelChange"],[3,"value"],["cdkDrag","","mat-raised-button","","color","primary",3,"mtxPopoverTriggerFor","mtxPopoverTargetAt"],["popoverTrigger","mtxPopoverTrigger"],["popover","mtxPopover"],[2,"max-width","300px"],["mtxPopoverTarget",""],["target1","mtxPopoverTarget"],["target2","mtxPopoverTarget"]],template:function(n,a){if(1&n&&(s.TgZ(0,"mat-radio-group",0),s.NdJ("ngModelChange",function(p){return a.target=p}),s.TgZ(1,"mat-radio-button",1),s._uU(2,"Target 1"),s.qZA(),s.TgZ(3,"mat-radio-button",1),s._uU(4,"Target 2"),s.qZA()(),s.TgZ(5,"button",2,3),s._uU(7," Show Popover\n"),s.qZA(),s.TgZ(8,"mtx-popover",null,4)(10,"div",5),s._uU(11," A material design popover component created using Angular with the Angular CDK. "),s.qZA()(),s.TgZ(12,"div",6,7),s._uU(14,"popover target directive"),s.qZA(),s.TgZ(15,"mtx-popover-target",null,8),s._uU(17,"popover target component"),s.qZA()),2&n){const l=s.MAs(9),p=s.MAs(13),m=s.MAs(16);s.Q6J("ngModel",a.target),s.xp6(),s.Q6J("value",p),s.xp6(2),s.Q6J("value",m),s.xp6(2),s.Q6J("mtxPopoverTriggerFor",l)("mtxPopoverTargetAt",a.target)}},dependencies:[_.VQ,d.u5,d.JJ,d.On,_.U0,T.lW,q.Zt,M,b,ws],styles:["[mtxPopoverTarget][_ngcontent-%COMP%], mtx-popover-target[_ngcontent-%COMP%]{display:flex;align-items:center;height:64px;padding:0 1em;margin-top:1em;background:#f5f5f5;color:#000000de;font:500 20px/32px Roboto,Helvetica Neue,sans-serif}.mat-toolbar[_ngcontent-%COMP%]{margin-top:1em}.mat-mdc-button-base[_ngcontent-%COMP%]{margin:0 .5em}"]})}return e})(),files:[{file:"app.component.html",content:o(49787),filecontent:o(40552)},{file:"app.component.ts",content:o(9660),filecontent:o(22722)},{file:"app.component.scss",content:o(73140),filecontent:o(55726)}]};var I=o(52787);function Ms(e,h){1&e&&s._UZ(0,"example-viewer",0),2&e&&s.Q6J("exampleData",h.$implicit)}function ks(e,h){1&e&&s.SjG(0,Ms,1,1,"example-viewer",0,s.x6l),2&e&&s.wJu(h.examples)}function Es(e,h){1&e&&s._UZ(0,"doc-viewer",0),2&e&&s.Q6J("textContent",h.content.default)}let L=(()=>{class e{constructor(t){this.route=t}static#s=this.\u0275fac=function(n){return new(n||e)(s.Y36(I.gz))};static#t=this.\u0275cmp=s.Xpm({type:e,selectors:[["app-popover-overview"]],standalone:!0,features:[s.jDz],decls:2,vars:3,consts:[[3,"exampleData"]],template:function(n,a){if(1&n&&(s.YNc(0,ks,2,0),s.ALo(1,"async")),2&n){let l;s.um2(0,(l=s.lcZ(1,1,a.route.data))?0:-1,l)}},dependencies:[N.B,c.Ov],encapsulation:2})}return e})(),X=(()=>{class e{constructor(t){this.route=t}static#s=this.\u0275fac=function(n){return new(n||e)(s.Y36(I.gz))};static#t=this.\u0275cmp=s.Xpm({type:e,selectors:[["app-popover-api"]],standalone:!0,features:[s.jDz],decls:2,vars:3,consts:[[3,"textContent"]],template:function(n,a){if(1&n&&(s.YNc(0,Es,1,1,"doc-viewer",0),s.ALo(1,"async")),2&n){let l;s.um2(0,(l=s.lcZ(1,1,a.route.data))?0:-1,l)}},dependencies:[U.z,c.Ov],encapsulation:2})}return e})();const As=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:L,pathMatch:"full",data:{examples:[_s,Os,Cs]}},{path:"api",component:X,pathMatch:"full",data:{content:o(44160)}},{path:"**",redirectTo:"overview"}]},79778:i=>{i.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Popover configuration<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;popover-position&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Position:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  [\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Start<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-select</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;positionStart&quot;</span> (<span class="hljs-attr">ngModelChange</span>)=<span class="hljs-string">&quot;onPositionStartChange()&quot;</span>&gt;</span>\n      @for (item of positionStartOptions; track item) {\n        <span class="hljs-tag">&lt;<span class="hljs-name">mat-option</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>{{item}}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-option</span>&gt;</span>\n      }\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-select</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  ,\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>End<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-select</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;positionEnd&quot;</span>&gt;</span>\n      @for (item of positionEndOptions; track item) {\n        <span class="hljs-tag">&lt;<span class="hljs-name">mat-option</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>{{item}}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-option</span>&gt;</span>\n      }\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-select</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  ]\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>XOffset<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;xOffset&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>YOffset<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;yOffset&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>TriggerEvent:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;triggerEvent&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;click&quot;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n@if (triggerEvent===&#x27;hover&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>EnterDelay<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;enterDelay&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>LeaveDelay<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;leaveDelay&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;closeOnPanelClick&quot;</span>&gt;</span>CloseOnPanelClick<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n@if (triggerEvent===&#x27;click&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hasBackdrop&quot;</span>&gt;</span>HasBackdrop<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideArrow&quot;</span>&gt;</span>HideArrow<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Elevation:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slider</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">discrete</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matSliderThumb</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;elevation&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-slider</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Result<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n@if (triggerEvent===&#x27;hover&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">cdkDrag</span>\n    <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n    [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n    <span class="hljs-attr">mtxPopoverTriggerOn</span>=<span class="hljs-string">&quot;hover&quot;</span>&gt;</span>\n    Show Popover With Hover\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n}\n\n@if (triggerEvent===&#x27;click&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">cdkDrag</span>\n    <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    #<span class="hljs-attr">popoverTrigger2</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n    [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n    <span class="hljs-attr">mtxPopoverTriggerOn</span>=<span class="hljs-string">&quot;click&quot;</span>&gt;</span>\n    Show Popover With Click\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover</span> #<span class="hljs-attr">popover</span>=<span class="hljs-string">&quot;mtxPopover&quot;</span>\n  [<span class="hljs-attr">enterDelay</span>]=<span class="hljs-string">&quot;enterDelay&quot;</span>\n  [<span class="hljs-attr">leaveDelay</span>]=<span class="hljs-string">&quot;leaveDelay&quot;</span>\n  [<span class="hljs-attr">position</span>]=<span class="hljs-string">&quot;[positionStart, positionEnd]&quot;</span>\n  [<span class="hljs-attr">xOffset</span>]=<span class="hljs-string">&quot;xOffset&quot;</span>\n  [<span class="hljs-attr">yOffset</span>]=<span class="hljs-string">&quot;yOffset&quot;</span>\n  [<span class="hljs-attr">closeOnPanelClick</span>]=<span class="hljs-string">&quot;closeOnPanelClick&quot;</span>\n  [<span class="hljs-attr">closeOnBackdropClick</span>]=<span class="hljs-string">&quot;true&quot;</span>\n  [<span class="hljs-attr">hasBackdrop</span>]=<span class="hljs-string">&quot;hasBackdrop&quot;</span>\n  [<span class="hljs-attr">elevation</span>]=<span class="hljs-string">&quot;elevation&quot;</span>\n  [<span class="hljs-attr">hideArrow</span>]=<span class="hljs-string">&quot;hideArrow&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;max-width: 300px;&quot;</span>&gt;</span>\n    A material design popover component created using Angular with the Angular CDK.\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover</span>&gt;</span>\n'},35911:i=>{i.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover</span> #<span class="hljs-attr">popover</span>=<span class="hljs-string">&quot;mtxPopover&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> <span class="hljs-attr">mtxPopoverContent</span> <span class="hljs-attr">let-name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      Lazy rendering with additional context data <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{name}}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n        [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n        [<span class="hljs-attr">mtxPopoverTriggerData</span>]=<span class="hljs-string">&quot;{name: &#x27;Sally&#x27;}&quot;</span>&gt;</span>\n  Show Sally&#x27;s Popover\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n        [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n        [<span class="hljs-attr">mtxPopoverTriggerData</span>]=<span class="hljs-string">&quot;{name: &#x27;Bob&#x27;}&quot;</span>&gt;</span>\n  Show Bob&#x27;s Popover\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},49787:i=>{i.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;target&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;target1&quot;</span>&gt;</span>Target 1<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;target2&quot;</span>&gt;</span>Target 2<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">cdkDrag</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n        [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n        [<span class="hljs-attr">mtxPopoverTargetAt</span>]=<span class="hljs-string">&quot;target&quot;</span>&gt;</span>\n  Show Popover\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover</span> #<span class="hljs-attr">popover</span>=<span class="hljs-string">&quot;mtxPopover&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;max-width: 300px;&quot;</span>&gt;</span>\n    A material design popover component created using Angular with the Angular CDK.\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">mtxPopoverTarget</span> #<span class="hljs-attr">target1</span>=<span class="hljs-string">&quot;mtxPopoverTarget&quot;</span>&gt;</span>popover target directive<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover-target</span> #<span class="hljs-attr">target2</span>=<span class="hljs-string">&quot;mtxPopoverTarget&quot;</span>&gt;</span>popover target component<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover-target</span>&gt;</span>\n'},94791:i=>{i.exports='<span class="hljs-selector-class">.mat-mdc-form-field</span> {\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n}\n\n<span class="hljs-selector-class">.popover-position</span> {\n  <span class="hljs-selector-class">.mat-mdc-form-field</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;\n  }\n}\n\n<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span>;\n}\n'},17944:i=>{i.exports='<span class="hljs-selector-class">.mat-mdc-button-base</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;\n}\n'},73140:i=>{i.exports='<span class="hljs-selector-attr">[mtxPopoverTarget]</span>,\nmtx-popover-target {\n  <span class="hljs-attribute">display</span>: flex;\n  <span class="hljs-attribute">align-items</span>: center;\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">64px</span>;\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">1em</span>;\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1em</span>;\n  <span class="hljs-attribute">background</span>: whitesmoke;\n  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">87</span>);\n  <span class="hljs-attribute">font</span>: <span class="hljs-number">500</span> <span class="hljs-number">20px</span> / <span class="hljs-number">32px</span> Roboto, <span class="hljs-string">&#x27;Helvetica Neue&#x27;</span>, sans-serif;\n}\n\n<span class="hljs-selector-class">.mat-toolbar</span> {\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1em</span>;\n}\n\n<span class="hljs-selector-class">.mat-mdc-button-base</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;\n}\n'},61843:i=>{i.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CdkDrag</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/cdk/drag-drop&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnInit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckbox</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatFormField</span>, <span class="hljs-title class_">MatLabel</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/form-field&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatInput</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/input&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatSelect</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/select&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatSlider</span>, <span class="hljs-title class_">MatSliderThumb</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/slider&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">MtxPopover</span>,\n  <span class="hljs-title class_">MtxPopoverPositionEnd</span>,\n  <span class="hljs-title class_">MtxPopoverPositionStart</span>,\n  <span class="hljs-title class_">MtxPopoverTrigger</span>,\n  <span class="hljs-title class_">MtxPopoverTriggerEvent</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;popover-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">MatFormField</span>,\n    <span class="hljs-title class_">MatInput</span>,\n    <span class="hljs-title class_">MatLabel</span>,\n    <span class="hljs-title class_">MatSelect</span>,\n    <span class="hljs-title class_">MatOption</span>,\n    <span class="hljs-title class_">MatRadioGroup</span>,\n    <span class="hljs-title class_">MatRadioButton</span>,\n    <span class="hljs-title class_">MatCheckbox</span>,\n    <span class="hljs-title class_">MatSlider</span>,\n    <span class="hljs-title class_">MatSliderThumb</span>,\n    <span class="hljs-title class_">MatButton</span>,\n    <span class="hljs-title class_">CdkDrag</span>,\n    <span class="hljs-title class_">MtxPopoverTrigger</span>,\n    <span class="hljs-title class_">MtxPopover</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span> {\n  <span class="hljs-attr">triggerEvent</span>: <span class="hljs-title class_">MtxPopoverTriggerEvent</span> = <span class="hljs-string">&#x27;hover&#x27;</span>;\n  enterDelay = <span class="hljs-number">100</span>;\n  leaveDelay = <span class="hljs-number">100</span>;\n  xOffset = <span class="hljs-number">0</span>;\n  yOffset = <span class="hljs-number">0</span>;\n  closeOnPanelClick = <span class="hljs-literal">false</span>;\n  hasBackdrop = <span class="hljs-literal">true</span>;\n  elevation = <span class="hljs-number">8</span>;\n  hideArrow = <span class="hljs-literal">false</span>;\n\n  positionXOptions = [<span class="hljs-string">&#x27;before&#x27;</span>, <span class="hljs-string">&#x27;after&#x27;</span>];\n  positionYOptions = [<span class="hljs-string">&#x27;above&#x27;</span>, <span class="hljs-string">&#x27;below&#x27;</span>];\n\n  positionStartOptions = [...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionYOptions</span>, ...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionXOptions</span>];\n  <span class="hljs-attr">positionEndOptions</span>: <span class="hljs-built_in">any</span>[] = [];\n\n  <span class="hljs-attr">positionStart</span>: <span class="hljs-title class_">MtxPopoverPositionStart</span> = <span class="hljs-string">&#x27;below&#x27;</span>;\n  <span class="hljs-attr">positionEnd</span>: <span class="hljs-title class_">MtxPopoverPositionEnd</span> = <span class="hljs-string">&#x27;after&#x27;</span>;\n\n  <span class="hljs-title function_">onPositionStartChange</span>(<span class="hljs-params">value?: <span class="hljs-built_in">string</span></span>) {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionXOptions</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionStart</span>)) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEnd</span> = <span class="hljs-string">&#x27;below&#x27;</span>;\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEndOptions</span> = [...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionYOptions</span>, <span class="hljs-string">&#x27;center&#x27;</span>];\n    }\n\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionYOptions</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionStart</span>)) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEnd</span> = <span class="hljs-string">&#x27;after&#x27;</span>;\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEndOptions</span> = [...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionXOptions</span>, <span class="hljs-string">&#x27;center&#x27;</span>];\n    }\n  }\n\n  <span class="hljs-title function_">ngOnInit</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onPositionStartChange</span>();\n  }\n}\n'},18554:i=>{i.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxPopover</span>, <span class="hljs-title class_">MtxPopoverContent</span>, <span class="hljs-title class_">MtxPopoverTrigger</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;popover-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxPopover</span>, <span class="hljs-title class_">MtxPopoverContent</span>, <span class="hljs-title class_">MatButton</span>, <span class="hljs-title class_">MtxPopoverTrigger</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {}\n'},9660:i=>{i.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CdkDrag</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/cdk/drag-drop&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxPopoverTarget</span>, <span class="hljs-title class_">MtxPopoverTrigger</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxPopover</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover/popover&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;popover-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">MatRadioGroup</span>,\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">MatRadioButton</span>,\n    <span class="hljs-title class_">MatButton</span>,\n    <span class="hljs-title class_">CdkDrag</span>,\n    <span class="hljs-title class_">MtxPopoverTrigger</span>,\n    <span class="hljs-title class_">MtxPopover</span>,\n    <span class="hljs-title class_">MtxPopoverTarget</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">target</span>: <span class="hljs-built_in">any</span>;\n}\n'},44160:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c='<h1 id="popover">Popover</h1>\n<h2 id="api-reference-for-material-extensions-popover">API reference for Material Extensions Popover</h2>\n<p><code>import { MtxPopoverModule } from &apos;@ng-matero/extensions/popover&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxpopover"><code>MtxPopover</code></h4>\n<p>Selector: <code>[mtx-popover]</code></p>\n<p>Exported as: <code>mtxPopover</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input(&apos;aria-describedby&apos;)</code><br><code>ariaDescribedby: string</code></td>\n<td align="left">aria-describedby for the popover panel.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input(&apos;aria-label&apos;)</code><br><code>ariaLabel: string</code></td>\n<td align="left">aria-label for the popover panel.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input(&apos;aria-labelledby&apos;)</code><br><code>ariaLabelledby: string</code></td>\n<td align="left">aria-labelledby for the popover panel.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>triggerEvent: MtxPopoverTriggerEvent</code></td>\n<td align="left">Popover&apos;s trigger event. Default is <strong><code>hover</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>enterDelay: number</code></td>\n<td align="left">Popover&apos;s enter delay. Only support hover event. Default is <strong><code>100</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>leaveDelay: number</code></td>\n<td align="left">Popover&apos;s leave delay. Only support hover event. Default is <strong><code>100</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>position: MtxPopoverPosition</code></td>\n<td align="left">Popover&apos;s position. Default is <strong><code>[&apos;below&apos;, &apos;after&apos;]</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>xOffset: number</code></td>\n<td align="left">Popover-panel&apos;s X offset. Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>yOffset: number</code></td>\n<td align="left">Popover-panel&apos;s Y offset. Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowWidth: number</code></td>\n<td align="left">Popover-arrow&apos;s width. Default is <strong><code>16</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowHeight: number</code></td>\n<td align="left">Popover-arrow&apos;s height. Default is <strong><code>16</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowOffsetX: number</code></td>\n<td align="left">Popover-arrow&apos;s X offset. Default is <strong><code>20</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowOffsetY: number</code></td>\n<td align="left">Popover-arrow&apos;s Y offset. Default is <strong><code>20</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>hideArrow: boolean</code></td>\n<td align="left">Whether the popover arrow should be hidden. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>closeOnPanelClick: boolean</code></td>\n<td align="left">Whether popover can be closed when click the popover-panel. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>closeOnBackdropClick: boolean</code></td>\n<td align="left">Whether popover can be closed when click the backdrop. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>focusTrapEnabled: boolean</code></td>\n<td align="left">Whether the popover should focus trap. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>focusTrapAutoCaptureEnabled: boolean</code></td>\n<td align="left">Whether the popover should focus trap auto capture. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>backdropClass: string</code></td>\n<td align="left">Class to be added to the backdrop element.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>hasBackdrop: boolean | undefined</code></td>\n<td align="left">Whether the popover has a backdrop. It will always be false if the trigger event is hover.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input(&apos;class&apos;)</code><br><code>panelClass: string</code></td>\n<td align="left">This method takes classes set on the host mtx-popover element and applies them on the popover template that displays in the overlay container. Otherwise, it&apos;s difficult to style the containing popover from outside the component.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>elevation: number</code></td>\n<td align="left">Popover-panel&apos;s elevation (0~24). Default is <strong><code>8</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>closed: EventEmitter&lt;PopoverCloseReason&gt;</code></td>\n<td align="left">Event emitted when the popover is closed.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxpopovertrigger"><code>MtxPopoverTrigger</code></h4>\n<p>Selector: <code>[mtxPopoverTriggerFor]</code></p>\n<p>Exported as: <code>mtxPopoverTrigger</code></p>\n<h5 id="properties-1">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>mtxPopoverTriggerFor: MtxPopoverPanel</code></td>\n<td align="left">References the popover instance that the trigger is associated with.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>mtxPopoverTriggerOn: MtxPopoverTriggerEvent</code></td>\n<td align="left">Event for triggering popover click, hover and none. Default is <strong><code>&apos;hover&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>mtxPopoverTargetAt: MtxPopoverTarget</code></td>\n<td align="left">References the popover target instance that the popover positioning is associated with.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxpopovertarget"><code>MtxPopoverTarget</code></h4>\n<p>Selector: <code>mtx-popover-target, [mtxPopoverTarget]</code></p>\n<p>Exported as: <code>mtxPopoverTarget</code></p>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxpopoverconfig"><code>MtxPopoverConfig</code></h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxPopoverDefaultOptions</span> {\n  triggerEvent?: <span class="hljs-title class_">MtxPopoverTriggerEvent</span>;\n  enterDelay?: <span class="hljs-built_in">number</span>;\n  leaveDelay?: <span class="hljs-built_in">number</span>;\n  position?: <span class="hljs-title class_">MtxPopoverPosition</span>;\n  xOffset?: <span class="hljs-built_in">number</span>;\n  yOffset?: <span class="hljs-built_in">number</span>;\n  arrowWidth?: <span class="hljs-built_in">number</span>;\n  arrowHeight?: <span class="hljs-built_in">number</span>;\n  arrowOffsetX?: <span class="hljs-built_in">number</span>;\n  arrowOffsetY?: <span class="hljs-built_in">number</span>;\n  hideArrow?: <span class="hljs-built_in">boolean</span>;\n  closeOnPanelClick?: <span class="hljs-built_in">boolean</span>;\n  closeOnBackdropClick?: <span class="hljs-built_in">boolean</span>;\n  overlayPanelClass?: <span class="hljs-built_in">string</span>;\n  backdropClass?: <span class="hljs-built_in">string</span>;\n  hasBackdrop?: <span class="hljs-built_in">boolean</span>;\n  focusTrapEnabled?: <span class="hljs-built_in">boolean</span>;\n  focusTrapAutoCaptureEnabled?: <span class="hljs-built_in">boolean</span>;\n  elevation?: <span class="hljs-built_in">number</span>;\n}\n</pre>\n<h3 id="type-aliases">Type aliases</h3>\n<h4 id="mtxpopoverpositionstart"><code>MtxPopoverPositionStart</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverPositionStart</span> = <span class="hljs-string">&apos;above&apos;</span> | <span class="hljs-string">&apos;below&apos;</span> | <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n</pre>\n<h4 id="mtxpopoverpositionend"><code>MtxPopoverPositionEnd</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverPositionEnd</span> = <span class="hljs-title class_">MtxPopoverPositionStart</span> | <span class="hljs-string">&apos;center&apos;</span>;\n</pre>\n<h4 id="mtxpopoverposition"><code>MtxPopoverPosition</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverPosition</span> = [<span class="hljs-title class_">MtxPopoverPositionStart</span>, <span class="hljs-title class_">MtxPopoverPositionEnd</span>];\n</pre>\n<h4 id="mtxpopovertriggerevent"><code>MtxPopoverTriggerEvent</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverTriggerEvent</span> = <span class="hljs-string">&apos;click&apos;</span> | <span class="hljs-string">&apos;hover&apos;</span> | <span class="hljs-string">&apos;none&apos;</span>;\n</pre>\n<h3 id="constants">Constants</h3>\n<h4 id="mtx_popover_default_options"><code>MTX_POPOVER_DEFAULT_OPTIONS</code></h4>\n<p>Injection token to be used to override the default options for <code>mtx-popover</code>.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_POPOVER_DEFAULT_OPTIONS</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-title class_">MtxPopoverDefaultOptions</span>&gt;;\n</pre>\n<h4 id="mtx_popover_scroll_strategy"><code>MTX_POPOVER_SCROLL_STRATEGY</code></h4>\n<p>Injection token that determines the scroll handling while the popover is open.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_POPOVER_SCROLL_STRATEGY</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">ScrollStrategy</span>&gt;;\n</pre>\n<h4 id="mtx_popover_content"><code>MTX_POPOVER_CONTENT</code></h4>\n<p>Injection token that can be used to reference instances of <code>MtxPopoverContent</code>. It serves as alternative token to the actual <code>MtxPopoverContent</code> class which could cause unnecessary retention of the class and its directive metadata.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_POPOVER_CONTENT</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-title class_">MtxPopoverContent</span>&gt;;\n</pre>\n'},65618:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c='<h2>Popover configuration</h2>\n\n<section class="popover-position">\n  <label>Position:</label>\n  [\n  <mat-form-field>\n    <mat-label>Start</mat-label>\n    <mat-select [(ngModel)]="positionStart" (ngModelChange)="onPositionStartChange()">\n      @for (item of positionStartOptions; track item) {\n        <mat-option [value]="item">{{item}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n  ,\n  <mat-form-field>\n    <mat-label>End</mat-label>\n    <mat-select [(ngModel)]="positionEnd">\n      @for (item of positionEndOptions; track item) {\n        <mat-option [value]="item">{{item}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n  ]\n</section>\n\n<section>\n  <mat-form-field>\n    <mat-label>XOffset</mat-label>\n    <input matInput type="number" [(ngModel)]="xOffset">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>YOffset</mat-label>\n    <input matInput type="number" [(ngModel)]="yOffset">\n  </mat-form-field>\n</section>\n\n<section>\n  <label>TriggerEvent:</label>\n  <mat-radio-group [(ngModel)]="triggerEvent">\n    <mat-radio-button value="hover">Hover</mat-radio-button>\n    <mat-radio-button value="click">Click</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n@if (triggerEvent===\'hover\') {\n  <section>\n    <mat-form-field>\n      <mat-label>EnterDelay</mat-label>\n      <input matInput type="number" [(ngModel)]="enterDelay">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>LeaveDelay</mat-label>\n      <input matInput type="number" [(ngModel)]="leaveDelay">\n    </mat-form-field>\n  </section>\n}\n\n<section>\n  <mat-checkbox [(ngModel)]="closeOnPanelClick">CloseOnPanelClick</mat-checkbox>\n</section>\n\n@if (triggerEvent===\'click\') {\n  <section>\n    <mat-checkbox [(ngModel)]="hasBackdrop">HasBackdrop</mat-checkbox>\n  </section>\n}\n\n<section>\n  <mat-checkbox [(ngModel)]="hideArrow">HideArrow</mat-checkbox>\n</section>\n\n<section>\n  <label>Elevation:</label>\n  <mat-slider min="0" max="24" discrete>\n    <input matSliderThumb [(ngModel)]="elevation">\n  </mat-slider>\n</section>\n\n<h2>Result</h2>\n\n@if (triggerEvent===\'hover\') {\n  <button cdkDrag\n    mat-raised-button color="primary"\n    #popoverTrigger="mtxPopoverTrigger"\n    [mtxPopoverTriggerFor]="popover"\n    mtxPopoverTriggerOn="hover">\n    Show Popover With Hover\n  </button>\n}\n\n@if (triggerEvent===\'click\') {\n  <button cdkDrag\n    mat-raised-button color="primary"\n    #popoverTrigger2="mtxPopoverTrigger"\n    [mtxPopoverTriggerFor]="popover"\n    mtxPopoverTriggerOn="click">\n    Show Popover With Click\n  </button>\n}\n\n<mtx-popover #popover="mtxPopover"\n  [enterDelay]="enterDelay"\n  [leaveDelay]="leaveDelay"\n  [position]="[positionStart, positionEnd]"\n  [xOffset]="xOffset"\n  [yOffset]="yOffset"\n  [closeOnPanelClick]="closeOnPanelClick"\n  [closeOnBackdropClick]="true"\n  [hasBackdrop]="hasBackdrop"\n  [elevation]="elevation"\n  [hideArrow]="hideArrow">\n  <div style="max-width: 300px;">\n    A material design popover component created using Angular with the Angular CDK.\n  </div>\n</mtx-popover>\n'},67708:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c=".mat-mdc-form-field {\n  margin-right: 1rem;\n}\n\n.popover-position {\n  .mat-mdc-form-field {\n    width: 120px;\n    margin: 0;\n    font-size: 14px;\n  }\n}\n\nlabel {\n  padding: 0 8px;\n}\n"},94924:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c="import { CdkDrag } from '@angular/cdk/drag-drop';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { MatSelect } from '@angular/material/select';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport {\n  MtxPopover,\n  MtxPopoverPositionEnd,\n  MtxPopoverPositionStart,\n  MtxPopoverTrigger,\n  MtxPopoverTriggerEvent,\n} from '@ng-matero/extensions/popover';\n\n@Component({\n  selector: 'popover-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatLabel,\n    MatSelect,\n    MatOption,\n    MatRadioGroup,\n    MatRadioButton,\n    MatCheckbox,\n    MatSlider,\n    MatSliderThumb,\n    MatButton,\n    CdkDrag,\n    MtxPopoverTrigger,\n    MtxPopover,\n  ],\n})\nexport class AppComponent implements OnInit {\n  triggerEvent: MtxPopoverTriggerEvent = 'hover';\n  enterDelay = 100;\n  leaveDelay = 100;\n  xOffset = 0;\n  yOffset = 0;\n  closeOnPanelClick = false;\n  hasBackdrop = true;\n  elevation = 8;\n  hideArrow = false;\n\n  positionXOptions = ['before', 'after'];\n  positionYOptions = ['above', 'below'];\n\n  positionStartOptions = [...this.positionYOptions, ...this.positionXOptions];\n  positionEndOptions: any[] = [];\n\n  positionStart: MtxPopoverPositionStart = 'below';\n  positionEnd: MtxPopoverPositionEnd = 'after';\n\n  onPositionStartChange(value?: string) {\n    if (this.positionXOptions.includes(this.positionStart)) {\n      this.positionEnd = 'below';\n      this.positionEndOptions = [...this.positionYOptions, 'center'];\n    }\n\n    if (this.positionYOptions.includes(this.positionStart)) {\n      this.positionEnd = 'after';\n      this.positionEndOptions = [...this.positionXOptions, 'center'];\n    }\n  }\n\n  ngOnInit() {\n    this.onPositionStartChange();\n  }\n}\n"},36583:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c='<mtx-popover #popover="mtxPopover">\n  <ng-template mtxPopoverContent let-name="name">\n    <div>\n      Lazy rendering with additional context data <strong>{{name}}</strong>.\n    </div>\n  </ng-template>\n</mtx-popover>\n\n<button mat-raised-button color="primary"\n        #popoverTrigger="mtxPopoverTrigger"\n        [mtxPopoverTriggerFor]="popover"\n        [mtxPopoverTriggerData]="{name: \'Sally\'}">\n  Show Sally\'s Popover\n</button>\n\n<button mat-raised-button color="primary"\n        #popoverTrigger="mtxPopoverTrigger"\n        [mtxPopoverTriggerFor]="popover"\n        [mtxPopoverTriggerData]="{name: \'Bob\'}">\n  Show Bob\'s Popover\n</button>\n'},19781:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c=".mat-mdc-button-base {\n  margin: 0 .5em;\n}\n"},86075:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c="import { Component } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MtxPopover, MtxPopoverContent, MtxPopoverTrigger } from '@ng-matero/extensions/popover';\n\n@Component({\n  selector: 'popover-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MtxPopover, MtxPopoverContent, MatButton, MtxPopoverTrigger],\n})\nexport class AppComponent {}\n"},40552:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c='<mat-radio-group [(ngModel)]="target">\n  <mat-radio-button [value]="target1">Target 1</mat-radio-button>\n  <mat-radio-button [value]="target2">Target 2</mat-radio-button>\n</mat-radio-group>\n\n<button cdkDrag mat-raised-button color="primary"\n        #popoverTrigger="mtxPopoverTrigger"\n        [mtxPopoverTriggerFor]="popover"\n        [mtxPopoverTargetAt]="target">\n  Show Popover\n</button>\n\n<mtx-popover #popover="mtxPopover">\n  <div style="max-width: 300px;">\n    A material design popover component created using Angular with the Angular CDK.\n  </div>\n</mtx-popover>\n\n<div mtxPopoverTarget #target1="mtxPopoverTarget">popover target directive</div>\n\n<mtx-popover-target #target2="mtxPopoverTarget">popover target component</mtx-popover-target>\n'},55726:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c="[mtxPopoverTarget],\nmtx-popover-target {\n  display: flex;\n  align-items: center;\n  height: 64px;\n  padding: 0 1em;\n  margin-top: 1em;\n  background: whitesmoke;\n  color: rgba(0, 0, 0, .87);\n  font: 500 20px / 32px Roboto, 'Helvetica Neue', sans-serif;\n}\n\n.mat-toolbar {\n  margin-top: 1em;\n}\n\n.mat-mdc-button-base {\n  margin: 0 .5em;\n}\n"},22722:(i,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>c});const c="import { CdkDrag } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { MtxPopoverTarget, MtxPopoverTrigger } from '@ng-matero/extensions/popover';\nimport { MtxPopover } from '@ng-matero/extensions/popover/popover';\n\n@Component({\n  selector: 'popover-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [\n    MatRadioGroup,\n    FormsModule,\n    MatRadioButton,\n    MatButton,\n    CdkDrag,\n    MtxPopoverTrigger,\n    MtxPopover,\n    MtxPopoverTarget,\n  ],\n})\nexport class AppComponent {\n  target: any;\n}\n"}}]);