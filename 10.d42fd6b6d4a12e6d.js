(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[10],{88010:(d,c,s)=>{"use strict";s.r(c),s.d(c,{DatetimepickerApiComponent:()=>Z,DatetimepickerModule:()=>nt,DatetimepickerOverviewComponent:()=>O});var n=s(15159),k=s(28510),h=s(39401),x=s(85903),t=s(22223),v=s(11292),D=s(18097),b=s(99114),T=s(44867),C=s(90533),A=s(53451),I=s(21692),_=s(50727),M=s(39646),m=s(56451),g=s(322),p=s(44755),u=s(51728);const j=["button"];function Y(l,i){1&l&&(t.O4$(),t.TgZ(0,"svg",6),t._UZ(1,"path",7),t.qZA())}function S(l,i){1&l&&(t.O4$(),t.TgZ(0,"svg",6),t._UZ(1,"path",8),t.qZA())}function P(l,i){1&l&&(t.O4$(),t.TgZ(0,"svg",6),t._UZ(1,"path",9)(2,"path",10),t.qZA())}function U(l,i){if(1&l&&(t.ynx(0,3),t.YNc(1,Y,2,0,"svg",4),t.YNc(2,S,2,0,"svg",4),t.YNc(3,P,3,0,"svg",5),t.BQk()),2&l){const e=t.oxw();t.Q6J("ngSwitch",e.datetimepicker.type),t.xp6(1),t.Q6J("ngSwitchCase","time"),t.xp6(1),t.Q6J("ngSwitchCase","datetime")}}const F=[[["","mtxDatetimepickerToggleIcon",""]]],q=["[mtxDatetimepickerToggleIcon]"];let H=(()=>{class l{}return l.\u0275fac=function(e){return new(e||l)},l.\u0275dir=t.lG2({type:l,selectors:[["","mtxDatetimepickerToggleIcon",""]]}),l})(),R=(()=>{class l{get disabled(){return void 0===this._disabled?this.datetimepicker.disabled:!!this._disabled}set disabled(e){this._disabled=(0,I.Ig)(e)}constructor(e,a,r){this._intl=e,this._changeDetectorRef=a,this._stateChanges=_.w0.EMPTY;const o=Number(r);this.tabIndex=o||0===o?o:null}ngOnChanges(e){e.datetimepicker&&this._watchStateChanges()}ngOnDestroy(){this._stateChanges.unsubscribe()}ngAfterContentInit(){this._watchStateChanges()}_open(e){this.datetimepicker&&!this.disabled&&(this.datetimepicker.open(),e.stopPropagation())}_watchStateChanges(){const e=this.datetimepicker?this.datetimepicker._disabledChange:(0,M.of)(),a=this.datetimepicker&&this.datetimepicker.datetimepickerInput?this.datetimepicker.datetimepickerInput._disabledChange:(0,M.of)(),r=this.datetimepicker?(0,m.T)(this.datetimepicker.openedStream,this.datetimepicker.closedStream):(0,M.of)();this._stateChanges.unsubscribe(),this._stateChanges=(0,m.T)(this._intl.changes,e,a,r).subscribe(()=>this._changeDetectorRef.markForCheck())}}return l.\u0275fac=function(e){return new(e||l)(t.Y36(g.i),t.Y36(t.sBO),t.$8M("tabindex"))},l.\u0275cmp=t.Xpm({type:l,selectors:[["mtx-datetimepicker-toggle"]],contentQueries:function(e,a,r){if(1&e&&t.Suo(r,H,5),2&e){let o;t.iGM(o=t.CRH())&&(a._customIcon=o.first)}},viewQuery:function(e,a){if(1&e&&t.Gf(j,5),2&e){let r;t.iGM(r=t.CRH())&&(a._button=r.first)}},hostAttrs:[1,"mtx-datetimepicker-toggle"],hostVars:8,hostBindings:function(e,a){1&e&&t.NdJ("click",function(o){return a._open(o)}),2&e&&(t.uIk("tabindex",null)("data-mtx-calendar",a.datetimepicker?a.datetimepicker.id:null),t.ekj("mtx-datetimepicker-toggle-active",a.datetimepicker&&a.datetimepicker.opened)("mat-accent",a.datetimepicker&&"accent"===a.datetimepicker.color)("mat-warn",a.datetimepicker&&"warn"===a.datetimepicker.color))},inputs:{datetimepicker:["for","datetimepicker"],tabIndex:"tabIndex",ariaLabel:["aria-label","ariaLabel"],disabled:"disabled",disableRipple:"disableRipple"},exportAs:["mtxDatetimepickerToggle"],features:[t.TTD],ngContentSelectors:q,decls:4,vars:6,consts:[["mat-icon-button","","type","button",3,"disabled","disableRipple"],["button",""],[3,"ngSwitch",4,"ngIf"],[3,"ngSwitch"],["class","mtx-datetimepicker-toggle-default-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngSwitchCase"],["class","mtx-datetimepicker-toggle-default-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngSwitchDefault"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-datetimepicker-toggle-default-icon"],["d","M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z"],["d","M15,13H16.5V15.82L18.94,17.23L18.19,18.53L15,16.69V13M19,8H5V19H9.67C9.24,18.09 9,17.07 9,16A7,7 0 0,1 16,9C17.07,9 18.09,9.24 19,9.67V8M5,21C3.89,21 3,20.1 3,19V5C3,3.89 3.89,3 5,3H6V1H8V3H16V1H18V3H19A2,2 0 0,1 21,5V11.1C22.24,12.36 23,14.09 23,16A7,7 0 0,1 16,23C14.09,23 12.36,22.24 11.1,21H5M16,11.15A4.85,4.85 0 0,0 11.15,16C11.15,18.68 13.32,20.85 16,20.85A4.85,4.85 0 0,0 20.85,16C20.85,13.32 18.68,11.15 16,11.15Z"],["d","M0 0h24v24H0z","fill","none"],["d","M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"]],template:function(e,a){1&e&&(t.F$t(F),t.TgZ(0,"button",0,1),t.YNc(2,U,4,3,"ng-container",2),t.Hsn(3),t.qZA()),2&e&&(t.Q6J("disabled",a.disabled)("disableRipple",a.disableRipple),t.uIk("aria-haspopup",a.datetimepicker?"dialog":null)("aria-label",a.ariaLabel||a._intl.openCalendarLabel)("tabindex",a.disabled?-1:a.tabIndex),t.xp6(2),t.Q6J("ngIf",!a._customIcon))},dependencies:[p.O5,p.RF,p.n9,p.ED,u.RK],styles:[".mat-form-field-appearance-legacy .mat-form-field-prefix .mtx-datetimepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mtx-datetimepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mtx-datetimepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mtx-datetimepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mtx-datetimepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mtx-datetimepicker-toggle-default-icon{margin:auto}\n"],encapsulation:2,changeDetection:0}),l})();var L=s(42840),V=s(56908),J=s(22856),B=s(99819);const N={provide:h.JU,useExisting:(0,t.Gpc)(()=>E),multi:!0},Q={provide:h.Cf,useExisting:(0,t.Gpc)(()=>E),multi:!0};class w{constructor(i,e){this.target=i,this.targetElement=e,this.value=this.target.value}}let E=(()=>{class l{constructor(e,a,r,o){if(this._elementRef=e,this._dateAdapter=a,this._dateFormats=r,this._formField=o,this.dateChange=new t.vpe,this.dateInput=new t.vpe,this._valueChange=new t.vpe,this._disabledChange=new t.vpe,this._datetimepickerSubscription=_.w0.EMPTY,this._localeSubscription=_.w0.EMPTY,this._lastValueValid=!1,this._onTouched=()=>{},this._cvaOnChange=()=>{},this._validatorOnChange=()=>{},this._parseValidator=()=>this._lastValueValid?null:{mtxDatetimepickerParse:{text:this._elementRef.nativeElement.value}},this._minValidator=y=>{const f=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(y.value));return!this.min||!f||this._dateAdapter.compareDatetime(this.min,f)<=0?null:{mtxDatetimepickerMin:{min:this.min,actual:f}}},this._maxValidator=y=>{const f=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(y.value));return!this.max||!f||this._dateAdapter.compareDatetime(this.max,f)>=0?null:{mtxDatetimepickerMax:{max:this.max,actual:f}}},this._filterValidator=y=>{const f=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(y.value));return this._dateFilter&&f&&!this._dateFilter(f,J.B.DATE)?{mtxDatetimepickerFilter:!0}:null},this._validator=h.kI.compose([this._parseValidator,this._minValidator,this._maxValidator,this._filterValidator]),!this._dateAdapter)throw(0,V.Z)("DatetimeAdapter");if(!this._dateFormats)throw(0,V.Z)("MTX_DATETIME_FORMATS");this._localeSubscription=a.localeChanges.subscribe(()=>{this.value=this._dateAdapter.deserialize(this.value)})}set mtxDatetimepicker(e){this.registerDatetimepicker(e)}set mtxDatetimepickerFilter(e){this._dateFilter=e,this._validatorOnChange()}get value(){return this._value}set value(e){e=this._dateAdapter.deserialize(e),this._lastValueValid=!e||this._dateAdapter.isValid(e),e=this._dateAdapter.getValidDateOrNull(e);const a=this.value;this._value=e,this._formatValue(e),setTimeout(()=>{this._dateAdapter.sameDatetime(a,e)||this._valueChange.emit(e)})}get min(){return this._min}set min(e){this._min=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)),this._validatorOnChange()}get max(){return this._max}set max(e){this._max=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)),this._validatorOnChange()}get disabled(){return!!this._disabled}set disabled(e){const a=(0,I.Ig)(e);this._disabled!==a&&(this._disabled=a,this._disabledChange.emit(a))}ngAfterContentInit(){this._datetimepicker&&(this._datetimepickerSubscription=this._datetimepicker.selectedChanged.subscribe(e=>{this.value=e,this._cvaOnChange(e),this._onTouched(),this.dateInput.emit(new w(this,this._elementRef.nativeElement)),this.dateChange.emit(new w(this,this._elementRef.nativeElement))}))}ngOnDestroy(){this._datetimepickerSubscription.unsubscribe(),this._localeSubscription.unsubscribe(),this._valueChange.complete(),this._disabledChange.complete()}registerOnValidatorChange(e){this._validatorOnChange=e}validate(e){return this._validator?this._validator(e):null}getConnectedOverlayOrigin(){return this._formField?this._formField.getConnectedOverlayOrigin():this._elementRef}getOverlayLabelId(){return this._formField?this._formField.getLabelId():this._elementRef.nativeElement.getAttribute("aria-labelledby")}writeValue(e){this.value=e}registerOnChange(e){this._cvaOnChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e}_onKeydown(e){e.altKey&&e.keyCode===L.JH&&(this._datetimepicker.open(),e.preventDefault())}_onInput(e){let a=this._dateAdapter.parse(e,this.getParseFormat());this._lastValueValid=!a||this._dateAdapter.isValid(a),a=this._dateAdapter.getValidDateOrNull(a),this._value=a,this._cvaOnChange(a),this._valueChange.emit(a),this.dateInput.emit(new w(this,this._elementRef.nativeElement))}_onChange(){this.dateChange.emit(new w(this,this._elementRef.nativeElement))}_onBlur(){this.value&&this._formatValue(this.value),this._onTouched()}registerDatetimepicker(e){e&&(this._datetimepicker=e,this._datetimepicker._registerInput(this))}getDisplayFormat(){switch(this._datetimepicker.type){case"date":return this._dateFormats.display.dateInput;case"datetime":return this._dateFormats.display.datetimeInput;case"time":return this._dateFormats.display.timeInput;case"month":return this._dateFormats.display.monthInput;case"year":return this._dateFormats.display.yearInput}}getParseFormat(){let e;switch(this._datetimepicker.type){case"date":e=this._dateFormats.parse.dateInput;break;case"datetime":e=this._dateFormats.parse.datetimeInput;break;case"time":e=this._dateFormats.parse.timeInput;break;case"month":e=this._dateFormats.parse.monthInput;break;case"year":e=this._dateFormats.parse.yearInput}return e||(e=this._dateFormats.parse.dateInput),e}_formatValue(e){this._elementRef.nativeElement.value=e?this._dateAdapter.format(e,this.getDisplayFormat()):""}getThemePalette(){return this._formField?this._formField.color:void 0}}return l.\u0275fac=function(e){return new(e||l)(t.Y36(t.SBq),t.Y36(B.e,8),t.Y36(x.I,8),t.Y36(b.KE,8))},l.\u0275dir=t.lG2({type:l,selectors:[["input","mtxDatetimepicker",""]],hostVars:5,hostBindings:function(e,a){1&e&&t.NdJ("input",function(o){return a._onInput(o.target.value)})("change",function(){return a._onChange()})("blur",function(){return a._onBlur()})("keydown",function(o){return a._onKeydown(o)}),2&e&&(t.Ikx("disabled",a.disabled),t.uIk("aria-haspopup",!0)("aria-owns",(null==a._datetimepicker?null:a._datetimepicker.opened)&&a._datetimepicker.id||null)("min",a.min?a._dateAdapter.toIso8601(a.min):null)("max",a.max?a._dateAdapter.toIso8601(a.max):null))},inputs:{mtxDatetimepicker:"mtxDatetimepicker",mtxDatetimepickerFilter:"mtxDatetimepickerFilter",value:"value",min:"min",max:"max",disabled:"disabled"},outputs:{dateChange:"dateChange",dateInput:"dateInput"},exportAs:["mtxDatetimepickerInput"],features:[t._Bn([N,Q,{provide:D.Jk,useExisting:l}])]}),l})();const W={title:"Configurable datetimepicker",component:(()=>{class l{constructor(){this.type="datetime",this.mode="auto",this.startView="month",this.multiYearSelector=!1,this.touchUi=!1,this.twelvehour=!1,this.timeInterval=1,this.timeInput=!0,this.datetime=new h.p4}}return l.\u0275fac=function(e){return new(e||l)},l.\u0275cmp=t.Xpm({type:l,selectors:[["datetimepicker-example"]],features:[t._Bn([{provide:x.I,useValue:{parse:{dateInput:"YYYY-MM-DD",monthInput:"MMMM",yearInput:"YYYY",timeInput:"HH:mm",datetimeInput:"YYYY-MM-DD HH:mm"},display:{dateInput:"YYYY-MM-DD",monthInput:"MMMM",yearInput:"YYYY",timeInput:"HH:mm",datetimeInput:"YYYY-MM-DD HH:mm",monthYearLabel:"YYYY MMMM",dateA11yLabel:"LL",monthYearA11yLabel:"MMMM YYYY",popupHeaderDateLabel:"MMM DD, ddd"}}}])],decls:64,vars:20,consts:[[3,"ngModel","ngModelChange"],["value","datetime"],["value","date"],["value","time"],["value","month"],["value","year"],["value","auto"],["value","landscape"],["value","portrait"],["value","multi-year"],["value","clock"],["min","1","max","30","discrete",""],["matSliderThumb","",3,"ngModel","ngModelChange"],[3,"type","mode","multiYearSelector","startView","twelvehour","timeInterval","touchUi","timeInput"],["datetimePicker",""],["matInput","","required","",3,"mtxDatetimepicker","formControl"],["matSuffix","",3,"for"]],template:function(e,a){if(1&e&&(t.TgZ(0,"h2"),t._uU(1,"Datetimepicker configuration"),t.qZA(),t.TgZ(2,"section")(3,"label"),t._uU(4,"Type:"),t.qZA(),t.TgZ(5,"mat-radio-group",0),t.NdJ("ngModelChange",function(o){return a.type=o}),t.TgZ(6,"mat-radio-button",1),t._uU(7,"Datetime"),t.qZA(),t.TgZ(8,"mat-radio-button",2),t._uU(9,"Date"),t.qZA(),t.TgZ(10,"mat-radio-button",3),t._uU(11,"Time"),t.qZA(),t.TgZ(12,"mat-radio-button",4),t._uU(13,"Month"),t.qZA(),t.TgZ(14,"mat-radio-button",5),t._uU(15,"Year"),t.qZA()()(),t.TgZ(16,"section")(17,"label"),t._uU(18,"Mode:"),t.qZA(),t.TgZ(19,"mat-radio-group",0),t.NdJ("ngModelChange",function(o){return a.mode=o}),t.TgZ(20,"mat-radio-button",6),t._uU(21,"Auto"),t.qZA(),t.TgZ(22,"mat-radio-button",7),t._uU(23,"Landscape"),t.qZA(),t.TgZ(24,"mat-radio-button",8),t._uU(25,"Portrait"),t.qZA()()(),t.TgZ(26,"section")(27,"label"),t._uU(28,"StartView:"),t.qZA(),t.TgZ(29,"mat-radio-group",0),t.NdJ("ngModelChange",function(o){return a.startView=o}),t.TgZ(30,"mat-radio-button",4),t._uU(31,"Month"),t.qZA(),t.TgZ(32,"mat-radio-button",5),t._uU(33,"Year"),t.qZA(),t.TgZ(34,"mat-radio-button",9),t._uU(35,"Multi-Year"),t.qZA(),t.TgZ(36,"mat-radio-button",10),t._uU(37,"Clock"),t.qZA()()(),t.TgZ(38,"section")(39,"mat-checkbox",0),t.NdJ("ngModelChange",function(o){return a.multiYearSelector=o}),t._uU(40,"MultiYearSelector"),t.qZA()(),t.TgZ(41,"section")(42,"mat-checkbox",0),t.NdJ("ngModelChange",function(o){return a.timeInput=o}),t._uU(43,"TimeInput"),t.qZA()(),t.TgZ(44,"section")(45,"mat-checkbox",0),t.NdJ("ngModelChange",function(o){return a.twelvehour=o}),t._uU(46,"Twelvehour"),t.qZA()(),t.TgZ(47,"section")(48,"label"),t._uU(49,"TimeInterval:"),t.qZA(),t.TgZ(50,"mat-slider",11)(51,"input",12),t.NdJ("ngModelChange",function(o){return a.timeInterval=o}),t.qZA()()(),t.TgZ(52,"section")(53,"mat-checkbox",0),t.NdJ("ngModelChange",function(o){return a.touchUi=o}),t._uU(54,"TouchUi"),t.qZA()(),t.TgZ(55,"h2"),t._uU(56,"Result"),t.qZA(),t.TgZ(57,"mat-form-field")(58,"mat-label"),t._uU(59),t.qZA(),t._UZ(60,"mtx-datetimepicker",13,14)(62,"input",15)(63,"mtx-datetimepicker-toggle",16),t.qZA()),2&e){const r=t.MAs(61);t.xp6(5),t.Q6J("ngModel",a.type),t.xp6(14),t.Q6J("ngModel",a.mode),t.xp6(10),t.Q6J("ngModel",a.startView),t.xp6(10),t.Q6J("ngModel",a.multiYearSelector),t.xp6(3),t.Q6J("ngModel",a.timeInput),t.xp6(3),t.Q6J("ngModel",a.twelvehour),t.xp6(6),t.Q6J("ngModel",a.timeInterval),t.xp6(2),t.Q6J("ngModel",a.touchUi),t.xp6(6),t.Oqu(a.type),t.xp6(1),t.Q6J("type",a.type)("mode",a.mode)("multiYearSelector",a.multiYearSelector)("startView",a.startView)("twelvehour",a.twelvehour)("timeInterval",a.timeInterval)("touchUi",a.touchUi)("timeInput",a.timeInput),t.xp6(2),t.Q6J("mtxDatetimepicker",r)("formControl",a.datetime),t.xp6(1),t.Q6J("for",r)}},dependencies:[h.Fj,h.JJ,h.Q7,h.oH,h.On,v.oG,D.Nt,b.KE,b.hX,b.R9,T.VQ,T.U0,C.pH,C.$5,A.VQ,R,E],styles:["label[_ngcontent-%COMP%]{padding:0 8px}"]}),l})(),files:[{file:"app.component.html",content:s(46674),filecontent:s(47348)},{file:"app.component.ts",content:s(85468),filecontent:s(85700)},{file:"app.component.scss",content:s(83497),filecontent:s(27129)}]};var K=s(86012),X=s(5838);const z={title:"Datetimepicker inline",component:(()=>{class l{constructor(){this.selectedDate=null,this.selectedTime=null}}return l.\u0275fac=function(e){return new(e||l)},l.\u0275cmp=t.Xpm({type:l,selectors:[["datetimepicker-example"]],decls:8,vars:2,consts:[[1,"demo-inline-card"],["type","date","startView","month",3,"selectedChange"],["type","time","startView","clock",3,"selectedChange"]],template:function(e,a){1&e&&(t.TgZ(0,"mat-card",0)(1,"mtx-calendar",1),t.NdJ("selectedChange",function(o){return a.selectedDate=o}),t.qZA()(),t.TgZ(2,"p"),t._uU(3),t.qZA(),t.TgZ(4,"mat-card",0)(5,"mtx-calendar",2),t.NdJ("selectedChange",function(o){return a.selectedTime=o}),t.qZA()(),t.TgZ(6,"p"),t._uU(7),t.qZA()),2&e&&(t.xp6(3),t.hij("Selected date: ",a.selectedDate,""),t.xp6(4),t.hij("Selected time: ",a.selectedTime,""))},dependencies:[K.a8,X.c],styles:[".demo-inline-card[_ngcontent-%COMP%]{width:300px;margin-bottom:1rem}"]}),l})(),files:[{file:"app.component.html",content:s(98766),filecontent:s(86723)},{file:"app.component.ts",content:s(88796),filecontent:s(32044)},{file:"app.component.scss",content:s(23728),filecontent:s(43923)}]};var G=s(22281),$=s(29241);function tt(l,i){if(1&l&&(t.ynx(0),t._UZ(1,"example-viewer",3),t.BQk()),2&l){const e=i.$implicit;t.xp6(1),t.Q6J("exampleData",e)}}function et(l,i){if(1&l&&(t.ynx(0),t.YNc(1,tt,2,1,"ng-container",2),t.BQk()),2&l){const e=i.ngIf;t.xp6(1),t.Q6J("ngForOf",e.examples)}}function at(l,i){if(1&l&&(t.ynx(0),t._UZ(1,"doc-viewer",1),t.BQk()),2&l){const e=i.ngIf;t.xp6(1),t.Q6J("textContent",e.content.default)}}let O=(()=>{class l{constructor(e){this.route=e}}return l.\u0275fac=function(e){return new(e||l)(t.Y36(n.gz))},l.\u0275cmp=t.Xpm({type:l,selectors:[["app-datetimepicker-overview"]],decls:7,vars:3,consts:[["href","https://github.com/ng-matero/extensions/issues/141","target","_blank"],[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"exampleData"]],template:function(e,a){1&e&&(t.TgZ(0,"p"),t._uU(1," If you want to customize the parse and display formats, please check the issue "),t.TgZ(2,"a",0),t._uU(3,"#141"),t.qZA(),t._uU(4,".\n"),t.qZA(),t.YNc(5,et,2,1,"ng-container",1),t.ALo(6,"async")),2&e&&(t.xp6(5),t.Q6J("ngIf",t.lcZ(6,1,a.route.data)))},dependencies:[p.sg,p.O5,G.B,p.Ov],encapsulation:2}),l})(),Z=(()=>{class l{constructor(e){this.route=e}}return l.\u0275fac=function(e){return new(e||l)(t.Y36(n.gz))},l.\u0275cmp=t.Xpm({type:l,selectors:[["app-datetimepicker-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(e,a){1&e&&(t.YNc(0,at,2,1,"ng-container",0),t.ALo(1,"async")),2&e&&t.Q6J("ngIf",t.lcZ(1,1,a.route.data))},dependencies:[p.O5,$.z,p.Ov],encapsulation:2}),l})(),nt=(()=>{class l{}return l.\u0275fac=function(e){return new(e||l)},l.\u0275mod=t.oAB({type:l}),l.\u0275inj=t.cJS({imports:[k.m8,n.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:O,pathMatch:"full",data:{examples:[W,z]}},{path:"api",component:Z,pathMatch:"full",data:{content:s(89350)}},{path:"**",redirectTo:"overview"}])]}),l})()},29241:(d,c,s)=>{"use strict";s.d(c,{z:()=>k});var n=s(22223);let k=(()=>{class h{constructor(){this.textContent=""}ngOnDestroy(){}}return h.\u0275fac=function(t){return new(t||h)},h.\u0275cmp=n.Xpm({type:h,selectors:[["doc-viewer"]],inputs:{textContent:"textContent"},decls:1,vars:1,consts:[[1,"docs-markdown",3,"innerHTML"]],template:function(t,v){1&t&&n._UZ(0,"div",0),2&t&&n.Q6J("innerHTML",v.textContent,n.oJD)},styles:[".docs-markdown h1,.docs-markdown h2{font-weight:400}.docs-markdown h3{margin:40px 0 20px;padding-bottom:3px;font-weight:300;font-size:24px;line-height:32px}.docs-markdown h4{display:block;margin-top:28px;margin-bottom:16px;font-weight:700;font-size:20px;background:none}.docs-markdown h4 code{padding:0;background:none}.docs-markdown h5{font-size:15px}.docs-markdown h6{font-size:13px}.docs-markdown table{width:100%;margin:0 0 32px;border-collapse:collapse;border-radius:2px;border-spacing:0}.docs-markdown table code{padding:0;background-color:transparent}.docs-markdown th{max-width:100px;padding:13px 16px;font-weight:400;text-align:left}.docs-markdown td{padding:8px 16px;font-weight:400;font-size:14px}.docs-markdown pre{display:block;margin:16px auto;overflow-x:auto;border-radius:5px;white-space:pre-wrap;background:rgba(0,0,0,.01);border:.5px solid rgba(0,0,0,.2)}\n"],encapsulation:2}),h})()},22281:(d,c,s)=>{"use strict";s.d(c,{B:()=>M});var n=s(22223),k=s(32342),h=s(27163),x=s(44755),t=s(51728),v=s(430),D=s(13617),b=s(83649);const T=["demo"];function C(m,g){if(1&m){const p=n.EpF();n.TgZ(0,"mat-tab",11)(1,"div",12)(2,"div",13)(3,"button",14),n.NdJ("click",function(){n.CHM(p);const j=n.MAs(8),Y=n.oxw(2);return n.KtG(Y.copySource(j))}),n.TgZ(4,"mat-icon"),n._uU(5,"content_copy"),n.qZA()()(),n.TgZ(6,"div",15),n._UZ(7,"pre",16,17),n.qZA()()()}if(2&m){const p=g.$implicit;n.Q6J("label",p.file),n.xp6(3),n.Q6J("matTooltip","Copy example source"),n.xp6(4),n.Q6J("innerHtml",p.content,n.oJD)}}function A(m,g){if(1&m&&(n.TgZ(0,"div",8)(1,"mat-tab-group",9),n.YNc(2,C,9,3,"mat-tab",10),n.qZA()()),2&m){const p=n.oxw();n.xp6(2),n.Q6J("ngForOf",p.exampleData.files)}}function I(m,g){if(1&m&&n._UZ(0,"div",18),2&m){const p=n.oxw();n.Q6J("innerHtml",p.exampleData.description,n.oJD)}}function _(m,g){}let M=(()=>{class m{constructor(p,u,j){this.snackbar=p,this.copier=u,this.componentFactoryResolver=j,this.showSource=!1}ngOnInit(){const p=this.componentFactoryResolver.resolveComponentFactory(this.exampleData.component);this.demoComponentRef=this.demoRef.createComponent(p)}ngOnDestroy(){this.demoComponentRef&&this.demoComponentRef.destroy()}toggleSourceView(){this.showSource=!this.showSource}copySource(p){this.copier.copyText(p.innerText)?this.snackbar.open("Code copied","",{duration:2500}):this.snackbar.open("Copy failed. Please try again!","",{duration:2500})}}return m.\u0275fac=function(p){return new(p||m)(n.Y36(k.ux),n.Y36(h.u),n.Y36(n._Vd))},m.\u0275cmp=n.Xpm({type:m,selectors:[["example-viewer"]],viewQuery:function(p,u){if(1&p&&n.Gf(T,7,n.s_b),2&p){let j;n.iGM(j=n.CRH())&&(u.demoRef=j.first)}},inputs:{type:"type",exampleData:"exampleData"},decls:13,vars:4,consts:[[1,"docs-example-viewer-wrapper"],[1,"docs-example-viewer-title"],[1,"docs-example-viewer-title-spacer"],["mat-icon-button","","type","button","aria-label","View source",3,"matTooltip","click"],["class","docs-example-viewer-source",4,"ngIf"],[1,"docs-example-viewer-body"],[3,"innerHtml",4,"ngIf"],["demo",""],[1,"docs-example-viewer-source"],["animationDuration","0ms","mat-stretch-tabs","false"],[3,"label",4,"ngFor","ngForOf"],[3,"label"],[1,"docs-example-source-wrapper"],[1,"button-bar"],["mat-icon-button","","type","button","title","Copy example source","aria-label","Copy example source to clipboard",1,"docs-example-source-copy","docs-example-button",3,"matTooltip","click"],[1,"code-snippet"],[1,"docs-example-source",3,"innerHtml"],["textContent",""],[3,"innerHtml"]],template:function(p,u){1&p&&(n.TgZ(0,"div",0)(1,"div",1)(2,"span"),n._uU(3),n.qZA(),n._UZ(4,"div",2),n.TgZ(5,"button",3),n.NdJ("click",function(){return u.toggleSourceView()}),n.TgZ(6,"mat-icon"),n._uU(7,"code"),n.qZA()()(),n.YNc(8,A,3,1,"div",4),n.TgZ(9,"div",5),n.YNc(10,I,1,1,"div",6),n.YNc(11,_,0,0,"ng-template",null,7,n.W1O),n.qZA()()),2&p&&(n.xp6(3),n.Oqu(u.exampleData.title),n.xp6(2),n.Q6J("matTooltip","View source"),n.xp6(3),n.Q6J("ngIf",u.showSource),n.xp6(2),n.Q6J("ngIf",u.exampleData.description))},dependencies:[x.sg,x.O5,t.RK,v.Hw,D.uX,D.SP,b.gM],styles:["[_nghost-%COMP%]{display:block;padding:20px 0}.docs-example-viewer-wrapper[_ngcontent-%COMP%]{border-radius:4px}.docs-example-viewer-title[_ngcontent-%COMP%]{display:flex;align-content:center;align-items:center;justify-content:center;padding:8px 8px 8px 16px}.docs-example-viewer-title-spacer[_ngcontent-%COMP%]{flex:1 1 auto}.docs-example-viewer-body[_ngcontent-%COMP%]{padding:30px}.button-bar[_ngcontent-%COMP%]{float:right;padding:8px}.code-snippet[_ngcontent-%COMP%]{padding:20px}.docs-example-source[_ngcontent-%COMP%]{padding:0;margin:0;border:none;background:none;font-size:14px}"]}),m})()},46674:d=>{d.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Datetimepicker configuration<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Type:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;type&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;datetime&quot;</span>&gt;</span>Datetime<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;date&quot;</span>&gt;</span>Date<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span>Time<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;month&quot;</span>&gt;</span>Month<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;year&quot;</span>&gt;</span>Year<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Mode:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;mode&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;auto&quot;</span>&gt;</span>Auto<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;landscape&quot;</span>&gt;</span>Landscape<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;portrait&quot;</span>&gt;</span>Portrait<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>StartView:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;startView&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;month&quot;</span>&gt;</span>Month<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;year&quot;</span>&gt;</span>Year<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;multi-year&quot;</span>&gt;</span>Multi-Year<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;clock&quot;</span>&gt;</span>Clock<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiYearSelector&quot;</span>&gt;</span>MultiYearSelector<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;timeInput&quot;</span>&gt;</span>TimeInput<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;twelvehour&quot;</span>&gt;</span>Twelvehour<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>TimeInterval:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slider</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;30&quot;</span> <span class="hljs-attr">discrete</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matSliderThumb</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;timeInterval&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-slider</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;touchUi&quot;</span>&gt;</span>TouchUi<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Result<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>{{type}}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-datetimepicker</span> #<span class="hljs-attr">datetimePicker</span>\n                      [<span class="hljs-attr">type</span>]=<span class="hljs-string">&quot;type&quot;</span>\n                      [<span class="hljs-attr">mode</span>]=<span class="hljs-string">&quot;mode&quot;</span>\n                      [<span class="hljs-attr">multiYearSelector</span>]=<span class="hljs-string">&quot;multiYearSelector&quot;</span>\n                      [<span class="hljs-attr">startView</span>]=<span class="hljs-string">&quot;startView&quot;</span>\n                      [<span class="hljs-attr">twelvehour</span>]=<span class="hljs-string">&quot;twelvehour&quot;</span>\n                      [<span class="hljs-attr">timeInterval</span>]=<span class="hljs-string">&quot;timeInterval&quot;</span>\n                      [<span class="hljs-attr">touchUi</span>]=<span class="hljs-string">&quot;touchUi&quot;</span>\n                      [<span class="hljs-attr">timeInput</span>]=<span class="hljs-string">&quot;timeInput&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-datetimepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> [<span class="hljs-attr">mtxDatetimepicker</span>]=<span class="hljs-string">&quot;datetimePicker&quot;</span> [<span class="hljs-attr">formControl</span>]=<span class="hljs-string">&quot;datetime&quot;</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">required</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-datetimepicker-toggle</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;datetimePicker&quot;</span> <span class="hljs-attr">matSuffix</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-datetimepicker-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n'},98766:d=>{d.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-card</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-inline-card&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-calendar</span> (<span class="hljs-attr">selectedChange</span>)=<span class="hljs-string">&quot;selectedDate = $event&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span> <span class="hljs-attr">startView</span>=<span class="hljs-string">&quot;month&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mtx-calendar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-card</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Selected date: {{selectedDate}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-card</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-inline-card&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-calendar</span> (<span class="hljs-attr">selectedChange</span>)=<span class="hljs-string">&quot;selectedTime = $event&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">startView</span>=<span class="hljs-string">&quot;clock&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mtx-calendar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-card</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Selected time: {{selectedTime}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},83497:d=>{d.exports='<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span>;\n}\n'},23728:d=>{d.exports='<span class="hljs-selector-class">.demo-inline-card</span> {\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},85468:d=>{d.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">UntypedFormControl</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">MtxCalendarView</span>,\n  <span class="hljs-title class_">MtxDatetimepickerMode</span>,\n  <span class="hljs-title class_">MtxDatetimepickerType</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/datetimepicker&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">MTX_DATETIME_FORMATS</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;datetimepicker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">providers</span>: [\n    {\n      <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">MTX_DATETIME_FORMATS</span>,\n      <span class="hljs-attr">useValue</span>: {\n        <span class="hljs-attr">parse</span>: {\n          <span class="hljs-attr">dateInput</span>: <span class="hljs-string">&#x27;YYYY-MM-DD&#x27;</span>,\n          <span class="hljs-attr">monthInput</span>: <span class="hljs-string">&#x27;MMMM&#x27;</span>,\n          <span class="hljs-attr">yearInput</span>: <span class="hljs-string">&#x27;YYYY&#x27;</span>,\n          <span class="hljs-attr">timeInput</span>: <span class="hljs-string">&#x27;HH:mm&#x27;</span>,\n          <span class="hljs-attr">datetimeInput</span>: <span class="hljs-string">&#x27;YYYY-MM-DD HH:mm&#x27;</span>,\n        },\n        <span class="hljs-attr">display</span>: {\n          <span class="hljs-attr">dateInput</span>: <span class="hljs-string">&#x27;YYYY-MM-DD&#x27;</span>,\n          <span class="hljs-attr">monthInput</span>: <span class="hljs-string">&#x27;MMMM&#x27;</span>,\n          <span class="hljs-attr">yearInput</span>: <span class="hljs-string">&#x27;YYYY&#x27;</span>,\n          <span class="hljs-attr">timeInput</span>: <span class="hljs-string">&#x27;HH:mm&#x27;</span>,\n          <span class="hljs-attr">datetimeInput</span>: <span class="hljs-string">&#x27;YYYY-MM-DD HH:mm&#x27;</span>,\n          <span class="hljs-attr">monthYearLabel</span>: <span class="hljs-string">&#x27;YYYY MMMM&#x27;</span>,\n          <span class="hljs-attr">dateA11yLabel</span>: <span class="hljs-string">&#x27;LL&#x27;</span>,\n          <span class="hljs-attr">monthYearA11yLabel</span>: <span class="hljs-string">&#x27;MMMM YYYY&#x27;</span>,\n          <span class="hljs-attr">popupHeaderDateLabel</span>: <span class="hljs-string">&#x27;MMM DD, ddd&#x27;</span>,\n        },\n      },\n    },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">type</span>: <span class="hljs-title class_">MtxDatetimepickerType</span> = <span class="hljs-string">&#x27;datetime&#x27;</span>;\n  <span class="hljs-attr">mode</span>: <span class="hljs-title class_">MtxDatetimepickerMode</span> = <span class="hljs-string">&#x27;auto&#x27;</span>;\n  <span class="hljs-attr">startView</span>: <span class="hljs-title class_">MtxCalendarView</span> = <span class="hljs-string">&#x27;month&#x27;</span>;\n  multiYearSelector = <span class="hljs-literal">false</span>;\n  touchUi = <span class="hljs-literal">false</span>;\n  twelvehour = <span class="hljs-literal">false</span>;\n  timeInterval = <span class="hljs-number">1</span>;\n  timeInput = <span class="hljs-literal">true</span>;\n\n  datetime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UntypedFormControl</span>();\n}\n'},88796:d=>{d.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;datetimepicker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">selectedDate</span>: <span class="hljs-title class_">Date</span> | <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;\n  <span class="hljs-attr">selectedTime</span>: <span class="hljs-title class_">Date</span> | <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;\n}\n'},89350:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n='<h1 id="datetimepicker">Datetimepicker</h1>\n<h2 id="api-reference-for-material-extensions-datetimepicker">API reference for Material Extensions Datetimepicker</h2>\n<p><code>import { MtxDatetimepickerModule } from &apos;@ng-matero/extensions/datetimepicker&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxdatetimepickerinput"><code>MtxDatetimepickerInput</code></h4>\n<p>Directive used to connect an input to a MtxDatetimepicker.</p>\n<p>Selector: <code>input[mtxDatetimepicker]</code></p>\n<p>Exported as: <code>mtxDatetimepickerInput</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>mtxDatetimepickerFilter: (date: D | null, type: MtxDatetimepickerFilterType) =&gt; boolean</code></td>\n<td align="left">Function that can be used to filter out dates within the datetimepicker.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>disabled: boolean</code></td>\n<td align="left">Whether the datetimepicker-input is disabled.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>mtxDatetimepicker: MtxDatetimepicker&lt;D&gt;</code></td>\n<td align="left">The datetimepicker that this input is associated with.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>max: D | null</code></td>\n<td align="left">The maximum valid date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>min: D | null</code></td>\n<td align="left">The minimum valid date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>value: D | null</code></td>\n<td align="left">The value of the input.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>dateChange: EventEmitter&lt;MtxDatetimepickerInputEvent&lt;D&gt;&gt;</code></td>\n<td align="left">Emits when a <code>change</code> event is fired on this <code>&lt;input&gt;</code>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>dateInput: EventEmitter&lt;MtxDatetimepickerInputEvent&lt;D&gt;&gt;</code></td>\n<td align="left">Emits when an <code>input</code> event is fired on this <code>&lt;input&gt;</code>.</td>\n</tr>\n</tbody></table>\n<h5 id="methods">Methods</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>getConnectedOverlayOrigin(): ElementRef</code></td>\n<td align="left">Gets the element that the datetimepicker popup should be connected to.</td>\n</tr>\n<tr>\n<td align="left"><code>getOverlayLabelId(): string | null</code></td>\n<td align="left">Gets the ID of an element that should be used a description for the overlay.</td>\n</tr>\n<tr>\n<td align="left"><code>getThemePalette(): ThemePalette</code></td>\n<td align="left">Returns the palette used by the input&apos;s form field, if any.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxcalendar"><code>MtxCalendar</code></h4>\n<p>A calendar that is used as part of the datetimepicker.</p>\n<p>Selector: <code>mtx-calendar</code></p>\n<p>Exported as: <code>mtxCalendar</code></p>\n<h5 id="properties-1">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>dateFilter: (date: D, type: MtxDatetimepickerFilterType) =&gt; boolean</code></td>\n<td align="left">Function used to filter which dates are selectable.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>type: MtxDatetimepickerType</code></td>\n<td align="left">The type of datetimepicker. Default is <strong><code>&apos;date&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>multiYearSelector: boolean</code></td>\n<td align="left">Whether to show multi-year view. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>twelvehour: boolean</code></td>\n<td align="left">Whether the clock uses 12 hour format. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>timeInterval: number</code></td>\n<td align="left">Step over minutes. Default is <strong><code>1</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>maxDate: D | null</code></td>\n<td align="left">The maximum selectable date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>minDate: D | null</code></td>\n<td align="left">The minimum selectable date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>selected: D | null</code></td>\n<td align="left">The currently selected datetime.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>startAt: D | null</code></td>\n<td align="left">A date representing the period (month or year) to start the calendar in.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>startView: MtxCalendarView</code></td>\n<td align="left">The calendar started view. Default is <strong><code>&apos;month&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>selectedChange: EventEmitter&lt;D | null&gt;</code></td>\n<td align="left">Emits when the currently selected datetime changes.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>viewChanged: EventEmitter&lt;MtxCalendarView&gt;</code></td>\n<td align="left">Emits when the current view changes.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxdatetimepicker"><code>MtxDatetimepicker</code></h4>\n<p>Component responsible for managing the datetimepicker popup/dialog.</p>\n<p>Selector: <code>mtx-datetimepicker</code></p>\n<p>Exported as: <code>mtxDatetimepicker</code></p>\n<h5 id="properties-2">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>color: ThemePalette</code></td>\n<td align="left">Color palette to use on the datetimepicker&apos;s calendar.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>disabled: boolean</code></td>\n<td align="left">Whether the datetimepicker pop-up should be disabled.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>opened: boolean</code></td>\n<td align="left">Whether the calendar is open.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>panelClass: string | string[]</code></td>\n<td align="left">Classes to be passed to the date picker panel. Supports string and string array values, similar to ngClass.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>restoreFocus: boolean</code></td>\n<td align="left">Whether to restore focus to the previously-focused element when the calendar is closed. Note that automatic focus restoration is an accessibility feature and it is recommended that you provide your own equivalent, if you decide to turn it off.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>touchUi: boolean</code></td>\n<td align="left">Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather than a dropdown and elements have more padding to allow for bigger touch targets.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>xPosition: DatetimepickerDropdownPositionX</code></td>\n<td align="left">Preferred position of the datetimepicker in the X axis.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>yPosition: DatetimepickerDropdownPositionY</code></td>\n<td align="left">Preferred position of the datetimepicker in the Y axis.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>mode: MtxDatetimepickerMode</code></td>\n<td align="left">The display mode of datetimepicker pop-up. Default is <strong><code>&apos;auto&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>type: MtxDatetimepickerType</code></td>\n<td align="left">The type of datetimepicker. Default is <strong><code>&apos;date&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>multiYearSelector: boolean</code></td>\n<td align="left">Whether to show multi-year view. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>twelvehour: boolean</code></td>\n<td align="left">Whether the clock uses 12 hour format. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>timeInterval: number</code></td>\n<td align="left">Step over minutes. Default is <strong><code>1</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>maxDate: D | null</code></td>\n<td align="left">The maximum selectable date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>minDate: D | null</code></td>\n<td align="left">The minimum selectable date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>selected: D | null</code></td>\n<td align="left">The currently selected datetime.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>startAt: D | null</code></td>\n<td align="left">A date representing the period (month or year) to start the calendar in.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>startView: MtxCalendarView</code></td>\n<td align="left">The calendar started view. Default is <strong><code>&apos;month&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>timeInput: boolean</code></td>\n<td align="left">Whether to show the time input in time mode. When the <code>touchUi</code> is enabled it will be disabled. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output(&apos;opened&apos;)</code><br><code>openedStream: EventEmitter&lt;void&gt;</code></td>\n<td align="left">Emits when the datetimepicker has been opened.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output(&apos;closed&apos;)</code><br><code>closedStream: EventEmitter&lt;void&gt;</code></td>\n<td align="left">Emits when the datetimepicker has been closed.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>viewChanged: EventEmitter&lt;MtxCalendarView&gt;</code></td>\n<td align="left">Emits when the current view changes.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>selectedChanged: EventEmitter&lt;D&gt;</code></td>\n<td align="left">Emits new selected date when selected date changes.</td>\n</tr>\n</tbody></table>\n<h5 id="methods-1">Methods</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>open(): void</code></td>\n<td align="left">Open the calendar.</td>\n</tr>\n<tr>\n<td align="left"><code>close(): void</code></td>\n<td align="left">Close the calendar.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxdatetimepickertoggleicon"><code>MtxDatetimepickerToggleIcon</code></h4>\n<p>Can be used to override the icon of a mtxDatetimepickerToggleIcon.</p>\n<p>Selector: <code>[mtxDatetimepickerToggleIcon]</code></p>\n<h4 id="mtxdatetimepickertoggle"><code>MtxDatetimepickerToggle</code></h4>\n<p>Selector: <code>mtx-datetimepicker-toggle</code></p>\n<p>Exported as: <code>mtxDatetimepickerToggle</code></p>\n<h5 id="properties-3">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input(&apos;for&apos;)</code><br><code>datetimepicker: MtxDatetimepicker&lt;D&gt;</code></td>\n<td align="left">Datetimepicker instance that the button will toggle.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>disableRipple: boolean</code></td>\n<td align="left">Whether ripples on the toggle should be disabled.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>disabled: boolean</code></td>\n<td align="left">Whether the toggle button is disabled.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxclock"><code>MtxClock</code></h4>\n<p>A clock that is used as part of the datetimepicker.</p>\n<p>Selector: <code>mtx-clock</code></p>\n<p>Exported as: <code>mtxClock</code></p>\n<h5 id="properties-4">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>dateFilter: (date: D, type: MtxDatetimepickerFilterType) =&gt; boolean</code></td>\n<td align="left">Function used to filter which dates are selectable.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>interval: number</code></td>\n<td align="left">Step over minutes. Default is <code>1</code>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>twelvehour: boolean</code></td>\n<td align="left">Whether the clock uses 12 hour format. Default is <code>false</code>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>maxDate: D | null</code></td>\n<td align="left">The maximum selectable date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>minDate: D | null</code></td>\n<td align="left">The minimum selectable date.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>selected: D | null</code></td>\n<td align="left">The currently selected datetime.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>startView: MtxCalendarView</code></td>\n<td align="left">The calendar started view. Default is <code>&apos;month&apos;</code>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>selectedChanged: EventEmitter&lt;D&gt;</code></td>\n<td align="left">Emits new selected date when selected date changes.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>activeDateChange: EventEmitter&lt;D&gt;</code></td>\n<td align="left">Emits when any date is activated.</td>\n</tr>\n</tbody></table>\n<h3 id="classes">Classes</h3>\n<h4 id="mtxdatetimepickerinputevent"><code>MtxDatetimepickerInputEvent</code></h4>\n<p>An event used for datetimepicker input and change events. We don&apos;t always have access to a native input or change event because the event may have been triggered by the user clicking on the calendar popup. For consistency, we always use <code>MtxDatetimepickerInputEvent</code> instead.</p>\n<h5 id="properties-5">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>target: MtxDatetimepickerInput&lt;D&gt;</code></td>\n<td align="left">Reference to the datetimepicker input component that emitted the event.</td>\n</tr>\n<tr>\n<td align="left"><code>targetElement: HTMLElement</code></td>\n<td align="left">Reference to the native input element associated with the datetimepicker input.</td>\n</tr>\n<tr>\n<td align="left"><code>value: D | null</code></td>\n<td align="left">The new value for the target datetimepicker input.</td>\n</tr>\n</tbody></table>\n<h3 id="type-aliases">Type aliases</h3>\n<h4 id="datetimepickerdropdownpositionx"><code>DatetimepickerDropdownPositionX</code></h4>\n<p>Possible positions for the datetimepicker dropdown along the X axis.</p>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">DatetimepickerDropdownPositionX</span> = <span class="hljs-string">&apos;start&apos;</span> | <span class="hljs-string">&apos;end&apos;</span>;\n</pre>\n<h4 id="datetimepickerdropdownpositiony"><code>DatetimepickerDropdownPositionY</code></h4>\n<p>Possible positions for the datetimepicker dropdown along the Y axis.</p>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">DatetimepickerDropdownPositionY</span> = <span class="hljs-string">&apos;above&apos;</span> | <span class="hljs-string">&apos;below&apos;</span>;\n</pre>\n<h4 id="mtxdatetimepickertype"><code>MtxDatetimepickerType</code></h4>\n<p>Possible types for datetimepicker dropdown display.</p>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxDatetimepickerType</span> = <span class="hljs-string">&apos;date&apos;</span> | <span class="hljs-string">&apos;time&apos;</span> | <span class="hljs-string">&apos;month&apos;</span> | <span class="hljs-string">&apos;year&apos;</span> | <span class="hljs-string">&apos;datetime&apos;</span>;\n</pre>\n<h4 id="mtxdatetimepickermode"><code>MtxDatetimepickerMode</code></h4>\n<p>Possible modes for datetimepicker dropdown display.</p>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxDatetimepickerMode</span> = <span class="hljs-string">&apos;auto&apos;</span> | <span class="hljs-string">&apos;portrait&apos;</span> | <span class="hljs-string">&apos;landscape&apos;</span>;\n</pre>\n<h4 id="mtxcalendarview"><code>MtxCalendarView</code></h4>\n<p>Possible views for datetimepicker calendar.</p>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxCalendarView</span> = <span class="hljs-string">&apos;clock&apos;</span> | <span class="hljs-string">&apos;month&apos;</span> | <span class="hljs-string">&apos;year&apos;</span> | <span class="hljs-string">&apos;multi-year&apos;</span>;\n</pre>\n<h4 id="mtxclockview"><code>MtxClockView</code></h4>\n<p>Possible views for datetimepicker clock.</p>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxClockView</span> = <span class="hljs-string">&apos;hour&apos;</span> | <span class="hljs-string">&apos;minute&apos;</span>;\n</pre>\n<h3 id="constants">Constants</h3>\n<h4 id="mtx_datetimepicker_scroll_strategy"><code>MTX_DATETIMEPICKER_SCROLL_STRATEGY</code></h4>\n<p>Injection token that determines the scroll handling while the calendar is open.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_DATETIMEPICKER_SCROLL_STRATEGY</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">ScrollStrategy</span>&gt;;\n</pre>\n'},47348:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n='<h2>Datetimepicker configuration</h2>\n\n<section>\n  <label>Type:</label>\n  <mat-radio-group [(ngModel)]="type">\n    <mat-radio-button value="datetime">Datetime</mat-radio-button>\n    <mat-radio-button value="date">Date</mat-radio-button>\n    <mat-radio-button value="time">Time</mat-radio-button>\n    <mat-radio-button value="month">Month</mat-radio-button>\n    <mat-radio-button value="year">Year</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n<section>\n  <label>Mode:</label>\n  <mat-radio-group [(ngModel)]="mode">\n    <mat-radio-button value="auto">Auto</mat-radio-button>\n    <mat-radio-button value="landscape">Landscape</mat-radio-button>\n    <mat-radio-button value="portrait">Portrait</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n<section>\n  <label>StartView:</label>\n  <mat-radio-group [(ngModel)]="startView">\n    <mat-radio-button value="month">Month</mat-radio-button>\n    <mat-radio-button value="year">Year</mat-radio-button>\n    <mat-radio-button value="multi-year">Multi-Year</mat-radio-button>\n    <mat-radio-button value="clock">Clock</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="multiYearSelector">MultiYearSelector</mat-checkbox>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="timeInput">TimeInput</mat-checkbox>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="twelvehour">Twelvehour</mat-checkbox>\n</section>\n\n<section>\n  <label>TimeInterval:</label>\n  <mat-slider min="1" max="30" discrete>\n    <input matSliderThumb [(ngModel)]="timeInterval">\n  </mat-slider>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="touchUi">TouchUi</mat-checkbox>\n</section>\n\n<h2>Result</h2>\n\n<mat-form-field>\n  <mat-label>{{type}}</mat-label>\n  <mtx-datetimepicker #datetimePicker\n                      [type]="type"\n                      [mode]="mode"\n                      [multiYearSelector]="multiYearSelector"\n                      [startView]="startView"\n                      [twelvehour]="twelvehour"\n                      [timeInterval]="timeInterval"\n                      [touchUi]="touchUi"\n                      [timeInput]="timeInput"></mtx-datetimepicker>\n  <input [mtxDatetimepicker]="datetimePicker" [formControl]="datetime" matInput required>\n  <mtx-datetimepicker-toggle [for]="datetimePicker" matSuffix></mtx-datetimepicker-toggle>\n</mat-form-field>\n'},27129:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n="label {\n  padding: 0 8px;\n}\n"},85700:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n="import { Component } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport {\n  MtxCalendarView,\n  MtxDatetimepickerMode,\n  MtxDatetimepickerType,\n} from '@ng-matero/extensions/datetimepicker';\nimport { MTX_DATETIME_FORMATS } from '@ng-matero/extensions/core';\n\n@Component({\n  selector: 'datetimepicker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [\n    {\n      provide: MTX_DATETIME_FORMATS,\n      useValue: {\n        parse: {\n          dateInput: 'YYYY-MM-DD',\n          monthInput: 'MMMM',\n          yearInput: 'YYYY',\n          timeInput: 'HH:mm',\n          datetimeInput: 'YYYY-MM-DD HH:mm',\n        },\n        display: {\n          dateInput: 'YYYY-MM-DD',\n          monthInput: 'MMMM',\n          yearInput: 'YYYY',\n          timeInput: 'HH:mm',\n          datetimeInput: 'YYYY-MM-DD HH:mm',\n          monthYearLabel: 'YYYY MMMM',\n          dateA11yLabel: 'LL',\n          monthYearA11yLabel: 'MMMM YYYY',\n          popupHeaderDateLabel: 'MMM DD, ddd',\n        },\n      },\n    },\n  ],\n})\nexport class AppComponent {\n  type: MtxDatetimepickerType = 'datetime';\n  mode: MtxDatetimepickerMode = 'auto';\n  startView: MtxCalendarView = 'month';\n  multiYearSelector = false;\n  touchUi = false;\n  twelvehour = false;\n  timeInterval = 1;\n  timeInput = true;\n\n  datetime = new UntypedFormControl();\n}\n"},86723:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n='<mat-card class="demo-inline-card">\n  <mtx-calendar (selectedChange)="selectedDate = $event" type="date" startView="month">\n  </mtx-calendar>\n</mat-card>\n<p>Selected date: {{selectedDate}}</p>\n\n<mat-card class="demo-inline-card">\n  <mtx-calendar (selectedChange)="selectedTime = $event" type="time" startView="clock">\n  </mtx-calendar>\n</mat-card>\n<p>Selected time: {{selectedTime}}</p>\n'},43923:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n=".demo-inline-card {\n  width: 300px;\n  margin-bottom: 1rem;\n}\n"},32044:(d,c,s)=>{"use strict";s.r(c),s.d(c,{default:()=>n});const n="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'datetimepicker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  selectedDate: Date | null = null;\n  selectedTime: Date | null = null;\n}\n"}}]);