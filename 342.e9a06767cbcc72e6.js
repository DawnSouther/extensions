(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[342],{29342:(p,e,t)=>{"use strict";t.r(e),t.d(e,{ColorPickerApiComponent:()=>Z,ColorPickerModule:()=>X,ColorPickerOverviewComponent:()=>b});var i=t(4521),T=t(63903),s=t(5e3),v=t(79814),f=t(93075),m=t(67322),C=t(77531),x=t(68140),d=t(12779),j=t(76752);const _={title:"Basic",component:(()=>{class a{constructor(){this.color="#3f51b5",this.format="hex"}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-picker-example"]],decls:23,vars:5,consts:[[3,"ngModel","ngModelChange"],["value","hex"],["value","rgb"],["value","hsl"],["value","hsv"],["matInput","",3,"ngModel","mtxColorpicker","format","ngModelChange"],["matSuffix","",3,"for"],["picker",""]],template:function(n,l){if(1&n&&(s.TgZ(0,"div"),s.TgZ(1,"label"),s._uU(2,"Color Format"),s.qZA(),s.TgZ(3,"mat-radio-group",0),s.NdJ("ngModelChange",function(r){return l.format=r}),s.TgZ(4,"mat-radio-button",1),s._uU(5,"hex"),s.qZA(),s.TgZ(6,"mat-radio-button",2),s._uU(7,"rgb"),s.qZA(),s.TgZ(8,"mat-radio-button",3),s._uU(9,"hsl"),s.qZA(),s.TgZ(10,"mat-radio-button",4),s._uU(11,"hsv"),s.qZA(),s.qZA(),s.qZA(),s.TgZ(12,"mat-form-field"),s.TgZ(13,"mat-label"),s._uU(14,"Color picker"),s.qZA(),s.TgZ(15,"input",5),s.NdJ("ngModelChange",function(r){return l.color=r}),s.qZA(),s._UZ(16,"mtx-colorpicker-toggle",6),s._UZ(17,"mtx-colorpicker",null,7),s.TgZ(19,"mat-hint"),s._uU(20,"Choose your favorite color"),s.qZA(),s.TgZ(21,"mat-error"),s._uU(22,"Please enter the color"),s.qZA(),s.qZA()),2&n){const c=s.MAs(18);s.xp6(3),s.Q6J("ngModel",l.format),s.xp6(12),s.Q6J("ngModel",l.color)("mtxColorpicker",c)("format",l.format),s.xp6(1),s.Q6J("for",c)}},directives:[v.VQ,f.JJ,f.On,v.U0,m.KE,m.hX,C.Nt,f.Fj,x.zA,d.s,m.R9,j.YK,m.bx,m.TO],styles:[".mat-radio-group[_ngcontent-%COMP%]{padding:0 .5rem}.mat-radio-button[_ngcontent-%COMP%]{margin:0 .5rem}.mat-form-field[_ngcontent-%COMP%]{margin-top:1rem}"]}),a})(),files:[{file:"app.component.html",content:t(16461),filecontent:t(64132)},{file:"app.component.ts",content:t(22236),filecontent:t(23777)},{file:"app.component.scss",content:t(77095),filecontent:t(24476)}]},P={title:"Disabled",component:(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-picker-example"]],decls:24,vars:6,consts:[["matInput","","disabled","",3,"mtxColorpicker"],["matSuffix","",3,"for"],["cp1",""],["matInput","",3,"mtxColorpicker"],["matSuffix","","disabled","",3,"for"],["cp2",""],["disabled","false"],["cp3",""]],template:function(n,l){if(1&n&&(s.TgZ(0,"p"),s.TgZ(1,"mat-form-field"),s.TgZ(2,"mat-label"),s._uU(3,"Color picker"),s.qZA(),s._UZ(4,"input",0),s._UZ(5,"mtx-colorpicker-toggle",1),s._UZ(6,"mtx-colorpicker",null,2),s.qZA(),s.qZA(),s.TgZ(8,"p"),s.TgZ(9,"mat-form-field"),s.TgZ(10,"mat-label"),s._uU(11,"Color picker"),s.qZA(),s._UZ(12,"input",3),s._UZ(13,"mtx-colorpicker-toggle",4),s._UZ(14,"mtx-colorpicker",null,5),s.qZA(),s.qZA(),s.TgZ(16,"p"),s.TgZ(17,"mat-form-field"),s.TgZ(18,"mat-label"),s._uU(19,"Color picker"),s.qZA(),s._UZ(20,"input",0),s._UZ(21,"mtx-colorpicker-toggle",1),s._UZ(22,"mtx-colorpicker",6,7),s.qZA(),s.qZA()),2&n){const c=s.MAs(7),r=s.MAs(15),k=s.MAs(23);s.xp6(4),s.Q6J("mtxColorpicker",c),s.xp6(1),s.Q6J("for",c),s.xp6(7),s.Q6J("mtxColorpicker",r),s.xp6(1),s.Q6J("for",r),s.xp6(7),s.Q6J("mtxColorpicker",k),s.xp6(1),s.Q6J("for",k)}},directives:[m.KE,m.hX,C.Nt,x.zA,d.s,m.R9,j.YK],styles:[""]}),a})(),files:[{file:"app.component.html",content:t(7440),filecontent:t(33393)},{file:"app.component.ts",content:t(86560),filecontent:t(74372)},{file:"app.component.scss",content:t(85401),filecontent:t(9394)}]};var y=t(63874);const M={title:"Custom Icon",component:(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-picker-example"]],decls:9,vars:2,consts:[["matInput","",3,"mtxColorpicker"],["matSuffix","",3,"for"],["mtxColorpickerToggleIcon",""],["picker",""]],template:function(n,l){if(1&n&&(s.TgZ(0,"mat-form-field"),s.TgZ(1,"mat-label"),s._uU(2,"Color picker"),s.qZA(),s._UZ(3,"input",0),s.TgZ(4,"mtx-colorpicker-toggle",1),s.TgZ(5,"mat-icon",2),s._uU(6,"keyboard_arrow_down"),s.qZA(),s.qZA(),s._UZ(7,"mtx-colorpicker",null,3),s.qZA()),2&n){const c=s.MAs(8);s.xp6(3),s.Q6J("mtxColorpicker",c),s.xp6(1),s.Q6J("for",c)}},directives:[m.KE,m.hX,C.Nt,x.zA,d.s,m.R9,y.Hw,d.q,j.YK],styles:[""]}),a})(),files:[{file:"app.component.html",content:t(42185),filecontent:t(95534)},{file:"app.component.ts",content:t(78150),filecontent:t(56527)},{file:"app.component.scss",content:t(83501),filecontent:t(72224)}]};var A=t(14412),h=t(59904),g=t(69808);const u=function(a,o){return{input:a,label:o}};function S(a,o){if(1&a){const n=s.EpF();s.TgZ(0,"div",8),s.TgZ(1,"color-editable-input",9),s.NdJ("onChange",function(c){return s.CHM(n),s.oxw().handleChange(c)}),s.qZA(),s.qZA()}if(2&a){const n=s.oxw();s.xp6(1),s.Akn(s.WLB(5,u,n.input,n.label)),s.Q6J("value",n.round(100*n.rgb.a))("dragLabel",!0)("dragMax",100)}}function w(a,o){if(1&a){const n=s.EpF();s.TgZ(0,"div",2),s.TgZ(1,"color-swatch",3),s.NdJ("onClick",function(c){return s.CHM(n),s.oxw().handleClick(c)})("onHover",function(c){return s.CHM(n),s.oxw().onSwatchHover.emit(c)}),s.qZA(),s.qZA()}if(2&a){const n=o.$implicit,l=s.oxw();s.xp6(1),s.Akn(l.swatchStyle),s.Q6J("color",l.normalizeValue(n).color)("focusStyle",l.focusStyle(n))}}function O(a,o){if(1&a){const n=s.EpF();s.TgZ(0,"div",12),s.TgZ(1,"color-alpha",13),s.NdJ("onChange",function(c){return s.CHM(n),s.oxw().handleValueChange(c)}),s.qZA(),s.qZA()}if(2&a){const n=s.oxw();s.xp6(1),s.Q6J("radius",2)("rgb",n.rgb)("hsl",n.hsl)}}function U(a,o){if(1&a){const n=s.EpF();s.TgZ(0,"div",14),s.TgZ(1,"color-sketch-preset-colors",15),s.NdJ("onClick",function(c){return s.CHM(n),s.oxw().handleBlockChange(c)})("onSwatchHover",function(c){return s.CHM(n),s.oxw().onSwatchHover.emit(c)}),s.qZA(),s.qZA()}if(2&a){const n=s.oxw();s.xp6(1),s.Q6J("colors",n.presetColors)}}let E=(()=>{class a{constructor(){this.disableAlpha=!1,this.onChange=new s.vpe,this.input={width:"100%",padding:"4px 10% 3px",border:"none",boxSizing:"border-box",boxShadow:"inset 0 0 0 1px #ccc",fontSize:"11px"},this.label={display:"block",textAlign:"center",fontSize:"11px",color:"#222",paddingTop:"3px",paddingBottom:"4px",textTransform:"capitalize"}}round(n){return Math.round(n)}handleChange({data:n,$event:l}){if(n.hex){if((0,h.FX)(n.hex)){const c=new A.C(n.hex);this.onChange.emit({data:{hex:this.disableAlpha||n.hex.length<=6?c.toHex():c.toHex8(),source:"hex"},$event:l})}}else n.r||n.g||n.b?this.onChange.emit({data:{r:n.r||this.rgb.r,g:n.g||this.rgb.g,b:n.b||this.rgb.b,source:"rgb"},$event:l}):n.a?(n.a<0?n.a=0:n.a>100&&(n.a=100),n.a/=100,this.disableAlpha&&(n.a=1),this.onChange.emit({data:{h:this.hsl.h,s:this.hsl.s,l:this.hsl.l,a:Math.round(100*n.a)/100,source:"rgb"},$event:l})):(n.h||n.s||n.l)&&this.onChange.emit({data:{h:n.h||this.hsl.h,s:Number(n.s&&n.s||this.hsl.s),l:Number(n.l&&n.l||this.hsl.l),source:"hsl"},$event:l})}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-sketch-fields"]],inputs:{hsl:"hsl",rgb:"rgb",hex:"hex",disableAlpha:"disableAlpha"},outputs:{onChange:"onChange"},decls:10,vars:31,consts:[[1,"sketch-fields"],[1,"sketch-double"],["label","hex",3,"value","onChange"],[1,"sketch-single"],["label","r",3,"value","dragLabel","dragMax","onChange"],["label","g",3,"value","dragLabel","dragMax","onChange"],["label","b",3,"value","dragLabel","dragMax","onChange"],["class","sketch-alpha",4,"ngIf"],[1,"sketch-alpha"],["label","a",3,"value","dragLabel","dragMax","onChange"]],template:function(n,l){1&n&&(s.TgZ(0,"div",0),s.TgZ(1,"div",1),s.TgZ(2,"color-editable-input",2),s.NdJ("onChange",function(r){return l.handleChange(r)}),s.qZA(),s.qZA(),s.TgZ(3,"div",3),s.TgZ(4,"color-editable-input",4),s.NdJ("onChange",function(r){return l.handleChange(r)}),s.qZA(),s.qZA(),s.TgZ(5,"div",3),s.TgZ(6,"color-editable-input",5),s.NdJ("onChange",function(r){return l.handleChange(r)}),s.qZA(),s.qZA(),s.TgZ(7,"div",3),s.TgZ(8,"color-editable-input",6),s.NdJ("onChange",function(r){return l.handleChange(r)}),s.qZA(),s.qZA(),s.YNc(9,S,2,8,"div",7),s.qZA()),2&n&&(s.xp6(2),s.Akn(s.WLB(19,u,l.input,l.label)),s.Q6J("value",l.hex.replace("#","")),s.xp6(2),s.Akn(s.WLB(22,u,l.input,l.label)),s.Q6J("value",l.rgb.r)("dragLabel",!0)("dragMax",255),s.xp6(2),s.Akn(s.WLB(25,u,l.input,l.label)),s.Q6J("value",l.rgb.g)("dragLabel",!0)("dragMax",255),s.xp6(2),s.Akn(s.WLB(28,u,l.input,l.label)),s.Q6J("value",l.rgb.b)("dragLabel",!0)("dragMax",255),s.xp6(1),s.Q6J("ngIf",!1===l.disableAlpha))},directives:[h.BM,g.O5],styles:[".sketch-fields[_ngcontent-%COMP%]{display:flex;padding-top:4px}.sketch-double[_ngcontent-%COMP%]{flex:2 1 0%}.sketch-single[_ngcontent-%COMP%]{flex:1 1 0%;padding-left:6px}.sketch-alpha[_ngcontent-%COMP%]{flex:1 1 0%;padding-left:6px}[dir=rtl][_nghost-%COMP%]   .sketch-single[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .sketch-single[_ngcontent-%COMP%]{padding-right:6px;padding-left:0}[dir=rtl][_nghost-%COMP%]   .sketch-alpha[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .sketch-alpha[_ngcontent-%COMP%]{padding-right:6px;padding-left:0}"],changeDetection:0}),a})(),F=(()=>{class a{constructor(){this.onClick=new s.vpe,this.onSwatchHover=new s.vpe,this.swatchStyle={borderRadius:"3px",boxShadow:"inset 0 0 0 1px rgba(0,0,0,.15)"}}handleClick({hex:n,$event:l}){this.onClick.emit({hex:n,$event:l})}normalizeValue(n){return"string"==typeof n?{color:n}:n}focusStyle(n){return{boxShadow:`inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${this.normalizeValue(n).color}`}}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-sketch-preset-colors"]],inputs:{colors:"colors"},outputs:{onClick:"onClick",onSwatchHover:"onSwatchHover"},decls:2,vars:1,consts:[[1,"sketch-swatches"],["class","sketch-wrap",4,"ngFor","ngForOf"],[1,"sketch-wrap"],[1,"swatch",3,"color","focusStyle","onClick","onHover"]],template:function(n,l){1&n&&(s.TgZ(0,"div",0),s.YNc(1,w,2,4,"div",1),s.qZA()),2&n&&(s.xp6(1),s.Q6J("ngForOf",l.colors))},directives:[g.sg,h.iP],styles:[".sketch-swatches[_ngcontent-%COMP%]{position:relative;display:flex;flex-wrap:wrap;margin:0 -10px;padding:10px 0 0 10px;border-top:1px solid rgb(238,238,238)}.sketch-wrap[_ngcontent-%COMP%]{width:16px;height:16px;margin:0 10px 10px 0}[dir=rtl][_nghost-%COMP%]   .sketch-swatches[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .sketch-swatches[_ngcontent-%COMP%]{padding-right:10px;padding-left:0}[dir=rtl][_nghost-%COMP%]   .sketch-wrap[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .sketch-wrap[_ngcontent-%COMP%]{margin-left:10px;margin-right:0}"],changeDetection:0}),a})(),q=(()=>{class a extends h.t1{constructor(){super(),this.disableAlpha=!1,this.presetColors=["#D0021B","#F5A623","#F8E71C","#8B572A","#7ED321","#417505","#BD10E0","#9013FE","#4A90E2","#50E3C2","#B8E986","#000000","#4A4A4A","#9B9B9B","#FFFFFF"],this.width=200}afterValidChange(){this.activeBackground=`rgba(${this.rgb.r}, ${this.rgb.g}, ${this.rgb.b}, ${this.disableAlpha?1:this.rgb.a})`}handleValueChange({data:n,$event:l}){this.handleChange(n,l)}handleBlockChange({hex:n,$event:l}){(0,h.FX)(n)&&this.handleChange({hex:n,source:"hex"},l)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-sketch"]],inputs:{disableAlpha:"disableAlpha",presetColors:"presetColors",width:"width"},features:[s._Bn([{provide:f.JU,useExisting:(0,s.Gpc)(()=>a),multi:!0},{provide:h.t1,useExisting:(0,s.Gpc)(()=>a)}]),s.qOj],decls:14,vars:16,consts:[[1,"sketch-saturation"],[3,"hsl","hsv","onChange"],[1,"sketch-controls"],[1,"sketch-sliders"],[1,"sketch-hue"],[3,"hsl","onChange"],["class","sketch-alpha",4,"ngIf"],[1,"sketch-color"],[1,"sketch-active"],[1,"sketch-fields-container"],[3,"rgb","hsl","hex","disableAlpha","onChange"],["class","sketch-swatches-container",4,"ngIf"],[1,"sketch-alpha"],[3,"radius","rgb","hsl","onChange"],[1,"sketch-swatches-container"],[3,"colors","onClick","onSwatchHover"]],template:function(n,l){1&n&&(s.TgZ(0,"div"),s.TgZ(1,"div",0),s.TgZ(2,"color-saturation",1),s.NdJ("onChange",function(r){return l.handleValueChange(r)}),s.qZA(),s.qZA(),s.TgZ(3,"div",2),s.TgZ(4,"div",3),s.TgZ(5,"div",4),s.TgZ(6,"color-hue",5),s.NdJ("onChange",function(r){return l.handleValueChange(r)}),s.qZA(),s.qZA(),s.YNc(7,O,2,3,"div",6),s.qZA(),s.TgZ(8,"div",7),s._UZ(9,"color-checkboard"),s._UZ(10,"div",8),s.qZA(),s.qZA(),s.TgZ(11,"div",9),s.TgZ(12,"color-sketch-fields",10),s.NdJ("onChange",function(r){return l.handleValueChange(r)}),s.qZA(),s.qZA(),s.YNc(13,U,2,1,"div",11),s.qZA()),2&n&&(s.Gre("sketch-picker ",l.className,""),s.Udp("width",l.width),s.xp6(2),s.Q6J("hsl",l.hsl)("hsv",l.hsv),s.xp6(4),s.Q6J("hsl",l.hsl),s.xp6(1),s.Q6J("ngIf",!1===l.disableAlpha),s.xp6(3),s.Udp("background",l.activeBackground),s.xp6(2),s.Q6J("rgb",l.rgb)("hsl",l.hsl)("hex",l.hex)("disableAlpha",l.disableAlpha),s.xp6(1),s.Q6J("ngIf",l.presetColors&&l.presetColors.length))},directives:function(){return[h._m,h.V5,g.O5,h.OU,E,h.zy,F]},styles:[".sketch-picker[_ngcontent-%COMP%]{padding:10px 10px 3px;box-sizing:initial;background:#fff;border-radius:4px;box-shadow:0 0 0 1px #00000026,0 8px 16px #00000026}.sketch-saturation[_ngcontent-%COMP%]{width:100%;padding-bottom:75%;position:relative;overflow:hidden}.sketch-fields-container[_ngcontent-%COMP%]{display:block}.sketch-swatches-container[_ngcontent-%COMP%]{display:block}.sketch-controls[_ngcontent-%COMP%]{display:flex}.sketch-sliders[_ngcontent-%COMP%]{padding:4px 0;flex:1 1 0%}.sketch-hue[_ngcontent-%COMP%]{position:relative;height:10px;overflow:hidden}.sketch-alpha[_ngcontent-%COMP%]{position:relative;height:10px;margin-top:4px;overflow:hidden}.sketch-color[_ngcontent-%COMP%]{width:24px;height:24px;position:relative;margin-top:4px;margin-left:4px;border-radius:3px}.sketch-active[_ngcontent-%COMP%]{position:absolute;top:0px;right:0px;bottom:0px;left:0px;border-radius:2px;box-shadow:#00000026 0 0 0 1px inset,#00000040 0 0 4px inset}[dir=rtl][_nghost-%COMP%]   .sketch-color[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .sketch-color[_ngcontent-%COMP%]{margin-right:4px;margin-left:0}"],changeDetection:0}),a})(),J=(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275mod=s.oAB({type:a}),a.\u0275inj=s.cJS({imports:[[g.ez,h.F2,h.$P,h.lp,h.q7,h.nH,h.wU]]}),a})();function B(a,o){if(1&a){const n=s.EpF();s.TgZ(0,"div"),s.TgZ(1,"color-sketch",5),s.NdJ("onChangeComplete",function(c){s.CHM(n);const r=s.oxw();return s.MAs(6).select(r.getHex8(c))}),s.qZA(),s.qZA()}if(2&a){s.oxw();const n=s.MAs(6);s.Udp("width",240,"px"),s.xp6(1),s.Q6J("color",n.selected)}}const Q={title:"Custom Picker",component:(()=>{class a{getHex8(n){return 1===n.color.rgb.a?n.color.hex:new A.C(n.color.rgb).toHex8String()}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=s.Xpm({type:a,selectors:[["color-picker-example"]],decls:9,vars:3,consts:[["matInput","",3,"mtxColorpicker"],["matSuffix","",3,"for"],[3,"content"],["customPicker",""],["customPickerContent",""],[3,"color","onChangeComplete"]],template:function(n,l){if(1&n&&(s.TgZ(0,"mat-form-field"),s.TgZ(1,"mat-label"),s._uU(2,"Custom Color Picker"),s.qZA(),s._UZ(3,"input",0),s._UZ(4,"mtx-colorpicker-toggle",1),s._UZ(5,"mtx-colorpicker",2,3),s.qZA(),s.YNc(7,B,2,3,"ng-template",null,4,s.W1O)),2&n){const c=s.MAs(6),r=s.MAs(8);s.xp6(3),s.Q6J("mtxColorpicker",c),s.xp6(1),s.Q6J("for",c),s.xp6(1),s.Q6J("content",r)}},directives:[m.KE,m.hX,C.Nt,x.zA,d.s,m.R9,j.YK,q],styles:[""]}),a})(),files:[{file:"app.component.html",content:t(77389),filecontent:t(48642)},{file:"app.component.ts",content:t(90770),filecontent:t(13419)},{file:"app.component.scss",content:t(22618),filecontent:t(40961)}]};var N=t(22281),I=t(29241);function D(a,o){if(1&a&&(s.ynx(0),s._UZ(1,"example-viewer",2),s.BQk()),2&a){const n=o.$implicit;s.xp6(1),s.Q6J("exampleData",n)}}function H(a,o){if(1&a&&(s.ynx(0),s.YNc(1,D,2,1,"ng-container",1),s.BQk()),2&a){const n=o.ngIf;s.xp6(1),s.Q6J("ngForOf",n.examples)}}function L(a,o){if(1&a&&(s.ynx(0),s._UZ(1,"doc-viewer",1),s.BQk()),2&a){const n=o.ngIf;s.xp6(1),s.Q6J("textContent",n.content.default)}}let b=(()=>{class a{constructor(n){this.route=n}}return a.\u0275fac=function(n){return new(n||a)(s.Y36(i.gz))},a.\u0275cmp=s.Xpm({type:a,selectors:[["app-colorpicker-overview"]],decls:9,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"exampleData"]],template:function(n,l){1&n&&(s.TgZ(0,"p"),s.TgZ(1,"code"),s._uU(2,"mtx-colorpicker"),s.qZA(),s._uU(3," uses Chrome style of "),s.TgZ(4,"code"),s._uU(5,"ngx-color"),s.qZA(),s._uU(6,". Now you can change any style what you like very easily.\n"),s.qZA(),s.YNc(7,H,2,1,"ng-container",0),s.ALo(8,"async")),2&n&&(s.xp6(7),s.Q6J("ngIf",s.lcZ(8,1,l.route.data)))},directives:[g.O5,g.sg,N.B],pipes:[g.Ov],encapsulation:2}),a})(),Z=(()=>{class a{constructor(n){this.route=n}}return a.\u0275fac=function(n){return new(n||a)(s.Y36(i.gz))},a.\u0275cmp=s.Xpm({type:a,selectors:[["app-colorpicker-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(n,l){1&n&&(s.YNc(0,L,2,1,"ng-container",0),s.ALo(1,"async")),2&n&&s.Q6J("ngIf",s.lcZ(1,1,l.route.data))},directives:[g.O5,I.z],pipes:[g.Ov],encapsulation:2}),a})(),X=(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275mod=s.oAB({type:a}),a.\u0275inj=s.cJS({imports:[[T.m8,i.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:b,pathMatch:"full",data:{examples:[_,Q,M,P]}},{path:"api",component:Z,pathMatch:"full",data:{content:t(35559)}},{path:"**",redirectTo:"overview"}]),J]]}),a})()},16461:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Color Format<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;format&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hex&quot;</span>&gt;</span>hex<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;rgb&quot;</span>&gt;</span>rgb<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hsl&quot;</span>&gt;</span>hsl<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hsv&quot;</span>&gt;</span>hsv<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;color&quot;</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;picker&quot;</span> [<span class="hljs-attr">format</span>]=<span class="hljs-string">&quot;format&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;picker&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">picker</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-hint</span>&gt;</span>Choose your favorite color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-hint</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-error</span>&gt;</span>Please enter the color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-error</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n'},42185:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;picker&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;picker&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> <span class="hljs-attr">mtxColorpickerToggleIcon</span>&gt;</span>keyboard_arrow_down<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">picker</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n'},77389:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Custom Color Picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;customPicker&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;customPicker&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">customPicker</span> [<span class="hljs-attr">content</span>]=<span class="hljs-string">&quot;customPickerContent&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">customPickerContent</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">style.width.px</span>]=<span class="hljs-string">&quot;240&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">color-sketch</span> [<span class="hljs-attr">color</span>]=<span class="hljs-string">&quot;customPicker.selected&quot;</span>\n                  (<span class="hljs-attr">onChangeComplete</span>)=<span class="hljs-string">&quot;customPicker.select(getHex8($event))&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">color-sketch</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},7440:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;cp1&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;cp1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">cp1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;cp2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;cp2&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">cp2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;cp3&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;cp3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">cp3</span> <span class="hljs-attr">disabled</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},77095:p=>{p.exports='<span class="hljs-selector-class">.mat-radio-group</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5rem</span>;\n}\n\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5rem</span>;\n}\n\n<span class="hljs-selector-class">.mat-form-field</span> {\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1rem</span>;\n}\n'},83501:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},22618:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},85401:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},22236:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ColorFormat</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/colorpicker&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;color-picker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  color = <span class="hljs-string">&#x27;#3f51b5&#x27;</span>;\n  <span class="hljs-attr">format</span>: <span class="hljs-title class_">ColorFormat</span> = <span class="hljs-string">&#x27;hex&#x27;</span>;\n}\n'},78150:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;color-picker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {}\n'},90770:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ColorEvent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ngx-color&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TinyColor</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ctrl/tinycolor&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;color-picker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-title function_">getHex8</span>(<span class="hljs-attr">e</span>: <span class="hljs-title class_">ColorEvent</span>): <span class="hljs-built_in">string</span> {\n    <span class="hljs-keyword">const</span> alpha = e.<span class="hljs-property">color</span>.<span class="hljs-property">rgb</span>.<span class="hljs-property">a</span>;\n    <span class="hljs-keyword">return</span> alpha === <span class="hljs-number">1</span> ? e.<span class="hljs-property">color</span>.<span class="hljs-property">hex</span> : <span class="hljs-keyword">new</span> <span class="hljs-title class_">TinyColor</span>(e.<span class="hljs-property">color</span>.<span class="hljs-property">rgb</span>).<span class="hljs-title function_">toHex8String</span>();\n  }\n}\n'},86560:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;color-picker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {}\n'},35559:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i='<h1 id="color-picker">Color Picker</h1>\n<h2 id="api-reference-for-material-extensions-colorpicker">API reference for Material Extensions colorpicker</h2>\n<p><code>import { MtxColorpickerModule } from &apos;@ng-matero/extensions/colorpicker&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxcolorpicker"><code>MtxColorpicker</code></h4>\n<p>Selector: <code>[mtx-colorpicker]</code></p>\n<p>Exported as: <code>mtxColorpicker</code></p>\n<h5 id="properties">Properties</h5>\n<p>coming soon</p>\n'},64132:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i='<div>\n  <label>Color Format</label>\n  <mat-radio-group [(ngModel)]="format">\n    <mat-radio-button value="hex">hex</mat-radio-button>\n    <mat-radio-button value="rgb">rgb</mat-radio-button>\n    <mat-radio-button value="hsl">hsl</mat-radio-button>\n    <mat-radio-button value="hsv">hsv</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mat-form-field>\n  <mat-label>Color picker</mat-label>\n  <input matInput [(ngModel)]="color" [mtxColorpicker]="picker" [format]="format">\n  <mtx-colorpicker-toggle matSuffix [for]="picker"></mtx-colorpicker-toggle>\n  <mtx-colorpicker #picker></mtx-colorpicker>\n  <mat-hint>Choose your favorite color</mat-hint>\n  <mat-error>Please enter the color</mat-error>\n</mat-form-field>\n'},24476:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i=".mat-radio-group {\n  padding: 0 .5rem;\n}\n\n.mat-radio-button {\n  margin: 0 .5rem;\n}\n\n.mat-form-field {\n  margin-top: 1rem;\n}\n"},23777:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="import { Component } from '@angular/core';\nimport { ColorFormat } from '@ng-matero/extensions/colorpicker';\n\n@Component({\n  selector: 'color-picker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  color = '#3f51b5';\n  format: ColorFormat = 'hex';\n}\n"},95534:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i='<mat-form-field>\n  <mat-label>Color picker</mat-label>\n  <input matInput [mtxColorpicker]="picker">\n  <mtx-colorpicker-toggle matSuffix [for]="picker">\n    <mat-icon mtxColorpickerToggleIcon>keyboard_arrow_down</mat-icon>\n  </mtx-colorpicker-toggle>\n  <mtx-colorpicker #picker></mtx-colorpicker>\n</mat-form-field>\n'},72224:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="/** No CSS for this example */\n"},56527:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'color-picker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n"},48642:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i='<mat-form-field>\n  <mat-label>Custom Color Picker</mat-label>\n  <input matInput [mtxColorpicker]="customPicker">\n  <mtx-colorpicker-toggle matSuffix [for]="customPicker"></mtx-colorpicker-toggle>\n  <mtx-colorpicker #customPicker [content]="customPickerContent"></mtx-colorpicker>\n</mat-form-field>\n\n<ng-template #customPickerContent>\n  <div [style.width.px]="240">\n    <color-sketch [color]="customPicker.selected"\n                  (onChangeComplete)="customPicker.select(getHex8($event))">\n    </color-sketch>\n  </div>\n</ng-template>\n'},40961:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="/** No CSS for this example */\n"},13419:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="import { Component } from '@angular/core';\nimport { ColorEvent } from 'ngx-color';\n\nimport { TinyColor } from '@ctrl/tinycolor';\n\n@Component({\n  selector: 'color-picker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  getHex8(e: ColorEvent): string {\n    const alpha = e.color.rgb.a;\n    return alpha === 1 ? e.color.hex : new TinyColor(e.color.rgb).toHex8String();\n  }\n}\n"},33393:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i='<p>\n  <mat-form-field>\n    <mat-label>Color picker</mat-label>\n    <input matInput [mtxColorpicker]="cp1" disabled>\n    <mtx-colorpicker-toggle matSuffix [for]="cp1"></mtx-colorpicker-toggle>\n    <mtx-colorpicker #cp1></mtx-colorpicker>\n  </mat-form-field>\n</p>\n\n<p>\n  <mat-form-field>\n    <mat-label>Color picker</mat-label>\n    <input matInput [mtxColorpicker]="cp2">\n    <mtx-colorpicker-toggle matSuffix [for]="cp2" disabled></mtx-colorpicker-toggle>\n    <mtx-colorpicker #cp2></mtx-colorpicker>\n  </mat-form-field>\n</p>\n\n<p>\n  <mat-form-field>\n    <mat-label>Color picker</mat-label>\n    <input matInput [mtxColorpicker]="cp3" disabled>\n    <mtx-colorpicker-toggle matSuffix [for]="cp3"></mtx-colorpicker-toggle>\n    <mtx-colorpicker #cp3 disabled="false"></mtx-colorpicker>\n  </mat-form-field>\n</p>\n'},9394:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="/** No CSS for this example */\n"},74372:(p,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});const i="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'color-picker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n"}}]);