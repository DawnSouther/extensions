(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[690],{63690:(l,t,n)=>{"use strict";n.r(t),n.d(t,{DialogApiComponent:()=>b,DialogOverviewComponent:()=>x,routes:()=>Z});var e=n(96814),v=n(1309),D=n(52240),C=n(81208),u=n(32296),s=n(19212),d=n(85344);const y={title:"Basic confirmation",component:(()=>{class a{constructor(p){this.mtxDialog=p}alert(){this.mtxDialog.alert("My name is Zongbin!","",()=>{this.mtxDialog.alert("Glad to meet you!")})}confirm(){this.mtxDialog.confirm("What's your name?","",()=>{this.mtxDialog.alert("Hi, Zongbin!")},()=>{this.mtxDialog.alert("I don't know.")})}open(){this.mtxDialog.open({title:"This is the title",description:"You can write some messages here.",showCloseIcon:!0,buttons:[{text:"CLOSE",onClick:()=>{this.mtxDialog.alert("You click Close button.")}},{color:"primary",text:"VIEW",onClick:()=>{this.mtxDialog.alert("You click View button.")}},{color:"warn",text:"OK",focusInitial:!0,onClick:()=>{this.mtxDialog.alert("You click Ok button.")}}]})}static#s=this.\u0275fac=function(o){return new(o||a)(s.Y36(d.c))};static#n=this.\u0275cmp=s.Xpm({type:a,selectors:[["dialog-example"]],standalone:!0,features:[s.jDz],decls:6,vars:0,consts:[["mat-raised-button","","color","warn",3,"click"],["mat-raised-button","","color","accent",3,"click"],["mat-raised-button","","color","primary",3,"click"]],template:function(o,i){1&o&&(s.TgZ(0,"button",0),s.NdJ("click",function(){return i.alert()}),s._uU(1,"Alert"),s.qZA(),s.TgZ(2,"button",1),s.NdJ("click",function(){return i.confirm()}),s._uU(3,"Confirm"),s.qZA(),s.TgZ(4,"button",2),s.NdJ("click",function(){return i.open()}),s._uU(5,"Open Dialog"),s.qZA())},dependencies:[u.lW],styles:[".mat-mdc-button-base[_ngcontent-%COMP%]{margin:0 .5em}"]})}return a})(),files:[{file:"app.component.html",content:n(71548),filecontent:n(27302)},{file:"app.component.ts",content:n(70557),filecontent:n(65631)},{file:"app.component.scss",content:n(75816),filecontent:n(57713)}]};var h=n(56223),j=n(87466),T=n(89515);function M(a,r){if(1&a&&(s.TgZ(0,"mat-radio-button",2),s._uU(1),s.qZA()),2&a){const p=r.$implicit;s.Q6J("value",p.value),s.xp6(),s.Oqu(p.label)}}const O={title:"I18n confirmation",component:(()=>{class a{constructor(p,o){this.mtxDialog=p,this.translate=o,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",o.addLangs(this.langs.map(i=>i.value)),o.setDefaultLang(this.defaultlang)}open(){this.mtxDialog.open({title:this.translate.stream("title"),description:this.translate.stream("description"),buttons:[{text:this.translate.stream("close"),onClick:()=>{}},{color:"primary",text:this.translate.stream("view"),onClick:()=>{}},{color:"warn",focusInitial:!0,text:this.translate.stream("ok"),onClick:()=>{}}]})}static#s=this.\u0275fac=function(o){return new(o||a)(s.Y36(d.c),s.Y36(T.sK))};static#n=this.\u0275cmp=s.Xpm({type:a,selectors:[["dialog-example"]],standalone:!0,features:[s.jDz],decls:5,vars:1,consts:[[3,"ngModel","ngModelChange","change"],["mat-raised-button","","color","primary",3,"click"],[3,"value"]],template:function(o,i){1&o&&(s.TgZ(0,"mat-radio-group",0),s.NdJ("ngModelChange",function(m){return i.defaultlang=m})("change",function(m){return i.translate.use(m.value)}),s.SjG(1,M,2,2,"mat-radio-button",2,s.x6l),s.qZA(),s.TgZ(3,"button",1),s.NdJ("click",function(){return i.open()}),s._uU(4,"Open Dialog"),s.qZA()),2&o&&(s.Q6J("ngModel",i.defaultlang),s.xp6(),s.wJu(i.langs))},dependencies:[h.u5,h.JJ,h.On,j.VQ,j.U0,u.lW],styles:[".mat-mdc-button-base[_ngcontent-%COMP%]{margin:0 .5em}"]})}return a})(),files:[{file:"app.component.html",content:n(10398),filecontent:n(5103)},{file:"app.component.ts",content:n(3151),filecontent:n(13422)},{file:"app.component.scss",content:n(73895),filecontent:n(87962)},{file:"assets/zh-CN.json",content:n(92178),filecontent:n(39988)},{file:"assets/en-US.json",content:n(94696),filecontent:n(65611)}]};var g=n(17700),k=n(64170),A=n(2032);function w(a,r){if(1&a&&(s.TgZ(0,"div"),s._uU(1," You chose: "),s.TgZ(2,"strong"),s._uU(3),s.qZA()()),2&a){const p=s.oxw();s.xp6(3),s.Oqu(p.animal)}}let E=(()=>{class a{constructor(p){this.mtxDialog=p}openOriginal(){this.mtxDialog.originalOpen(U,{width:"550px",data:{name:"nzbin",animal:"panda"}}).afterClosed().subscribe(o=>{console.log("The dialog was closed"),this.animal=o})}static#s=this.\u0275fac=function(o){return new(o||a)(s.Y36(d.c))};static#n=this.\u0275cmp=s.Xpm({type:a,selectors:[["dialog-example"]],standalone:!0,features:[s.jDz],decls:3,vars:1,consts:[["mat-raised-button","",3,"click"]],template:function(o,i){1&o&&(s.TgZ(0,"button",0),s.NdJ("click",function(){return i.openOriginal()}),s._uU(1,"Open Original Dialog"),s.qZA(),s.YNc(2,w,4,1,"div")),2&o&&(s.xp6(2),s.um2(2,i.animal?2:-1))},dependencies:[u.lW],styles:["div[_ngcontent-%COMP%]{padding:1em 0}"]})}return a})(),U=(()=>{class a{constructor(p,o){this.dialogRef=p,this.data=o}onNoClick(){this.dialogRef.close()}static#s=this.\u0275fac=function(o){return new(o||a)(s.Y36(g.so),s.Y36(g.WI))};static#n=this.\u0275cmp=s.Xpm({type:a,selectors:[["dialog-overview"]],standalone:!0,features:[s.jDz],decls:12,vars:3,consts:[["mat-dialog-title",""],["mat-dialog-content",""],["matInput","",3,"ngModel","ngModelChange"],["mat-dialog-actions",""],["mat-button","",3,"click"],["mat-button","","cdkFocusInitial","",3,"mat-dialog-close"]],template:function(o,i){1&o&&(s.TgZ(0,"h1",0),s._uU(1),s.qZA(),s.TgZ(2,"div",1)(3,"p"),s._uU(4,"What's your favorite animal?"),s.qZA(),s.TgZ(5,"mat-form-field")(6,"input",2),s.NdJ("ngModelChange",function(m){return i.data.animal=m}),s.qZA()()(),s.TgZ(7,"div",3)(8,"button",4),s.NdJ("click",function(){return i.onNoClick()}),s._uU(9,"No Thanks"),s.qZA(),s.TgZ(10,"button",5),s._uU(11,"Ok"),s.qZA()()),2&o&&(s.xp6(),s.hij("Hi, ",i.data.name,""),s.xp6(5),s.Q6J("ngModel",i.data.animal),s.xp6(4),s.Q6J("mat-dialog-close",i.data.animal))},dependencies:[g.uh,g.xY,k.KE,A.Nt,h.u5,h.Fj,h.JJ,h.On,g.H8,u.lW,g.ZT],encapsulation:2})}return a})();const R={title:"Material original dialog",component:E,files:[{file:"app.component.html",content:n(80824),filecontent:n(89471)},{file:"app.component.ts",content:n(85144),filecontent:n(97068)},{file:"app.component.scss",content:n(55641),filecontent:n(57310)},{file:"dialog.html",content:n(76043),filecontent:n(9100)}]};var f=n(52787);function F(a,r){if(1&a&&s._UZ(0,"doc-heading",0)(1,"example-viewer",1),2&a){const p=r.$implicit;s.Q6J("text",p.title),s.xp6(),s.Q6J("exampleData",p)}}function I(a,r){1&a&&s.SjG(0,F,2,2,null,null,s.x6l),2&a&&s.wJu(r.examples)}function _(a,r){1&a&&s._UZ(0,"doc-viewer",0),2&a&&s.Q6J("textContent",r.content.default)}let x=(()=>{class a{constructor(p){this.route=p}static#s=this.\u0275fac=function(o){return new(o||a)(s.Y36(f.gz))};static#n=this.\u0275cmp=s.Xpm({type:a,selectors:[["app-dialog-overview"]],standalone:!0,features:[s.jDz],decls:4,vars:3,consts:[[3,"text"],[3,"exampleData"]],template:function(o,i){if(1&o&&(s.TgZ(0,"p"),s._uU(1," The Extensions dialog is a wrapper of Angular Material dialog.\n"),s.qZA(),s.YNc(2,I,2,0),s.ALo(3,"async")),2&o){let c;s.xp6(2),s.um2(2,(c=s.lcZ(3,1,i.route.data))?2:-1,c)}},dependencies:[v.Q,C.B,e.Ov],encapsulation:2})}return a})(),b=(()=>{class a{constructor(p){this.route=p}static#s=this.\u0275fac=function(o){return new(o||a)(s.Y36(f.gz))};static#n=this.\u0275cmp=s.Xpm({type:a,selectors:[["app-dialog-api"]],standalone:!0,features:[s.jDz],decls:2,vars:3,consts:[[3,"textContent"]],template:function(o,i){if(1&o&&(s.YNc(0,_,1,1,"doc-viewer",0),s.ALo(1,"async")),2&o){let c;s.um2(0,(c=s.lcZ(1,1,i.route.data))?0:-1,c)}},dependencies:[D.z,e.Ov],encapsulation:2})}return a})();const Z=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:x,pathMatch:"full",data:{examples:[y,R,O]}},{path:"api",component:b,pathMatch:"full",data:{content:n(97279)}},{path:"**",redirectTo:"overview"}]},71548:l=>{l.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;warn&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;alert()&quot;</span>&gt;</span>Alert<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;accent&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;confirm()&quot;</span>&gt;</span>Confirm<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;open()&quot;</span>&gt;</span>Open Dialog<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},10398:l=>{l.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  @for (lang of langs; track lang) {\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>{{lang.label}}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  }\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;open()&quot;</span>&gt;</span>Open Dialog<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},80824:l=>{l.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;openOriginal()&quot;</span>&gt;</span>Open Original Dialog<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n@if (animal) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    You chose: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{animal}}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n}\n'},76043:l=>{l.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">mat-dialog-title</span>&gt;</span>Hi, {{ data.name }}<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">mat-dialog-content</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>What&#x27;s your favorite animal?<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;data.animal&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">mat-dialog-actions</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;onNoClick()&quot;</span>&gt;</span>No Thanks<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-button</span> [<span class="hljs-attr">mat-dialog-close</span>]=<span class="hljs-string">&quot;data.animal&quot;</span> <span class="hljs-attr">cdkFocusInitial</span>&gt;</span>Ok<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n'},94696:l=>{l.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;This is the title&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;You can write some messages here&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;CLOSE&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;ok&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;OK&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;view&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;VIEW&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},92178:l=>{l.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u8fd9\u662f\u6807\u9898&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u53ef\u4ee5\u5728\u8fd9\u91cc\u5199\u4e00\u4e9b\u8be6\u7ec6\u4fe1\u606f&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u5173\u95ed&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;ok&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;view&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u67e5\u770b&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},75816:l=>{l.exports='<span class="hljs-selector-class">.mat-mdc-button-base</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;\n}\n'},73895:l=>{l.exports='<span class="hljs-selector-class">.mat-mdc-button-base</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;\n}\n'},55641:l=>{l.exports='<span class="hljs-selector-tag">div</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">1em</span> <span class="hljs-number">0</span>;\n}\n'},70557:l=>{l.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxDialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/dialog&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatButton</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> mtxDialog: MtxDialog</span>) {}\n\n  <span class="hljs-title function_">alert</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`My name is Zongbin!`</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`Glad to meet you!`</span>);\n    });\n  }\n\n  <span class="hljs-title function_">confirm</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">confirm</span>(\n      <span class="hljs-string">`What&#x27;s your name?`</span>,\n      <span class="hljs-string">&#x27;&#x27;</span>,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`Hi, Zongbin!`</span>);\n      },\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`I don&#x27;t know.`</span>);\n      }\n    );\n  }\n\n  <span class="hljs-title function_">open</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">open</span>({\n      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;This is the title&#x27;</span>,\n      <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;You can write some messages here.&#x27;</span>,\n      <span class="hljs-attr">showCloseIcon</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;CLOSE&#x27;</span>,\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`You click Close button.`</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;VIEW&#x27;</span>,\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`You click View button.`</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;OK&#x27;</span>,\n          <span class="hljs-attr">focusInitial</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`You click Ok button.`</span>);\n          },\n        },\n      ],\n    });\n  }\n}\n'},3151:l=>{l.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxDialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/dialog&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TranslateService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatRadioGroup</span>, <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatButton</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">private</span> mtxDialog: MtxDialog,\n    <span class="hljs-keyword">public</span> translate: TranslateService\n  </span>) {\n    translate.<span class="hljs-title function_">addLangs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">langs</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span>));\n    translate.<span class="hljs-title function_">setDefaultLang</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultlang</span>);\n  }\n\n  <span class="hljs-title function_">open</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">open</span>({\n      <span class="hljs-attr">title</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;title&#x27;</span>),\n      <span class="hljs-attr">description</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;description&#x27;</span>),\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;close&#x27;</span>),\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {},\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;view&#x27;</span>),\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {},\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">focusInitial</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {},\n        },\n      ],\n    });\n  }\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n}\n'},85144:l=>{l.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">Inject</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-variable constant_">MAT_DIALOG_DATA</span>,\n  <span class="hljs-title class_">MatDialogActions</span>,\n  <span class="hljs-title class_">MatDialogClose</span>,\n  <span class="hljs-title class_">MatDialogContent</span>,\n  <span class="hljs-title class_">MatDialogRef</span>,\n  <span class="hljs-title class_">MatDialogTitle</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/dialog&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatFormField</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/form-field&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatInput</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/input&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxDialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/dialog&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatButton</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  animal?: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> mtxDialog: MtxDialog</span>) {}\n\n  <span class="hljs-title function_">openOriginal</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> dialogRef = <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">originalOpen</span>(<span class="hljs-title class_">DialogOriginalOverviewComponent</span>, {\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;550px&#x27;</span>,\n      <span class="hljs-attr">data</span>: { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;nzbin&#x27;</span>, <span class="hljs-attr">animal</span>: <span class="hljs-string">&#x27;panda&#x27;</span> },\n    });\n\n    dialogRef.<span class="hljs-title function_">afterClosed</span>().<span class="hljs-title function_">subscribe</span>(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;The dialog was closed&#x27;</span>);\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">animal</span> = result;\n    });\n  }\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-overview&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./dialog.html&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">MatDialogTitle</span>,\n    <span class="hljs-title class_">MatDialogContent</span>,\n    <span class="hljs-title class_">MatFormField</span>,\n    <span class="hljs-title class_">MatInput</span>,\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">MatDialogActions</span>,\n    <span class="hljs-title class_">MatButton</span>,\n    <span class="hljs-title class_">MatDialogClose</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DialogOriginalOverviewComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">public</span> dialogRef: MatDialogRef&lt;DialogOriginalOverviewComponent&gt;,\n    <span class="hljs-meta">@Inject</span>(MAT_DIALOG_DATA) <span class="hljs-keyword">public</span> data: <span class="hljs-built_in">any</span>\n  </span>) {}\n\n  <span class="hljs-title function_">onNoClick</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">dialogRef</span>.<span class="hljs-title function_">close</span>();\n  }\n}\n'},97279:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='<h1 id="dialog">Dialog</h1>\n<h2 id="api-reference-for-material-extensions-dialog">API reference for Material Extensions Dialog</h2>\n<p><code>import { MtxDialogModule } from &apos;@ng-matero/extensions/dialog&apos;;</code></p>\n<h3 id="services">Services</h3>\n<h4 id="mtxdialog"><code>MtxDialog</code></h4>\n<h5 id="methods">Methods</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><strong><code>alert</code></strong><code>(title: string | Observable&lt;string&gt;, description: string | Observable&lt;string&gt; = &apos;&apos;, onOk = () =&gt; {})</code></td>\n<td align="left">A simple alert dialog with a single button.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Parameters</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>title: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog title.</td>\n</tr>\n<tr>\n<td align="left"><code>description: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog description.</td>\n</tr>\n<tr>\n<td align="left"><code>onOk: () =&gt; void</code></td>\n<td align="left">The ok callback function.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><strong><code>confirm</code></strong><code>(title: string | Observable&lt;string&gt;, description: string | Observable&lt;string&gt; = &apos;&apos;, onOk = () =&gt; {}, onClose = () =&gt; {})</code></td>\n<td align="left">A confirm dialog with a cancel and a confirm button.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Parameters</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>title: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog title.</td>\n</tr>\n<tr>\n<td align="left"><code>description: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog description.</td>\n</tr>\n<tr>\n<td align="left"><code>onOk: () =&gt; void</code></td>\n<td align="left">The ok callback function.</td>\n</tr>\n<tr>\n<td align="left"><code>onClose: () =&gt; void</code></td>\n<td align="left">The close callback function.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><strong><code>open</code></strong><code>(config: MtxDialogData, componentOrTemplateRef: ComponentType&lt;any&gt; | TemplateRef&lt;any&gt; = MtxDialogComponent)</code></td>\n<td align="left">Opens a modal dialog containing the given template.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Parameters</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>config: MtxDialogData</code></td>\n<td align="left">The dialog description.</td>\n</tr>\n<tr>\n<td align="left"><code>componentOrTemplateRef: ComponentType&lt;T&gt; | TemplateRef&lt;any&gt;</code></td>\n<td align="left">The component to load into the dialog.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><strong><code>originalOpen</code></strong><code>(componentOrTemplateRef: ComponentType&lt;any&gt; | TemplateRef&lt;any&gt; = MtxDialogComponent, config: any)</code></td>\n<td align="left">The original <code>matDialog</code> open method.</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align="left">Parameters</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>componentOrTemplateRef: ComponentType&lt;T&gt; | TemplateRef&lt;any&gt;</code></td>\n<td align="left">The component to load into the dialog.</td>\n</tr>\n<tr>\n<td align="left"><code>config?: MatDialogConfig&lt;D&gt;</code></td>\n<td align="left">The dialog description.</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxdialogdata"><code>MtxDialogData</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxDialogData</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">MatDialogConfig</span> {\n  title?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  description?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  buttons?: <span class="hljs-title class_">MtxDialogBtns</span>[];\n  showCloseIcon?: <span class="hljs-built_in">boolean</span>;\n}\n</pre>\n<h4 id="mtxdialogbtns"><code>MtxDialogBtns</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxDialogBtns</span> {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">&apos;&apos;</span> | <span class="hljs-string">&apos;raised&apos;</span> | <span class="hljs-string">&apos;stroked&apos;</span> | <span class="hljs-string">&apos;flat&apos;</span>;\n  color?: <span class="hljs-string">&apos;&apos;</span> | <span class="hljs-string">&apos;primary&apos;</span> | <span class="hljs-string">&apos;accent&apos;</span> | <span class="hljs-string">&apos;warn&apos;</span>;\n  <span class="hljs-keyword">class</span>?: <span class="hljs-built_in">string</span>;\n  focusInitial?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">text</span>: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  onClick?: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n}\n</pre>\n'},27302:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='<button mat-raised-button color="warn" (click)="alert()">Alert</button>\n<button mat-raised-button color="accent" (click)="confirm()">Confirm</button>\n<button mat-raised-button color="primary" (click)="open()">Open Dialog</button>\n'},57713:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e=".mat-mdc-button-base {\n  margin: 0 .5em;\n}\n"},65631:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e="import { Component } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MtxDialog } from '@ng-matero/extensions/dialog';\n\n@Component({\n  selector: 'dialog-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MatButton],\n})\nexport class AppComponent {\n  constructor(private mtxDialog: MtxDialog) {}\n\n  alert() {\n    this.mtxDialog.alert(`My name is Zongbin!`, '', () => {\n      this.mtxDialog.alert(`Glad to meet you!`);\n    });\n  }\n\n  confirm() {\n    this.mtxDialog.confirm(\n      `What's your name?`,\n      '',\n      () => {\n        this.mtxDialog.alert(`Hi, Zongbin!`);\n      },\n      () => {\n        this.mtxDialog.alert(`I don't know.`);\n      }\n    );\n  }\n\n  open() {\n    this.mtxDialog.open({\n      title: 'This is the title',\n      description: 'You can write some messages here.',\n      showCloseIcon: true,\n      buttons: [\n        {\n          text: 'CLOSE',\n          onClick: () => {\n            this.mtxDialog.alert(`You click Close button.`);\n          },\n        },\n        {\n          color: 'primary',\n          text: 'VIEW',\n          onClick: () => {\n            this.mtxDialog.alert(`You click View button.`);\n          },\n        },\n        {\n          color: 'warn',\n          text: 'OK',\n          focusInitial: true,\n          onClick: () => {\n            this.mtxDialog.alert(`You click Ok button.`);\n          },\n        },\n      ],\n    });\n  }\n}\n"},5103:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  @for (lang of langs; track lang) {\n    <mat-radio-button [value]="lang.value">{{lang.label}}</mat-radio-button>\n  }\n</mat-radio-group>\n\n<button mat-raised-button color="primary" (click)="open()">Open Dialog</button>\n'},87962:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e=".mat-mdc-button-base {\n  margin: 0 .5em;\n}\n"},13422:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e="import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { MtxDialog } from '@ng-matero/extensions/dialog';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'dialog-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [FormsModule, MatRadioGroup, MatRadioButton, MatButton],\n})\nexport class AppComponent {\n  constructor(\n    private mtxDialog: MtxDialog,\n    public translate: TranslateService\n  ) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n\n  open() {\n    this.mtxDialog.open({\n      title: this.translate.stream('title'),\n      description: this.translate.stream('description'),\n      buttons: [\n        {\n          text: this.translate.stream('close'),\n          onClick: () => {},\n        },\n        {\n          color: 'primary',\n          text: this.translate.stream('view'),\n          onClick: () => {},\n        },\n        {\n          color: 'warn',\n          focusInitial: true,\n          text: this.translate.stream('ok'),\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n}\n"},89471:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='<button mat-raised-button (click)="openOriginal()">Open Original Dialog</button>\n\n@if (animal) {\n  <div>\n    You chose: <strong>{{animal}}</strong>\n  </div>\n}\n'},57310:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e="div {\n  padding: 1em 0;\n}\n"},97068:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e="import { Component, Inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogRef,\n  MatDialogTitle,\n} from '@angular/material/dialog';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MtxDialog } from '@ng-matero/extensions/dialog';\n\n@Component({\n  selector: 'dialog-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MatButton],\n})\nexport class AppComponent {\n  animal?: string;\n\n  constructor(private mtxDialog: MtxDialog) {}\n\n  openOriginal() {\n    const dialogRef = this.mtxDialog.originalOpen(DialogOriginalOverviewComponent, {\n      width: '550px',\n      data: { name: 'nzbin', animal: 'panda' },\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview',\n  templateUrl: './dialog.html',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    MatFormField,\n    MatInput,\n    FormsModule,\n    MatDialogActions,\n    MatButton,\n    MatDialogClose,\n  ],\n})\nexport class DialogOriginalOverviewComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOriginalOverviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n"},9100:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='<h1 mat-dialog-title>Hi, {{ data.name }}</h1>\n<div mat-dialog-content>\n  <p>What\'s your favorite animal?</p>\n  <mat-form-field>\n    <input matInput [(ngModel)]="data.animal" />\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)="onNoClick()">No Thanks</button>\n  <button mat-button [mat-dialog-close]="data.animal" cdkFocusInitial>Ok</button>\n</div>\n'},65611:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='{\n  "title": "This is the title",\n  "description": "You can write some messages here",\n  "close": "CLOSE",\n  "ok": "OK",\n  "view": "VIEW"\n}\n'},39988:(l,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>e});const e='{\n  "title": "\u8fd9\u662f\u6807\u9898",\n  "description": "\u53ef\u4ee5\u5728\u8fd9\u91cc\u5199\u4e00\u4e9b\u8be6\u7ec6\u4fe1\u606f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a",\n  "view": "\u67e5\u770b"\n}\n'}}]);