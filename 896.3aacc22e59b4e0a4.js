(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[896],{29896:(c,i,e)=>{"use strict";e.r(i),e.d(i,{GridApiComponent:()=>us,GridModule:()=>wl,GridOverviewComponent:()=>gs,TranslateHttpLoaderFactory:()=>ms});var r=e(52787),xs=e(6786),_s=e(35061),U=e(69862),Z=e(89515);const u=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}];var s=e(65879),C=e(86825),z=e(78337),_=e(49538),Y=e(21476),R=e(13566),B=e(79420),m=e(96814),M=e(75986),b=e(32296),fs=e(16007),v=e(45034),P=e(17400),I=e(76004),O=e(42495),T=e(14643);let S=(()=>{class t{constructor(){this._pendingResizeDelta=null}updateTableWidthAndStickyColumns(n){if(null===this._pendingResizeDelta){const a=this.columnResize.elementRef.nativeElement,o=k(a);this.styleScheduler.schedule(()=>{a.style.width=(0,O.HM)(o+this._pendingResizeDelta),this._pendingResizeDelta=null}),this.styleScheduler.scheduleEnd(()=>{this.table.updateStickyColumnStyles()})}this._pendingResizeDelta=(this._pendingResizeDelta??0)+n}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac}),t})(),js=(()=>{class t extends S{constructor(n,a,o){super(),this.columnResize=n,this.styleScheduler=a,this.table=o}applyColumnSize(n,a,o,p){const d=o-(p??k(a));0!==d&&(this.styleScheduler.schedule(()=>{a.style.width=(0,O.HM)(o)}),this.updateTableWidthAndStickyColumns(d))}applyMinColumnSize(n,a,o){const p=k(a),d=Math.max(p,o);this.applyColumnSize(n,a,d,p)}applyMaxColumnSize(n,a,o){const p=k(a),d=Math.min(p,o);this.applyColumnSize(n,a,d,p)}}return t.\u0275fac=function(n){return new(n||t)(s.LFG(v.e),s.LFG(T.nl),s.LFG(T.zC))},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac}),t})();function k(t){return function bs(t){return Number(t.match(/(\d+)px/)?.[1])}(t.style.width)||t.offsetWidth}const ys={provide:S,useClass:js},ws=[...[P.H,I.Y,P.x],ys];class As extends v.e{getTableHeight(){const l=this.elementRef.nativeElement,n=l.parentNode;return n.classList.contains("mat-table-container")?n.offsetHeight:l.offsetHeight}}let Ms=(()=>{class t extends As{constructor(n,a,o,p,d){super(),this.columnResizeNotifier=n,this.elementRef=a,this.eventDispatcher=o,this.ngZone=p,this.notifier=d}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(P.H),s.Y36(s.SBq),s.Y36(I.Y),s.Y36(s.R0b),s.Y36(P.x))},t.\u0275dir=s.lG2({type:t,selectors:[["table","mat-table","","columnResize",""]],hostAttrs:[1,"mat-column-resize-table"],features:[s._Bn([...ws,{provide:v.e,useExisting:t}]),s.qOj]}),t})();var vs=e(68484),Ss=e(78645),N=e(63019),K=e(59773),Ds=e(32181),Es=e(47422),V=e(80919),Gs=e(63857);const ss="cdk-resizable-overlay-thumb-active";let Ps=(()=>{class t{constructor(){this.isResizable=!0,this.minWidthPxInternal=0,this.maxWidthPxInternal=Number.MAX_SAFE_INTEGER,this.destroyed=new Ss.x,this._viewInitialized=!1,this._isDestroyed=!1}get minWidthPx(){return this.minWidthPxInternal}set minWidthPx(n){n&&(this.minWidthPxInternal=n),this.columnResize.setResized(),this.elementRef.nativeElement&&this._viewInitialized&&this._applyMinWidthPx()}get maxWidthPx(){return this.maxWidthPxInternal}set maxWidthPx(n){n&&(this.maxWidthPxInternal=n),this.columnResize.setResized(),this.elementRef.nativeElement&&this._viewInitialized&&this._applyMaxWidthPx()}ngAfterViewInit(){this.isResizable&&(this._listenForRowHoverEvents(),this._listenForResizeEvents(),this._appendInlineHandle(),this.styleScheduler.scheduleEnd(()=>{this._isDestroyed||(this._viewInitialized=!0,this._applyMinWidthPx(),this._applyMaxWidthPx())}))}ngOnDestroy(){this._isDestroyed=!0,this.destroyed.next(),this.destroyed.complete(),this.inlineHandle?.remove(),this.overlayRef?.dispose()}_createOverlayForHandle(){const n="rtl"===this.directionality.value,a=this.overlay.position().flexibleConnectedTo(this.elementRef.nativeElement).withFlexibleDimensions(!1).withGrowAfterOpen(!1).withPush(!1).withDefaultOffsetX(n?1:0).withPositions([{originX:n?"start":"end",originY:"top",overlayX:"center",overlayY:"top"}]);return this.overlay.create({direction:"ltr",disposeOnNavigation:!0,positionStrategy:a,scrollStrategy:this.overlay.scrollStrategies.reposition(),width:"16px"})}_listenForRowHoverEvents(){const n=this.elementRef.nativeElement,a=(0,K.R)(this.destroyed);this.eventDispatcher.resizeOverlayVisibleForHeaderRow((0,Gs.o)(n,Es.b7)).pipe(a).subscribe(o=>{o?(this.overlayRef||(this.overlayRef=this._createOverlayForHandle()),this._showHandleOverlay()):this.overlayRef&&this.overlayRef.detach()})}_listenForResizeEvents(){const n=(0,K.R)(this.destroyed);(0,N.T)(this.resizeNotifier.resizeCanceled,this.resizeNotifier.triggerResize).pipe(n,(0,Ds.h)(a=>a.columnId===this.columnDef.name)).subscribe(({size:a,previousSize:o,completeImmediately:p})=>{this.elementRef.nativeElement.classList.add(ss),this._applySize(a,o),p&&this._completeResizeOperation()}),(0,N.T)(this.resizeNotifier.resizeCanceled,this.resizeNotifier.resizeCompleted).pipe(n).subscribe(a=>{this._cleanUpAfterResize(a)})}_completeResizeOperation(){this.ngZone.run(()=>{this.resizeNotifier.resizeCompleted.next({columnId:this.columnDef.name,size:this.elementRef.nativeElement.offsetWidth})})}_cleanUpAfterResize(n){this.elementRef.nativeElement.classList.remove(ss),this.overlayRef&&this.overlayRef.hasAttached()&&(this._updateOverlayHandleHeight(),this.overlayRef.updatePosition(),n.columnId===this.columnDef.name&&this.inlineHandle.focus())}_createHandlePortal(){const n=s.zs3.create({parent:this.injector,providers:[{provide:V.a,useValue:new V.a(this.elementRef,this.overlayRef,this.minWidthPx,this.maxWidthPx)}]});return new vs.C5(this.getOverlayHandleComponentType(),this.viewContainerRef,n)}_showHandleOverlay(){this._updateOverlayHandleHeight(),this.overlayRef.attach(this._createHandlePortal()),this.changeDetectorRef.markForCheck()}_updateOverlayHandleHeight(){this.overlayRef.updateSize({height:this.elementRef.nativeElement.offsetHeight})}_applySize(n,a){const o=Math.min(Math.max(n,this.minWidthPx,0),this.maxWidthPx);this.resizeStrategy.applyColumnSize(this.columnDef.cssClassFriendlyName,this.elementRef.nativeElement,o,a)}_applyMinWidthPx(){this.resizeStrategy.applyMinColumnSize(this.columnDef.cssClassFriendlyName,this.elementRef.nativeElement,this.minWidthPx)}_applyMaxWidthPx(){this.resizeStrategy.applyMaxColumnSize(this.columnDef.cssClassFriendlyName,this.elementRef.nativeElement,this.maxWidthPx)}_appendInlineHandle(){this.styleScheduler.schedule(()=>{this.inlineHandle=this.document.createElement("div"),this.inlineHandle.tabIndex=0,this.inlineHandle.className=this.getInlineHandleCssClassName(),this.elementRef.nativeElement.appendChild(this.inlineHandle)})}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275dir=s.lG2({type:t}),t})();var Os=e(33888);class ks extends Ps{constructor(){super(...arguments),this.minWidthPxInternal=32}getInlineHandleCssClassName(){return"mat-resizable-handle"}getOverlayHandleComponentType(){return Os.V}}var Zs=e(49388),Rs=e(33651);let Bs=(()=>{class t extends ks{get hasResizableClass(){return this.isResizable?"mat-resizable":""}get resizable(){return this.isResizable}set resizable(n){this.isResizable=null==n||""===n||n}constructor(n,a,o,p,d,h,g,f,L,Al,Ml,vl,Sl,Dl){super(),this.columnDef=n,this.columnResize=a,this.directionality=o,this.elementRef=d,this.eventDispatcher=h,this.injector=g,this.ngZone=f,this.overlay=L,this.resizeNotifier=Al,this.resizeStrategy=Ml,this.styleScheduler=vl,this.viewContainerRef=Sl,this.changeDetectorRef=Dl,this.isResizable=!0,this.document=p}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(T.fo),s.Y36(v.e),s.Y36(Zs.Is),s.Y36(m.K0),s.Y36(s.SBq),s.Y36(I.Y),s.Y36(s.zs3),s.Y36(s.R0b),s.Y36(Rs.aV),s.Y36(P.x),s.Y36(S),s.Y36(T.nl),s.Y36(s.s_b),s.Y36(s.sBO))},t.\u0275dir=s.lG2({type:t,selectors:[["mat-header-cell","resizable",""],["th","mat-header-cell","","resizable",""]],hostAttrs:[1,"mat-resizable"],hostVars:2,hostBindings:function(n,a){2&n&&s.Tol(a.hasResizableClass)},inputs:{minWidthPx:["matResizableMinWidthPx","minWidthPx"],maxWidthPx:["matResizableMaxWidthPx","maxWidthPx"],resizable:"resizable"},features:[s.qOj]}),t})();var F=e(2664),Is=e(85344),ns=e(22557),ts=e(92596),Ns=e(39014),q=e(30617),H=e(42469);let Fs=(()=>{class t{transform(n,a,o,p){return"string"==typeof n.class?n.class:"function"==typeof n.class?n.class(a,n):""}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275pipe=s.Yjl({name:"colClass",type:t,pure:!0}),t})(),qs=(()=>{class t{transform(n,a,o,p){const d=typeof a>"u"?o:a,h=d%2==1?["mat-row-odd"]:[];if(p)for(const g of Object.keys(p))p[g](n,d)&&h.push(g);return h.join(" ")}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275pipe=s.Yjl({name:"rowClass",type:t,pure:!0}),t})(),Hs=(()=>{class t{transform(n,a,o,p){return"function"==typeof n?n(a):Array.isArray(n)?n:[]}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275pipe=s.Yjl({name:"cellActions",type:t,pure:!0}),t})(),Ws=(()=>{class t{transform(n){return"string"==typeof n.tooltip||(0,F.b)(n.tooltip)?{message:n.tooltip}:n.tooltip||{message:""}}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275pipe=s.Yjl({name:"cellActionTooltip",type:t,pure:!0}),t})(),Js=(()=>{class t{transform(n){return"number"==typeof n.badge||"string"==typeof n.badge||(0,F.b)(n.badge)?{content:n.badge}:n.badge||{content:""}}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275pipe=s.Yjl({name:"cellActionBadge",type:t,pure:!0}),t})(),Qs=(()=>{class t{transform(n,a,o,p){return"boolean"==typeof n.disabled?n.disabled:"function"==typeof n.disabled&&n.disabled(a)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275pipe=s.Yjl({name:"cellActionDisable",type:t,pure:!0}),t})(),Us=(()=>{class t{constructor(n){this.utils=n}transform(n,a){return"string"==typeof a.summary?a.summary:"function"==typeof a.summary?a.summary(this.utils.getColData(n,a),a):void 0}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(B.U,16))},t.\u0275pipe=s.Yjl({name:"cellSummary",type:t,pure:!0}),t})();function zs(t,l){if(1&t&&(s._UZ(0,"span",3),s.ALo(1,"cellSummary"),s.ALo(2,"cellSummary")),2&t){const n=s.oxw();s.Q6J("title",n._getFormatterTooltip(s.xi3(1,2,n.data,n.colDef)))("innerHTML",n._getText(s.xi3(2,5,n.data,n.colDef)),s.oJD)}}function Ys(t,l){if(1&t&&s._UZ(0,"span",3),2&t){const n=s.oxw(2);s.Q6J("title",n._getFormatterTooltip(n.colDef.formatter(n.rowData,n.colDef)))("innerHTML",n._getText(n.colDef.formatter(n.rowData,n.colDef)),s.oJD)}}function Xs(t,l){if(1&t&&s.YNc(0,Ys,1,2,"span",0),2&t){const n=s.oxw(),a=s.MAs(4);s.Q6J("ngIf",n.colDef.formatter)("ngIfElse",a)}}function $s(t,l){if(1&t&&(s.TgZ(0,"mat-icon",11),s._uU(1),s.qZA()),2&t){const n=s.oxw(3).$implicit;s.xp6(1),s.Oqu(n.icon)}}const A=function(t){return["mtx-grid-action-button",t]};function Ks(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",9),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.YNc(25,$s,2,1,"mat-icon",10),s.TgZ(26,"span"),s._uU(27),s.ALo(28,"async"),s.ALo(29,"toObservable"),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(74,A,n.class||""))("disabled",s.gM2(2,21,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,26,s.lcZ(4,28,s.lcZ(5,30,n).message)))("matTooltipClass",s.lcZ(6,32,n).class)("matTooltipHideDelay",s.lcZ(7,34,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,36,n).showDelay)("matTooltipPosition",s.lcZ(9,38,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,40,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,42,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,44,n).disabled)("matBadge",s.lcZ(13,46,s.lcZ(14,48,s.lcZ(15,50,n).content)))("matBadgeDescription",s.lcZ(16,52,s.lcZ(17,54,s.lcZ(18,56,n).description)))("matBadgeColor",s.lcZ(19,58,n).color)("matBadgePosition",s.lcZ(20,60,n).position||"above after")("matBadgeSize",s.lcZ(21,62,n).size||"medium")("matBadgeOverlap",s.lcZ(22,64,n).overlap)("matBadgeDisabled",s.lcZ(23,66,n).disabled)("matBadgeHidden",s.lcZ(24,68,n).hidden),s.xp6(24),s.Q6J("ngIf",n.icon),s.xp6(2),s.Oqu(s.lcZ(28,70,s.lcZ(29,72,n.text)))}}function Vs(t,l){if(1&t&&(s.TgZ(0,"mat-icon",11),s._uU(1),s.qZA()),2&t){const n=s.oxw(3).$implicit;s.xp6(1),s.Oqu(n.icon)}}function sn(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",12),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.YNc(25,Vs,2,1,"mat-icon",10),s.TgZ(26,"span"),s._uU(27),s.ALo(28,"async"),s.ALo(29,"toObservable"),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(74,A,n.class||""))("disabled",s.gM2(2,21,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,26,s.lcZ(4,28,s.lcZ(5,30,n).message)))("matTooltipClass",s.lcZ(6,32,n).class)("matTooltipHideDelay",s.lcZ(7,34,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,36,n).showDelay)("matTooltipPosition",s.lcZ(9,38,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,40,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,42,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,44,n).disabled)("matBadge",s.lcZ(13,46,s.lcZ(14,48,s.lcZ(15,50,n).content)))("matBadgeDescription",s.lcZ(16,52,s.lcZ(17,54,s.lcZ(18,56,n).description)))("matBadgeColor",s.lcZ(19,58,n).color)("matBadgePosition",s.lcZ(20,60,n).position||"above after")("matBadgeSize",s.lcZ(21,62,n).size||"medium")("matBadgeOverlap",s.lcZ(22,64,n).overlap)("matBadgeDisabled",s.lcZ(23,66,n).disabled)("matBadgeHidden",s.lcZ(24,68,n).hidden),s.xp6(24),s.Q6J("ngIf",n.icon),s.xp6(2),s.Oqu(s.lcZ(28,70,s.lcZ(29,72,n.text)))}}function nn(t,l){if(1&t&&(s.TgZ(0,"mat-icon",11),s._uU(1),s.qZA()),2&t){const n=s.oxw(3).$implicit;s.xp6(1),s.Oqu(n.icon)}}function tn(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",13),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.YNc(25,nn,2,1,"mat-icon",10),s.TgZ(26,"span"),s._uU(27),s.ALo(28,"async"),s.ALo(29,"toObservable"),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(74,A,n.class||""))("disabled",s.gM2(2,21,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,26,s.lcZ(4,28,s.lcZ(5,30,n).message)))("matTooltipClass",s.lcZ(6,32,n).class)("matTooltipHideDelay",s.lcZ(7,34,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,36,n).showDelay)("matTooltipPosition",s.lcZ(9,38,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,40,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,42,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,44,n).disabled)("matBadge",s.lcZ(13,46,s.lcZ(14,48,s.lcZ(15,50,n).content)))("matBadgeDescription",s.lcZ(16,52,s.lcZ(17,54,s.lcZ(18,56,n).description)))("matBadgeColor",s.lcZ(19,58,n).color)("matBadgePosition",s.lcZ(20,60,n).position||"above after")("matBadgeSize",s.lcZ(21,62,n).size||"medium")("matBadgeOverlap",s.lcZ(22,64,n).overlap)("matBadgeDisabled",s.lcZ(23,66,n).disabled)("matBadgeHidden",s.lcZ(24,68,n).hidden),s.xp6(24),s.Q6J("ngIf",n.icon),s.xp6(2),s.Oqu(s.lcZ(28,70,s.lcZ(29,72,n.text)))}}function an(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",14),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.TgZ(25,"mat-icon",11),s._uU(26),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(69,A,n.class||""))("disabled",s.gM2(2,20,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,25,s.lcZ(4,27,s.lcZ(5,29,n).message)))("matTooltipClass",s.lcZ(6,31,n).class)("matTooltipHideDelay",s.lcZ(7,33,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,35,n).showDelay)("matTooltipPosition",s.lcZ(9,37,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,39,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,41,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,43,n).disabled)("matBadge",s.lcZ(13,45,s.lcZ(14,47,s.lcZ(15,49,n).content)))("matBadgeDescription",s.lcZ(16,51,s.lcZ(17,53,s.lcZ(18,55,n).description)))("matBadgeColor",s.lcZ(19,57,n).color)("matBadgePosition",s.lcZ(20,59,n).position||"above after")("matBadgeSize",s.lcZ(21,61,n).size||"medium")("matBadgeOverlap",s.lcZ(22,63,n).overlap)("matBadgeDisabled",s.lcZ(23,65,n).disabled)("matBadgeHidden",s.lcZ(24,67,n).hidden),s.xp6(25),s.Oqu(n.icon)}}function en(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",15),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.TgZ(25,"mat-icon",11),s._uU(26),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(69,A,n.class||""))("disabled",s.gM2(2,20,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,25,s.lcZ(4,27,s.lcZ(5,29,n).message)))("matTooltipClass",s.lcZ(6,31,n).class)("matTooltipHideDelay",s.lcZ(7,33,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,35,n).showDelay)("matTooltipPosition",s.lcZ(9,37,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,39,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,41,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,43,n).disabled)("matBadge",s.lcZ(13,45,s.lcZ(14,47,s.lcZ(15,49,n).content)))("matBadgeDescription",s.lcZ(16,51,s.lcZ(17,53,s.lcZ(18,55,n).description)))("matBadgeColor",s.lcZ(19,57,n).color)("matBadgePosition",s.lcZ(20,59,n).position||"above after")("matBadgeSize",s.lcZ(21,61,n).size||"medium")("matBadgeOverlap",s.lcZ(22,63,n).overlap)("matBadgeDisabled",s.lcZ(23,65,n).disabled)("matBadgeHidden",s.lcZ(24,67,n).hidden),s.xp6(25),s.Oqu(n.icon)}}function ln(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",16),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.TgZ(25,"mat-icon",11),s._uU(26),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(69,A,n.class||""))("disabled",s.gM2(2,20,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,25,s.lcZ(4,27,s.lcZ(5,29,n).message)))("matTooltipClass",s.lcZ(6,31,n).class)("matTooltipHideDelay",s.lcZ(7,33,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,35,n).showDelay)("matTooltipPosition",s.lcZ(9,37,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,39,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,41,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,43,n).disabled)("matBadge",s.lcZ(13,45,s.lcZ(14,47,s.lcZ(15,49,n).content)))("matBadgeDescription",s.lcZ(16,51,s.lcZ(17,53,s.lcZ(18,55,n).description)))("matBadgeColor",s.lcZ(19,57,n).color)("matBadgePosition",s.lcZ(20,59,n).position||"above after")("matBadgeSize",s.lcZ(21,61,n).size||"medium")("matBadgeOverlap",s.lcZ(22,63,n).overlap)("matBadgeDisabled",s.lcZ(23,65,n).disabled)("matBadgeHidden",s.lcZ(24,67,n).hidden),s.xp6(25),s.Oqu(n.icon)}}function on(t,l){if(1&t&&(s.TgZ(0,"mat-icon",11),s._uU(1),s.qZA()),2&t){const n=s.oxw(3).$implicit;s.xp6(1),s.Oqu(n.icon)}}function pn(t,l){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"button",17),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2).$implicit,d=s.oxw(3);return s.KtG(d._onActionClick(o,p,d.rowData))}),s.ALo(2,"cellActionDisable"),s.ALo(3,"async"),s.ALo(4,"toObservable"),s.ALo(5,"cellActionTooltip"),s.ALo(6,"cellActionTooltip"),s.ALo(7,"cellActionTooltip"),s.ALo(8,"cellActionTooltip"),s.ALo(9,"cellActionTooltip"),s.ALo(10,"cellActionTooltip"),s.ALo(11,"cellActionTooltip"),s.ALo(12,"cellActionTooltip"),s.ALo(13,"async"),s.ALo(14,"toObservable"),s.ALo(15,"cellActionBadge"),s.ALo(16,"async"),s.ALo(17,"toObservable"),s.ALo(18,"cellActionBadge"),s.ALo(19,"cellActionBadge"),s.ALo(20,"cellActionBadge"),s.ALo(21,"cellActionBadge"),s.ALo(22,"cellActionBadge"),s.ALo(23,"cellActionBadge"),s.ALo(24,"cellActionBadge"),s.YNc(25,on,2,1,"mat-icon",10),s.TgZ(26,"span"),s._uU(27),s.ALo(28,"async"),s.ALo(29,"toObservable"),s.qZA()(),s.BQk()}if(2&t){const n=s.oxw(2).$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("color",n.color||"primary")("ngClass",s.VKq(74,A,n.class||""))("disabled",s.gM2(2,21,n,a.rowData,a.rowChangeRecord,null==a.rowChangeRecord?null:a.rowChangeRecord.currentValue))("matTooltip",s.lcZ(3,26,s.lcZ(4,28,s.lcZ(5,30,n).message)))("matTooltipClass",s.lcZ(6,32,n).class)("matTooltipHideDelay",s.lcZ(7,34,n).hideDelay)("matTooltipShowDelay",s.lcZ(8,36,n).showDelay)("matTooltipPosition",s.lcZ(9,38,n).position||"below")("matTooltipPositionAtOrigin",s.lcZ(10,40,n).positionAtOrigin)("matTooltipTouchGestures",s.lcZ(11,42,n).touchGestures||"auto")("matTooltipDisabled",s.lcZ(12,44,n).disabled)("matBadge",s.lcZ(13,46,s.lcZ(14,48,s.lcZ(15,50,n).content)))("matBadgeDescription",s.lcZ(16,52,s.lcZ(17,54,s.lcZ(18,56,n).description)))("matBadgeColor",s.lcZ(19,58,n).color)("matBadgePosition",s.lcZ(20,60,n).position||"above after")("matBadgeSize",s.lcZ(21,62,n).size||"medium")("matBadgeOverlap",s.lcZ(22,64,n).overlap)("matBadgeDisabled",s.lcZ(23,66,n).disabled)("matBadgeHidden",s.lcZ(24,68,n).hidden),s.xp6(24),s.Q6J("ngIf",n.icon),s.xp6(2),s.Oqu(s.lcZ(28,70,s.lcZ(29,72,n.text)))}}function cn(t,l){if(1&t&&(s.ynx(0)(1,4),s.YNc(2,Ks,30,76,"ng-container",5),s.YNc(3,sn,30,76,"ng-container",5),s.YNc(4,tn,30,76,"ng-container",5),s.YNc(5,an,27,71,"ng-container",5),s.YNc(6,en,27,71,"ng-container",5),s.YNc(7,ln,27,71,"ng-container",5),s.YNc(8,pn,30,76,"ng-container",6),s.BQk()()),2&t){const n=s.oxw().$implicit;s.xp6(1),s.Q6J("ngSwitch",n.type),s.xp6(1),s.Q6J("ngSwitchCase","raised"),s.xp6(1),s.Q6J("ngSwitchCase","stroked"),s.xp6(1),s.Q6J("ngSwitchCase","flat"),s.xp6(1),s.Q6J("ngSwitchCase","icon"),s.xp6(1),s.Q6J("ngSwitchCase","fab"),s.xp6(1),s.Q6J("ngSwitchCase","mini-fab")}}function rn(t,l){if(1&t&&(s.ynx(0),s.YNc(1,cn,9,7,"ng-container",8),s.BQk()),2&t){const n=l.$implicit,a=s.oxw(3);s.xp6(1),s.Q6J("ngIf",!n.iif||n.iif(a.rowData))}}function dn(t,l){if(1&t&&(s.ynx(0),s.YNc(1,rn,2,1,"ng-container",7),s.ALo(2,"cellActions"),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("ngForOf",s.gM2(2,1,n.colDef.buttons,n.rowData,n.rowChangeRecord,null==n.rowChangeRecord?null:n.rowChangeRecord.currentValue))}}const hn=function(t){return[t]};function mn(t,l){if(1&t&&(s.TgZ(0,"mat-chip-listbox")(1,"mat-chip",20),s._uU(2),s.qZA()()),2&t){const n=s.oxw(3);s.xp6(1),s.Q6J("ngClass",s.VKq(2,hn,"bg-"+n.colDef.tag[n._value].color)),s.xp6(1),s.hij(" ",n.colDef.tag[n._value].text," ")}}function gn(t,l){if(1&t&&s._uU(0),2&t){const n=s.oxw(3);s.Oqu(n._value)}}function un(t,l){if(1&t&&(s.ynx(0),s.YNc(1,mn,3,4,"mat-chip-listbox",18),s.YNc(2,gn,1,1,"ng-template",null,19,s.W1O),s.BQk()),2&t){const n=s.MAs(3),a=s.oxw(2);s.xp6(1),s.Q6J("ngIf",a.colDef.tag&&a.colDef.tag[a._value])("ngIfElse",n)}}function xn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"a",21),s._uU(2),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("href",n._value,s.LSH),s.xp6(1),s.Oqu(n._value)}}function _n(t,l){if(1&t&&(s.ynx(0),s._UZ(1,"img",22),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("src",n._value,s.LSH)}}function fn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"span",23),s._uU(2),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("title",n._getTooltip(n._value)),s.xp6(1),s.Oqu(n._getText(n._value))}}function jn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"span",23),s.ALo(2,"number"),s._uU(3),s.ALo(4,"number"),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("title",n._getTooltip(s.Dn7(2,2,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.digitsInfo,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale))),s.xp6(2),s.hij(" ",n._getText(s.Dn7(4,6,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.digitsInfo,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale))," ")}}const as=function(t,l,n,a,o){return[t,l,n,a,o]};function bn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"span",23),s.ALo(2,"currency"),s._uU(3),s.ALo(4,"currency"),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("title",n._getTooltip(s.G7q(2,2,s.qbA(14,as,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.currencyCode,null==n.colDef.typeParameter?null:n.colDef.typeParameter.display,null==n.colDef.typeParameter?null:n.colDef.typeParameter.digitsInfo,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale)))),s.xp6(2),s.hij(" ",n._getText(s.G7q(4,8,s.qbA(20,as,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.currencyCode,null==n.colDef.typeParameter?null:n.colDef.typeParameter.display,null==n.colDef.typeParameter?null:n.colDef.typeParameter.digitsInfo,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale)))," ")}}function Cn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"span",23),s.ALo(2,"percent"),s._uU(3),s.ALo(4,"percent"),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("title",n._getTooltip(s.Dn7(2,2,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.digitsInfo,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale))),s.xp6(2),s.hij(" ",n._getText(s.Dn7(4,6,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.digitsInfo,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale))," ")}}function yn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"span",23),s.ALo(2,"date"),s._uU(3),s.ALo(4,"date"),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("title",n._getTooltip(s.gM2(2,2,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.format,null==n.colDef.typeParameter?null:n.colDef.typeParameter.timezone,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale))),s.xp6(2),s.hij(" ",n._getText(s.gM2(4,7,n._value,null==n.colDef.typeParameter?null:n.colDef.typeParameter.format,null==n.colDef.typeParameter?null:n.colDef.typeParameter.timezone,null==n.colDef.typeParameter?null:n.colDef.typeParameter.locale))," ")}}function Tn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"span",23),s._uU(2),s.qZA(),s.BQk()),2&t){const n=s.oxw(2);s.xp6(1),s.Q6J("title",n._getTooltip(n._value)),s.xp6(1),s.Oqu(n._getText(n._value))}}function wn(t,l){if(1&t&&(s.ynx(0,4),s.YNc(1,dn,3,6,"ng-container",5),s.YNc(2,un,4,2,"ng-container",5),s.YNc(3,xn,3,2,"ng-container",5),s.YNc(4,_n,2,1,"ng-container",5),s.YNc(5,fn,3,2,"ng-container",5),s.YNc(6,jn,5,10,"ng-container",5),s.YNc(7,bn,5,26,"ng-container",5),s.YNc(8,Cn,5,10,"ng-container",5),s.YNc(9,yn,5,12,"ng-container",5),s.YNc(10,Tn,3,2,"ng-container",6),s.BQk()),2&t){const n=s.oxw();s.Q6J("ngSwitch",n.colDef.type),s.xp6(1),s.Q6J("ngSwitchCase","button"),s.xp6(1),s.Q6J("ngSwitchCase","tag"),s.xp6(1),s.Q6J("ngSwitchCase","link"),s.xp6(1),s.Q6J("ngSwitchCase","image"),s.xp6(1),s.Q6J("ngSwitchCase","boolean"),s.xp6(1),s.Q6J("ngSwitchCase","number"),s.xp6(1),s.Q6J("ngSwitchCase","currency"),s.xp6(1),s.Q6J("ngSwitchCase","percent"),s.xp6(1),s.Q6J("ngSwitchCase","date")}}let An=(()=>{class t{get _value(){return this._utils.getCellValue(this.rowData,this.colDef)}constructor(n,a,o,p){this._dialog=n,this._utils=a,this._differs=o,this._changeDetectorRef=p,this.rowData={},this.data=[],this.summary=!1,this.placeholder="--",this.rowDataChange=new s.vpe}ngOnInit(){this.rowDataDiffer=this._differs.find(this.rowData).create()}ngDoCheck(){const n=this.rowDataDiffer?.diff(this.rowData);n&&this._applyChanges(n)}_applyChanges(n){n.forEachChangedItem(a=>{this.rowChangeRecord=a,this.rowDataChange.emit(a),this._changeDetectorRef.markForCheck()})}_getText(n){return void 0===n?"":this._utils.isEmpty(n)?this.placeholder:n}_getTooltip(n){return this._utils.isEmpty(n)?"":n}_getFormatterTooltip(n){return this._utils.isContainHTML(n)||this._utils.isEmpty(n)?"":n}_onActionClick(n,a,o){n.preventDefault(),n.stopPropagation(),"string"==typeof a.pop||(0,F.b)(a.pop)?this._dialog.open({title:a.pop,buttons:[{color:"primary",text:"OK",onClick:()=>a.click?.(o)||{}},{text:"CLOSE"}]}):"object"==typeof a.pop?this._dialog.open({title:a.pop?.title,description:a.pop?.description,buttons:[{color:a.pop?.okColor||"primary",text:a.pop?.okText||"OK",onClick:()=>a.click?.(o)||{}},{color:a.pop?.closeColor,text:a.pop?.closeText||"CLOSE"}]}):a.click?.(o)}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(Is.c),s.Y36(B.U),s.Y36(s.aQg),s.Y36(s.sBO))},t.\u0275cmp=s.Xpm({type:t,selectors:[["mtx-grid-cell"]],inputs:{rowData:"rowData",colDef:"colDef",data:"data",summary:"summary",placeholder:"placeholder"},outputs:{rowDataChange:"rowDataChange"},exportAs:["mtxGridCell"],decls:5,vars:2,consts:[[3,"title","innerHTML",4,"ngIf","ngIfElse"],["customCellFormattingTpl",""],["defaultCellFormattingTpl",""],[3,"title","innerHTML"],[3,"ngSwitch"],[4,"ngSwitchCase"],[4,"ngSwitchDefault"],[4,"ngFor","ngForOf"],[4,"ngIf"],["mat-raised-button","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],["class","mtx-grid-icon",4,"ngIf"],[1,"mtx-grid-icon"],["mat-stroked-button","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],["mat-flat-button","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],["mat-icon-button","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],["mat-fab","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],["mat-mini-fab","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],["mat-button","","type","button",3,"color","ngClass","disabled","matTooltip","matTooltipClass","matTooltipHideDelay","matTooltipShowDelay","matTooltipPosition","matTooltipPositionAtOrigin","matTooltipTouchGestures","matTooltipDisabled","matBadge","matBadgeDescription","matBadgeColor","matBadgePosition","matBadgeSize","matBadgeOverlap","matBadgeDisabled","matBadgeHidden","click"],[4,"ngIf","ngIfElse"],["tagEmptyTpl",""],["color","primary",3,"ngClass"],["target","_blank",3,"href"],[1,"mtx-grid-img",3,"src"],[3,"title"]],template:function(n,a){if(1&n&&(s.YNc(0,zs,3,8,"span",0),s.YNc(1,Xs,1,2,"ng-template",null,1,s.W1O),s.YNc(3,wn,11,10,"ng-template",null,2,s.W1O)),2&n){const o=s.MAs(2);s.Q6J("ngIf",a.summary)("ngIfElse",o)}},dependencies:[m.mk,m.sg,m.O5,m.RF,m.n9,m.ED,b.lW,b.RK,b.nh,b.cs,ns.HS,ns.z2,ts.gM,Ns.k,q.Hw,m.Ov,m.JJ,m.Zx,m.H9,m.uU,H.y,Hs,Ws,Js,Qs,Us],styles:[".mtx-grid-img{display:inline-block;width:32px;border-radius:4px;vertical-align:middle}\n"],encapsulation:2,changeDetection:0}),t})();var W=e(26236),y=e(77988),j=e(56223);const Mn=["menu"];function vn(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function Sn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",12),s.YNc(2,vn,2,1,"mat-icon",13),s._uU(3),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon),s.xp6(1),s.hij(" ",n.buttonText," ")}}function Dn(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function En(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",14),s.YNc(2,Dn,2,1,"mat-icon",13),s._uU(3),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon),s.xp6(1),s.hij(" ",n.buttonText," ")}}function Gn(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function Pn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",15),s.YNc(2,Gn,2,1,"mat-icon",13),s._uU(3),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon),s.xp6(1),s.hij(" ",n.buttonText," ")}}function On(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function kn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",16),s.YNc(2,On,2,1,"mat-icon",13),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon)}}function Ln(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function Zn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",17),s.YNc(2,Ln,2,1,"mat-icon",13),s._uU(3),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon),s.xp6(1),s.hij(" ",n.buttonText," ")}}function Rn(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function Bn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",18),s.YNc(2,Rn,2,1,"mat-icon",13),s._uU(3),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon),s.xp6(1),s.hij(" ",n.buttonText," ")}}function In(t,l){if(1&t&&(s.TgZ(0,"mat-icon"),s._uU(1),s.qZA()),2&t){const n=s.oxw(2);s.xp6(1),s.Oqu(n.buttonIcon)}}function Nn(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",19),s.YNc(2,In,2,1,"mat-icon",13),s._uU(3),s.qZA(),s.BQk()),2&t){const n=s.oxw(),a=s.MAs(9);s.xp6(1),s.Q6J("ngClass",n.buttonClass)("color",n.buttonColor)("matMenuTriggerFor",a),s.xp6(1),s.Q6J("ngIf",n.buttonIcon),s.xp6(1),s.hij(" ",n.buttonText," ")}}function Fn(t,l){}function qn(t,l){if(1&t&&s.YNc(0,Fn,0,0,"ng-template",23),2&t){const n=s.oxw(2);s.Q6J("ngTemplateOutlet",n.headerTemplate)}}function Hn(t,l){if(1&t&&s._uU(0),2&t){const n=s.oxw(2);s.Oqu(n.headerText)}}function Wn(t,l){if(1&t&&(s.TgZ(0,"div",20),s.YNc(1,qn,1,1,"ng-template",21),s.YNc(2,Hn,1,1,"ng-template",null,22,s.W1O),s.qZA()),2&t){const n=s.MAs(3),a=s.oxw();s.xp6(1),s.Q6J("ngIf",a.headerTemplate)("ngIfElse",n)}}function Jn(t,l){1&t&&s.O4$()}const es=function(t){return{$implicit:t}};function Qn(t,l){if(1&t&&(s.TgZ(0,"div",26),s.O4$(),s.TgZ(1,"svg",27),s._UZ(2,"path",28),s.qZA(),s.YNc(3,Jn,0,0,"ng-template",29),s.qZA()),2&t){const n=l.$implicit,a=s.oxw(2),o=s.MAs(17);s.Q6J("cdkDragDisabled","show"===a.selectableChecked?!n.show:n.hide),s.xp6(3),s.Q6J("ngTemplateOutlet",o)("ngTemplateOutletContext",s.VKq(3,es,n))}}function Un(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"div",24),s.NdJ("cdkDropListDropped",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p._handleDroped(o))}),s.YNc(1,Qn,4,5,"div",25),s.qZA()}if(2&t){const n=s.oxw();s.xp6(1),s.Q6J("ngForOf",n.columns)}}function zn(t,l){}function Yn(t,l){if(1&t&&(s.TgZ(0,"div",32),s.YNc(1,zn,0,0,"ng-template",29),s.qZA()),2&t){const n=l.$implicit;s.oxw(2);const a=s.MAs(17);s.xp6(1),s.Q6J("ngTemplateOutlet",a)("ngTemplateOutletContext",s.VKq(2,es,n))}}function Xn(t,l){if(1&t&&(s.TgZ(0,"div",30),s.YNc(1,Yn,2,4,"div",31),s.qZA()),2&t){const n=s.oxw();s.xp6(1),s.Q6J("ngForOf",n.columns)}}function $n(t,l){}function Kn(t,l){if(1&t&&s.YNc(0,$n,0,0,"ng-template",23),2&t){const n=s.oxw(2);s.Q6J("ngTemplateOutlet",n.footerTemplate)}}function Vn(t,l){if(1&t&&s._uU(0),2&t){const n=s.oxw(2);s.Oqu(n.footerText)}}function st(t,l){if(1&t&&(s.TgZ(0,"div",33),s.YNc(1,Kn,1,1,"ng-template",21),s.YNc(2,Vn,1,1,"ng-template",null,34,s.W1O),s.qZA()),2&t){const n=s.MAs(3),a=s.oxw();s.xp6(1),s.Q6J("ngIf",a.footerTemplate)("ngIfElse",n)}}function nt(t,l){1&t&&(s.O4$(),s.TgZ(0,"svg",43),s._UZ(1,"path",44),s.qZA())}function tt(t,l){1&t&&(s.O4$(),s.TgZ(0,"svg",45),s._UZ(1,"path",46),s.qZA())}function at(t,l){1&t&&(s.O4$(),s.TgZ(0,"svg",51),s._UZ(1,"path",52),s.qZA())}function et(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"button",47),s.NdJ("click",function(){const p=s.CHM(n).$implicit,d=s.oxw(2).$implicit,h=s.oxw();return s.KtG(h._handlePinSelect(d,p.value))}),s.TgZ(1,"span",48),s.YNc(2,at,2,0,"svg",49),s.qZA(),s.TgZ(3,"span",50),s._uU(4),s.ALo(5,"async"),s.ALo(6,"toObservable"),s.qZA()()}if(2&t){const n=l.$implicit,a=s.oxw(2).$implicit;s.xp6(2),s.Q6J("ngIf",a.pinned==n.value),s.xp6(2),s.Oqu(s.lcZ(5,2,s.lcZ(6,4,n.label)))}}function lt(t,l){if(1&t&&(s.ynx(0),s.TgZ(1,"button",37),s.YNc(2,nt,2,0,"svg",38),s.YNc(3,tt,2,0,"svg",39),s.qZA(),s.TgZ(4,"mat-menu",40,41),s.YNc(6,et,7,6,"button",42),s.qZA(),s.BQk()),2&t){const n=s.MAs(5),a=s.oxw().$implicit,o=s.oxw();s.xp6(1),s.Q6J("matMenuTriggerFor",n),s.xp6(1),s.Q6J("ngIf",a.pinned),s.xp6(1),s.Q6J("ngIf",!a.pinned),s.xp6(3),s.Q6J("ngForOf",o.pinOptions)}}function ot(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mat-checkbox",53),s.NdJ("ngModelChange",function(o){s.CHM(n);const p=s.oxw().$implicit,d=s.oxw();return s.KtG(p[d.selectableChecked]=o)})("change",function(o){s.CHM(n);const p=s.oxw(2);return s.KtG(p._handleChecked(o))}),s._uU(1),s.ALo(2,"async"),s.ALo(3,"toObservable"),s.qZA()}if(2&t){const n=s.oxw().$implicit,a=s.oxw();s.Q6J("ngModel",n[a.selectableChecked])("disabled",n.disabled),s.xp6(1),s.hij(" ",s.lcZ(2,3,s.lcZ(3,5,n.header))," ")}}function pt(t,l){if(1&t&&(s.TgZ(0,"span",54),s._uU(1),s.ALo(2,"async"),s.ALo(3,"toObservable"),s.qZA()),2&t){const n=s.oxw().$implicit;s.xp6(1),s.hij(" ",s.lcZ(2,1,s.lcZ(3,3,n.header))," ")}}function it(t,l){if(1&t&&(s.YNc(0,lt,7,4,"ng-container",13),s.YNc(1,ot,4,7,"mat-checkbox",35),s.YNc(2,pt,4,5,"span",36)),2&t){const n=s.oxw();s.Q6J("ngIf",n.pinnable),s.xp6(1),s.Q6J("ngIf",n.selectable),s.xp6(1),s.Q6J("ngIf",!n.selectable)}}let ct=(()=>{class t{constructor(){this.columns=[],this.selectable=!0,this.selectableChecked="show",this.sortable=!0,this.pinnable=!0,this._buttonText="",this.buttonType="stroked",this.buttonClass="",this.buttonIcon="",this.showHeader=!1,this.headerText="Columns Header",this.showFooter=!1,this.footerText="Columns Footer",this.columnChange=new s.vpe,this._pinOptions=[{label:"Pin Left",value:"left"},{label:"Pin Right",value:"right"},{label:"No Pin",value:null}]}get buttonText(){return this._buttonText?this._buttonText:"Columns "+("show"===this.selectableChecked?"Shown":"Hidden")}set buttonText(n){this._buttonText=n}get pinOptions(){return this._pinOptions}set pinOptions(n){n.length>0&&(this._pinOptions=n)}_handleDroped(n){(0,W.bA)(this.columns,n.previousIndex,n.currentIndex),this.columnChange.emit(this.columns)}_handleChecked(n){this.columnChange.emit(this.columns)}_handlePinSelect(n,a){n.pinned!=a&&(n.pinned=a,this.columnChange.emit(this.columns))}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["mtx-grid-column-menu"]],viewQuery:function(n,a){if(1&n&&(s.Gf(Mn,7),s.Gf(y.p6,5)),2&n){let o;s.iGM(o=s.CRH())&&(a.menuPanel=o.first),s.iGM(o=s.CRH())&&(a.menuTrigger=o.first)}},inputs:{columns:"columns",selectable:"selectable",selectableChecked:"selectableChecked",sortable:"sortable",pinnable:"pinnable",buttonText:"buttonText",buttonType:"buttonType",buttonColor:"buttonColor",buttonClass:"buttonClass",buttonIcon:"buttonIcon",showHeader:"showHeader",headerText:"headerText",headerTemplate:"headerTemplate",showFooter:"showFooter",footerText:"footerText",footerTemplate:"footerTemplate",pinOptions:"pinOptions"},outputs:{columnChange:"columnChange"},exportAs:["mtxGridColumnMenu"],decls:18,vars:11,consts:[[3,"ngSwitch"],[4,"ngSwitchCase"],[4,"ngSwitchDefault"],[1,"mtx-grid-column-menu"],["menu","matMenu"],[1,"mtx-grid-column-menu-content",3,"click","keydown"],["class","mtx-grid-column-menu-header",4,"ngIf"],[1,"mtx-grid-column-menu-body"],["class","mtx-grid-column-menu-list","cdkDropList","",3,"cdkDropListDropped",4,"ngIf"],["class","mtx-grid-column-menu-list",4,"ngIf"],["class","mtx-grid-column-menu-footer",4,"ngIf"],["checkboxList",""],["mat-raised-button","","type","button",3,"ngClass","color","matMenuTriggerFor"],[4,"ngIf"],["mat-stroked-button","","type","button",3,"ngClass","color","matMenuTriggerFor"],["mat-flat-button","","type","button",3,"ngClass","color","matMenuTriggerFor"],["mat-icon-button","","type","button",3,"ngClass","color","matMenuTriggerFor"],["mat-fab","","type","button",3,"ngClass","color","matMenuTriggerFor"],["mat-mini-fab","","type","button",3,"ngClass","color","matMenuTriggerFor"],["mat-button","","type","button",3,"ngClass","color","matMenuTriggerFor"],[1,"mtx-grid-column-menu-header"],[3,"ngIf","ngIfElse"],["defaultHeaderTpl",""],[3,"ngTemplateOutlet"],["cdkDropList","",1,"mtx-grid-column-menu-list",3,"cdkDropListDropped"],["class","mtx-grid-column-menu-item","cdkDrag","",3,"cdkDragDisabled",4,"ngFor","ngForOf"],["cdkDrag","",1,"mtx-grid-column-menu-item",3,"cdkDragDisabled"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-grid-icon","mtx-grid-column-drag-handle-icon"],["d","M7,19V17H9V19H7M11,19V17H13V19H11M15,19V17H17V19H15M7,15V13H9V15H7M11,15V13H13V15H11M15,15V13H17V15H15M7,11V9H9V11H7M11,11V9H13V11H11M15,11V9H17V11H15M7,7V5H9V7H7M11,7V5H13V7H11M15,7V5H17V7H15Z"],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[1,"mtx-grid-column-menu-list"],["class","mtx-grid-column-menu-item",4,"ngFor","ngForOf"],[1,"mtx-grid-column-menu-item"],[1,"mtx-grid-column-menu-footer"],["defaultFooterTpl",""],["class","mtx-grid-column-menu-item-label",3,"ngModel","disabled","ngModelChange","change",4,"ngIf"],["class","mtx-grid-column-menu-item-label",4,"ngIf"],["mat-icon-button","","type","button",1,"mtx-grid-column-pin-button",3,"matMenuTriggerFor"],["class","mtx-grid-icon mtx-grid-column-pin-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngIf"],["class","mtx-grid-icon mtx-grid-column-pin-off-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngIf"],[1,"mtx-grid-column-pin-list"],["pinList","matMenu"],["class","mtx-grid-column-pin-option","type","button","mat-menu-item","",3,"click",4,"ngFor","ngForOf"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-grid-icon","mtx-grid-column-pin-icon"],["d","M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-grid-icon","mtx-grid-column-pin-off-icon"],["d","M2,5.27L3.28,4L20,20.72L18.73,22L12.8,16.07V22H11.2V16H6V14L8,12V11.27L2,5.27M16,12L18,14V16H17.82L8,6.18V4H7V2H17V4H16V12Z"],["type","button","mat-menu-item","",1,"mtx-grid-column-pin-option",3,"click"],[1,"mtx-grid-column-pin-option-placeholder"],["class","mtx-grid-icon mtx-grid-column-pin-check-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngIf"],[1,"mtx-grid-column-pin-option-text"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-grid-icon","mtx-grid-column-pin-check-icon"],["d","M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"],[1,"mtx-grid-column-menu-item-label",3,"ngModel","disabled","ngModelChange","change"],[1,"mtx-grid-column-menu-item-label"]],template:function(n,a){1&n&&(s.ynx(0,0),s.YNc(1,Sn,4,5,"ng-container",1),s.YNc(2,En,4,5,"ng-container",1),s.YNc(3,Pn,4,5,"ng-container",1),s.YNc(4,kn,3,4,"ng-container",1),s.YNc(5,Zn,4,5,"ng-container",1),s.YNc(6,Bn,4,5,"ng-container",1),s.YNc(7,Nn,4,5,"ng-container",2),s.BQk(),s.TgZ(8,"mat-menu",3,4)(10,"div",5),s.NdJ("click",function(p){return p.stopPropagation()})("keydown",function(p){return p.stopPropagation()}),s.YNc(11,Wn,4,2,"div",6),s.TgZ(12,"div",7),s.YNc(13,Un,2,1,"div",8),s.YNc(14,Xn,2,1,"div",9),s.qZA(),s.YNc(15,st,4,2,"div",10),s.qZA()(),s.YNc(16,it,3,3,"ng-template",null,11,s.W1O)),2&n&&(s.Q6J("ngSwitch",a.buttonType),s.xp6(1),s.Q6J("ngSwitchCase","raised"),s.xp6(1),s.Q6J("ngSwitchCase","stroked"),s.xp6(1),s.Q6J("ngSwitchCase","flat"),s.xp6(1),s.Q6J("ngSwitchCase","icon"),s.xp6(1),s.Q6J("ngSwitchCase","fab"),s.xp6(1),s.Q6J("ngSwitchCase","mini-fab"),s.xp6(5),s.Q6J("ngIf",a.showHeader),s.xp6(2),s.Q6J("ngIf",a.sortable),s.xp6(1),s.Q6J("ngIf",!a.sortable),s.xp6(1),s.Q6J("ngIf",a.showFooter))},dependencies:[m.mk,m.sg,m.O5,m.tP,m.RF,m.n9,m.ED,j.JJ,j.On,M.oG,b.lW,b.RK,b.nh,b.cs,q.Hw,y.VK,y.OP,y.p6,W.Wj,W.Zt,m.Ov,H.y],styles:[".mtx-grid-column-menu .mat-menu-content{padding:0}.mtx-grid-column-menu-body{padding:8px 16px}.mtx-grid-column-menu-header,.mtx-grid-column-menu-footer{position:sticky;z-index:1;padding:8px 16px}.mtx-grid-column-menu-header{top:0}.mtx-grid-column-menu-footer{bottom:0}.mtx-grid-column-menu-list{display:block;max-width:100%}.mtx-grid-column-menu-list.cdk-drop-list-dragging .mtx-grid-column-menu-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.mtx-grid-column-menu-item{display:flex;flex-direction:row;align-items:center}.mtx-grid-column-menu-item.cdk-drag-disabled .cdk-drag-handle{opacity:.35;cursor:no-drop}.mtx-grid-column-menu-item .cdk-drag-handle{cursor:move}.mtx-grid-column-menu-item.cdk-drag-preview{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.mtx-grid-column-menu-item.cdk-drag-placeholder{opacity:0}.mtx-grid-column-menu-item.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.mtx-grid-column-pin-button.mat-mdc-icon-button{width:40px;height:40px;padding:8px}.mtx-grid-column-pin-button.mat-mdc-icon-button .mat-mdc-button-touch-target{width:100%;height:100%}.mtx-grid-column-pin-option.mat-menu-item{display:flex;align-items:center;height:32px}.mtx-grid-column-pin-option-placeholder{display:inline-block;width:20px;height:20px;line-height:20px;vertical-align:middle}.mtx-grid-column-pin-option-text{padding:0 8px;vertical-align:middle}.mtx-grid-column-drag-handle-icon:hover{cursor:move}\n"],encapsulation:2,changeDetection:0}),t})(),rt=(()=>{class t{get opened(){return this._opened}set opened(n){this._opened=n,this.openedChange.emit(n)}get expanded(){return this._opened}set expandableRow(n){n!==this._row&&(this._row=n)}set template(n){n!==this._tplRef&&(this._tplRef=n)}constructor(){this._opened=!1,this.openedChange=new s.vpe,this.toggleChange=new s.vpe}onClick(n){n.preventDefault(),n.stopPropagation(),this.toggle()}toggle(){this.opened=!this.opened,this.toggleChange.emit(this)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275dir=s.lG2({type:t,selectors:[["","mtx-grid-expansion-toggle",""]],hostVars:2,hostBindings:function(n,a){1&n&&s.NdJ("click",function(p){return a.onClick(p)}),2&n&&s.ekj("expanded",a.expanded)},inputs:{opened:"opened",expandableRow:"expandableRow",template:["expansionRowTpl","template"]},outputs:{openedChange:"openedChange",toggleChange:"toggleChange"}}),t})();var dt=e(59863);const ht=["columnMenu"],mt=["tableContainer"];function gt(t,l){1&t&&(s.TgZ(0,"div",16),s._UZ(1,"mat-progress-bar",17),s.qZA())}function ut(t,l){}function xt(t,l){if(1&t&&s.YNc(0,ut,0,0,"ng-template",23),2&t){const n=s.oxw(2);s.Q6J("ngTemplateOutlet",n.toolbarTemplate)}}function _t(t,l){if(1&t&&(s.TgZ(0,"div",25),s._uU(1),s.qZA()),2&t){const n=s.oxw(3);s.xp6(1),s.Oqu(n.toolbarTitle)}}function ft(t,l){if(1&t&&s.YNc(0,_t,2,1,"div",24),2&t){const n=s.oxw(2);s.Q6J("ngIf",n.toolbarTitle)}}function jt(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mtx-grid-column-menu",26,27),s.NdJ("columnChange",function(o){s.CHM(n);const p=s.oxw(2);return s.KtG(p._onColumnChange(o))}),s.qZA()}if(2&t){const n=s.oxw(2);s.Q6J("columns",n.columns)("buttonText",n.columnMenuButtonText)("buttonType",n.columnMenuButtonType)("buttonColor",n.columnMenuButtonColor)("buttonClass",n.columnMenuButtonClass)("buttonIcon",n.columnMenuButtonIcon)("selectable",n.columnHideable)("selectableChecked",n.columnHideableChecked)("sortable",n.columnSortable)("pinnable",n.columnPinnable)("showHeader",n.showColumnMenuHeader)("headerText",n.columnMenuHeaderText)("headerTemplate",n.columnMenuHeaderTemplate)("showFooter",n.showColumnMenuFooter)("footerText",n.columnMenuFooterText)("footerTemplate",n.columnMenuFooterTemplate)("pinOptions",n.columnPinOptions)}}function bt(t,l){if(1&t&&(s.TgZ(0,"div",18)(1,"div",19),s.YNc(2,xt,1,1,"ng-template",13),s.YNc(3,ft,1,1,"ng-template",null,20,s.W1O),s.qZA(),s.TgZ(5,"div",21),s.YNc(6,jt,2,17,"mtx-grid-column-menu",22),s.qZA()()),2&t){const n=s.MAs(4),a=s.oxw();s.xp6(2),s.Q6J("ngIf",a.toolbarTemplate)("ngIfElse",n),s.xp6(4),s.Q6J("ngIf",a.showColumnMenuButton)}}function Ct(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mat-checkbox",41),s.NdJ("change",function(o){s.CHM(n);const p=s.oxw(4);return s.KtG(o?p._toggleMasterCheckbox():null)}),s.qZA()}if(2&t){const n=s.oxw(4);s.Q6J("checked",n.rowSelection.hasValue()&&n._isAllSelected())("indeterminate",n.rowSelection.hasValue()&&!n._isAllSelected())}}function yt(t,l){if(1&t&&(s.TgZ(0,"th",39),s.YNc(1,Ct,1,2,"mat-checkbox",40),s.qZA()),2&t){const n=s.oxw(3);s.xp6(1),s.Q6J("ngIf",n.multiSelectable)}}function Tt(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mat-checkbox",44),s.NdJ("click",function(o){return o.stopPropagation()})("change",function(o){s.CHM(n);const p=s.oxw().$implicit,d=s.oxw(3);return s.KtG(o?d._toggleNormalCheckbox(p):null)}),s.qZA()}if(2&t){const n=s.oxw(),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.oxw(3);s.Q6J("disabled",d.rowSelectionFormatter.disabled&&d.rowSelectionFormatter.disabled(a,d._getIndex(o,p)))("checked",d.rowSelection.isSelected(a))}}function wt(t,l){if(1&t&&(s.TgZ(0,"td",42),s.YNc(1,Tt,1,2,"mat-checkbox",43),s.qZA()),2&t){const n=l.$implicit,a=l.index,o=l.dataIndex,p=s.oxw(3);s.xp6(1),s.Q6J("ngIf",!(p.rowSelectionFormatter.hideCheckbox&&p.rowSelectionFormatter.hideCheckbox(n,p._getIndex(a,o))))}}function At(t,l){1&t&&s._UZ(0,"td",45)}function Mt(t,l){1&t&&(s.ynx(0,35),s.YNc(1,yt,2,1,"th",36),s.YNc(2,wt,2,1,"td",37),s.YNc(3,At,1,0,"td",38),s.BQk())}function vt(t,l){}const w=function(t,l){return{$implicit:t,colDef:l}};function St(t,l){if(1&t&&s.YNc(0,vt,0,0,"ng-template",54),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.headerTemplate)("ngTemplateOutletContext",s.WLB(2,w,n,n))}}function Dt(t,l){}function Et(t,l){if(1&t&&s.YNc(0,Dt,0,0,"ng-template",54),2&t){const n=s.oxw(3).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.headerTemplate[n.field])("ngTemplateOutletContext",s.WLB(2,w,n,n))}}function Gt(t,l){if(1&t&&(s.YNc(0,Et,1,5,"ng-template",13),s.ALo(1,"isTemplateRef")),2&t){s.oxw();const n=s.MAs(8),a=s.oxw().$implicit,o=s.oxw(2);let p;s.Q6J("ngIf",s.lcZ(1,2,null==(p=o.headerTemplate)?null:p[a.field]))("ngIfElse",n)}}function Pt(t,l){1&t&&s._UZ(0,"span",58)}function Ot(t,l){1&t&&(s.O4$(),s.TgZ(0,"svg",59),s._UZ(1,"path",60),s.qZA())}function kt(t,l){}function Lt(t,l){if(1&t&&(s.TgZ(0,"div",55),s.YNc(1,Pt,1,0,"span",56),s.TgZ(2,"span"),s._uU(3),s.ALo(4,"async"),s.ALo(5,"toObservable"),s.qZA(),s.YNc(6,Ot,2,0,"svg",57),s.qZA(),s.YNc(7,kt,0,0,"ng-template",54)),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2),o=s.MAs(17);let p;s.Q6J("mat-sort-header",(null==n.sortProp?null:n.sortProp.id)||n.field)("disabled",!n.sortable)("disableClear",null!==(p=null==n.sortProp?null:n.sortProp.disableClear)&&void 0!==p?p:a.sortDisableClear)("arrowPosition",null==n.sortProp?null:n.sortProp.arrowPosition)("start",null==n.sortProp?null:n.sortProp.start),s.xp6(1),s.Q6J("ngIf",n.showExpand),s.xp6(2),s.Oqu(s.lcZ(4,10,s.lcZ(5,12,n.header))),s.xp6(3),s.Q6J("ngIf",n.sortable),s.xp6(1),s.Q6J("ngTemplateOutlet",o)("ngTemplateOutletContext",s.WLB(14,w,a.headerExtraTemplate,n))}}const D=function(t,l){return{"mat-table-sticky-left":t,"mat-table-sticky-right":l}},J=function(t,l,n,a){return{width:t,"min-width":l,left:n,right:a}};function Zt(t,l){if(1&t&&(s.TgZ(0,"th",50),s.ALo(1,"colClass"),s.TgZ(2,"div",51),s.YNc(3,St,1,5,"ng-template",13),s.ALo(4,"isTemplateRef"),s.YNc(5,Gt,2,4,"ng-template",null,52,s.W1O),s.YNc(7,Lt,8,17,"ng-template",null,53,s.W1O),s.qZA()()),2&t){const n=s.MAs(6),a=s.oxw().$implicit,o=s.oxw(2);s.Tol(s.lcZ(1,6,a)),s.Q6J("ngClass",s.WLB(10,D,"left"===a.pinned,"right"===a.pinned))("ngStyle",s.l5B(13,J,a.width,a.width,a.left,a.right)),s.xp6(3),s.Q6J("ngIf",s.lcZ(4,8,o.headerTemplate))("ngIfElse",n)}}function Rt(t,l){}const E=function(t,l,n,a){return{$implicit:t,rowData:l,index:n,colDef:a}};function Bt(t,l){if(1&t&&s.YNc(0,Rt,0,0,"ng-template",54),2&t){const n=s.oxw(),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.oxw().$implicit,h=s.oxw(2);s.Q6J("ngTemplateOutlet",h.cellTemplate)("ngTemplateOutletContext",s.l5B(2,E,a,a,h._getIndex(o,p),d))}}function It(t,l){}function Nt(t,l){if(1&t&&s.YNc(0,It,0,0,"ng-template",54),2&t){const n=s.oxw(2),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.oxw().$implicit,h=s.oxw(2);s.Q6J("ngTemplateOutlet",h.cellTemplate[d.field])("ngTemplateOutletContext",s.l5B(2,E,a,a,h._getIndex(o,p),d))}}function Ft(t,l){if(1&t&&(s.YNc(0,Nt,1,7,"ng-template",13),s.ALo(1,"isTemplateRef")),2&t){s.oxw();const n=s.MAs(7),a=s.oxw().$implicit,o=s.oxw(2);let p;s.Q6J("ngIf",s.lcZ(1,2,null==(p=o.cellTemplate)?null:p[a.field]))("ngIfElse",n)}}function qt(t,l){}function Ht(t,l){if(1&t&&s.YNc(0,qt,0,0,"ng-template",65),2&t){const n=s.oxw(),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.MAs(9),h=s.oxw().$implicit,g=s.oxw(2);s.Q6J("ngIf",h.cellTemplate)("ngIfElse",d)("ngTemplateOutlet",h.cellTemplate)("ngTemplateOutletContext",s.l5B(4,E,a,a,g._getIndex(o,p),h))}}function Wt(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"button",68),s.NdJ("openedChange",function(o){s.CHM(n);const p=s.oxw(2).dataIndex,d=s.oxw(3);return s.KtG(d.expansionRowStates[p].expanded=o)})("toggleChange",function(o){s.CHM(n);const p=s.oxw(2),d=p.$implicit,h=p.dataIndex,g=s.oxw().$implicit,f=s.oxw(2);return s.KtG(f._onExpansionChange(o,d,g,h))}),s.O4$(),s.TgZ(1,"svg",69),s._UZ(2,"path",70),s.qZA()()}if(2&t){const n=s.oxw(2).dataIndex,a=s.oxw(3);s.Q6J("opened",a.expansionRowStates[n].expanded)}}function Jt(t,l){if(1&t){const n=s.EpF();s.YNc(0,Wt,3,1,"button",66),s.TgZ(1,"mtx-grid-cell",67),s.NdJ("rowDataChange",function(o){s.CHM(n);const p=s.oxw(4);return s.KtG(p._onRowDataChange(o))}),s.qZA()}if(2&t){const n=s.oxw().$implicit,a=s.oxw().$implicit,o=s.oxw(2);s.Q6J("ngIf",a.showExpand),s.xp6(1),s.Q6J("rowData",n)("colDef",a)("placeholder",o.emptyValuePlaceholder)}}function Qt(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"td",61),s.NdJ("cellSelectedChange",function(o){const d=s.CHM(n).$implicit,h=s.oxw().$implicit,g=s.oxw(2);return s.KtG(g._selectCell(o,d,h))}),s.ALo(1,"colClass"),s.YNc(2,Bt,1,7,"ng-template",13),s.ALo(3,"isTemplateRef"),s.YNc(4,Ft,2,4,"ng-template",null,62,s.W1O),s.YNc(6,Ht,1,9,"ng-template",null,63,s.W1O),s.YNc(8,Jt,2,4,"ng-template",null,64,s.W1O),s.qZA()}if(2&t){const n=l.$implicit,a=s.MAs(5),o=s.oxw().$implicit,p=s.oxw(2);s.Tol(s.gM2(1,6,o,n,p.rowChangeRecord,null==p.rowChangeRecord?null:p.rowChangeRecord.currentValue)),s.Q6J("ngClass",s.WLB(13,D,"left"===o.pinned,"right"===o.pinned))("ngStyle",s.l5B(16,J,o.width,o.width,o.left,o.right)),s.xp6(2),s.Q6J("ngIf",s.lcZ(3,11,p.cellTemplate))("ngIfElse",a)}}function Ut(t,l){1&t&&s._UZ(0,"span",58)}function zt(t,l){}const ls=function(t,l,n){return{$implicit:t,colDef:l,data:n}};function Yt(t,l){if(1&t&&s.YNc(0,zt,0,0,"ng-template",54),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.summaryTemplate)("ngTemplateOutletContext",s.kEZ(2,ls,n,n,a.data))}}function Xt(t,l){}const os=function(t,l,n){return{$implicit:t,colData:l,colDef:n}};function $t(t,l){if(1&t&&s.YNc(0,Xt,0,0,"ng-template",54),2&t){const n=s.oxw(3).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.summaryTemplate[n.field])("ngTemplateOutletContext",s.kEZ(2,os,a._getColData(a.data,n),a._getColData(a.data,n),n))}}function Kt(t,l){if(1&t&&(s.YNc(0,$t,1,6,"ng-template",13),s.ALo(1,"isTemplateRef")),2&t){s.oxw();const n=s.MAs(7),a=s.oxw().$implicit,o=s.oxw(2);let p;s.Q6J("ngIf",s.lcZ(1,2,null==(p=o.summaryTemplate)?null:p[a.field]))("ngIfElse",n)}}function Vt(t,l){if(1&t&&s._UZ(0,"mtx-grid-cell",74),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2);s.Q6J("summary",!0)("data",a.data)("colDef",n)("placeholder",a.emptyValuePlaceholder)}}function sa(t,l){if(1&t&&(s.TgZ(0,"td",71),s.YNc(1,Ut,1,0,"span",56),s.YNc(2,Yt,1,6,"ng-template",13),s.ALo(3,"isTemplateRef"),s.YNc(4,Kt,2,4,"ng-template",null,72,s.W1O),s.YNc(6,Vt,1,4,"ng-template",null,73,s.W1O),s.qZA()),2&t){const n=s.MAs(5),a=s.oxw().$implicit,o=s.oxw(2);s.Q6J("ngClass",s.WLB(7,D,"left"===a.pinned,"right"===a.pinned))("ngStyle",s.l5B(10,J,a.width,a.width,a.left,a.right)),s.xp6(1),s.Q6J("ngIf",a.showExpand),s.xp6(1),s.Q6J("ngIf",s.lcZ(3,5,o.summaryTemplate))("ngIfElse",n)}}function na(t,l){if(1&t&&(s.ynx(0)(1,46),s.YNc(2,Zt,9,18,"th",47),s.YNc(3,Qt,10,21,"td",48),s.YNc(4,sa,8,15,"td",49),s.BQk()()),2&t){const n=l.$implicit;s.xp6(1),s.Q6J("matColumnDef",n.field)("sticky","left"===n.pinned)("stickyEnd","right"===n.pinned)}}function ta(t,l){}function aa(t,l){1&t&&s._UZ(0,"tr",76)}function ea(t,l){if(1&t&&s.YNc(0,aa,1,0,"tr",75),2&t){const n=s.oxw(2);s.Q6J("matHeaderRowDef",n.displayedColumns)("matHeaderRowDefSticky",!0)}}function la(t,l){}const ps=function(t){return{selected:t}};function oa(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"tr",78),s.NdJ("click",function(o){const p=s.CHM(n),d=p.$implicit,h=p.index,g=p.dataIndex,f=s.oxw(3);return s.KtG(f._selectRow(o,d,f._getIndex(h,g)))})("contextmenu",function(o){const p=s.CHM(n),d=p.$implicit,h=p.index,g=p.dataIndex,f=s.oxw(3);return s.KtG(f._contextmenu(o,d,f._getIndex(h,g)))}),s.ALo(1,"rowClass"),s.qZA()}if(2&t){const n=l.$implicit,a=l.index,o=l.dataIndex,p=s.oxw(3);s.Tol(s.gM2(1,3,n,a,o,p.rowClassFormatter)),s.Q6J("ngClass",s.VKq(8,ps,p.rowSelection.isSelected(n)))}}function pa(t,l){if(1&t&&s.YNc(0,oa,2,10,"tr",77),2&t){const n=s.oxw(2);s.Q6J("matRowDefColumns",n.displayedColumns)}}function ia(t,l){1&t&&s._UZ(0,"tr",80)}function ca(t,l){if(1&t&&s.YNc(0,ia,1,0,"tr",79),2&t){const n=s.oxw(2);s.Q6J("matFooterRowDef",n.displayedColumns)("matFooterRowDefSticky",!0)}}function ra(t,l){}function da(t,l){}const is=function(t,l,n,a){return{$implicit:t,rowData:l,index:n,expanded:a}};function ha(t,l){if(1&t&&(s.TgZ(0,"td",84)(1,"div",85),s.YNc(2,da,0,0,"ng-template",54),s.qZA()()),2&t){const n=l.$implicit,a=l.dataIndex,o=s.oxw(3);s.uIk("colspan",o.displayedColumns.length),s.xp6(1),s.Q6J("@expansion",o.expansionRowStates[a].expanded?"expanded":"collapsed"),s.xp6(1),s.Q6J("ngTemplateOutlet",o.expansionTemplate)("ngTemplateOutletContext",s.l5B(4,is,n,n,a,o.expansionRowStates[a].expanded))}}const cs=function(t){return["mtx-grid-expansion",t]};function ma(t,l){if(1&t&&s._UZ(0,"tr",86),2&t){const n=l.dataIndex,a=s.oxw(3);s.Q6J("ngClass",s.VKq(1,cs,a.expansionRowStates[n].expanded?"expanded":"collapsed"))}}const rs=function(){return["MtxGridExpansionColumnDef"]};function ga(t,l){1&t&&(s.ynx(0)(1,81),s.YNc(2,ha,3,9,"td",82),s.BQk(),s.YNc(3,ma,1,3,"tr",83),s.BQk()),2&t&&(s.xp6(3),s.Q6J("matRowDefColumns",s.DdM(1,rs)))}const ds=function(t,l,n){return{"mat-table-hover":t,"mat-table-striped":l,"mat-table-expandable":n}};function ua(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"table",28),s.NdJ("matSortChange",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p._onSortChange(o))}),s.YNc(1,Mt,4,0,"ng-container",29),s.YNc(2,na,5,3,"ng-container",30),s.YNc(3,ta,0,0,"ng-template",13),s.YNc(4,ea,1,2,"ng-template",null,31,s.W1O),s.YNc(6,la,0,0,"ng-template",13),s.YNc(7,pa,1,1,"ng-template",null,32,s.W1O),s.YNc(9,ca,1,2,"ng-template",33),s.YNc(10,ra,0,0,"ng-template",33),s.YNc(11,ga,4,2,"ng-container",34),s.qZA()}if(2&t){const n=s.MAs(5),a=s.MAs(8),o=s.oxw();s.Q6J("ngClass",s.kEZ(18,ds,o.rowHover,o.rowStriped,o.expandable))("dataSource",o.dataSource)("multiTemplateDataRows",o.expandable)("matSortActive",o.sortActive)("matSortDirection",o.sortDirection)("matSortDisableClear",o.sortDisableClear)("matSortDisabled",o.sortDisabled)("matSortStart",o.sortStart)("trackBy",o.trackBy),s.xp6(1),s.Q6J("ngIf",o.rowSelectable&&!o.hideRowSelectionCheckbox),s.xp6(1),s.Q6J("ngForOf",o.columns),s.xp6(1),s.Q6J("ngIf",o.useContentHeaderRowTemplate)("ngIfElse",n),s.xp6(3),s.Q6J("ngIf",o.useContentRowTemplate)("ngIfElse",a),s.xp6(3),s.Q6J("ngIf",o._whetherShowSummary),s.xp6(1),s.Q6J("ngIf",o.useContentFooterRowTemplate),s.xp6(1),s.Q6J("ngIf",o.expandable)}}function xa(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mat-checkbox",41),s.NdJ("change",function(o){s.CHM(n);const p=s.oxw(4);return s.KtG(o?p._toggleMasterCheckbox():null)}),s.qZA()}if(2&t){const n=s.oxw(4);s.Q6J("checked",n.rowSelection.hasValue()&&n._isAllSelected())("indeterminate",n.rowSelection.hasValue()&&!n._isAllSelected())}}function _a(t,l){if(1&t&&(s.TgZ(0,"th",39),s.YNc(1,xa,1,2,"mat-checkbox",40),s.qZA()),2&t){const n=s.oxw(3);s.xp6(1),s.Q6J("ngIf",n.multiSelectable)}}function fa(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mat-checkbox",44),s.NdJ("click",function(o){return o.stopPropagation()})("change",function(o){s.CHM(n);const p=s.oxw().$implicit,d=s.oxw(3);return s.KtG(o?d._toggleNormalCheckbox(p):null)}),s.qZA()}if(2&t){const n=s.oxw(),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.oxw(3);s.Q6J("disabled",d.rowSelectionFormatter.disabled&&d.rowSelectionFormatter.disabled(a,d._getIndex(o,p)))("checked",d.rowSelection.isSelected(a))}}function ja(t,l){if(1&t&&(s.TgZ(0,"td",42),s.YNc(1,fa,1,2,"mat-checkbox",43),s.qZA()),2&t){const n=l.$implicit,a=l.index,o=l.dataIndex,p=s.oxw(3);s.xp6(1),s.Q6J("ngIf",!(p.rowSelectionFormatter.hideCheckbox&&p.rowSelectionFormatter.hideCheckbox(n,p._getIndex(a,o))))}}function ba(t,l){1&t&&s._UZ(0,"td",45)}function Ca(t,l){1&t&&(s.ynx(0,35),s.YNc(1,_a,2,1,"th",36),s.YNc(2,ja,2,1,"td",37),s.YNc(3,ba,1,0,"td",38),s.BQk())}function ya(t,l){}function Ta(t,l){if(1&t&&s.YNc(0,ya,0,0,"ng-template",54),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.headerTemplate)("ngTemplateOutletContext",s.WLB(2,w,n,n))}}function wa(t,l){}function Aa(t,l){if(1&t&&s.YNc(0,wa,0,0,"ng-template",54),2&t){const n=s.oxw(3).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.headerTemplate[n.field])("ngTemplateOutletContext",s.WLB(2,w,n,n))}}function Ma(t,l){if(1&t&&(s.YNc(0,Aa,1,5,"ng-template",13),s.ALo(1,"isTemplateRef")),2&t){s.oxw();const n=s.MAs(8),a=s.oxw().$implicit,o=s.oxw(2);let p;s.Q6J("ngIf",s.lcZ(1,2,null==(p=o.headerTemplate)?null:p[a.field]))("ngIfElse",n)}}function va(t,l){1&t&&s._UZ(0,"span",58)}function Sa(t,l){1&t&&(s.O4$(),s.TgZ(0,"svg",59),s._UZ(1,"path",60),s.qZA())}function Da(t,l){}function Ea(t,l){if(1&t&&(s.TgZ(0,"div",55),s.YNc(1,va,1,0,"span",56),s.TgZ(2,"span"),s._uU(3),s.ALo(4,"async"),s.ALo(5,"toObservable"),s.qZA(),s.YNc(6,Sa,2,0,"svg",57),s.qZA(),s.YNc(7,Da,0,0,"ng-template",54)),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2),o=s.MAs(17);let p;s.Q6J("mat-sort-header",(null==n.sortProp?null:n.sortProp.id)||n.field)("disabled",!n.sortable)("disableClear",null!==(p=null==n.sortProp?null:n.sortProp.disableClear)&&void 0!==p?p:a.sortDisableClear)("arrowPosition",null==n.sortProp?null:n.sortProp.arrowPosition)("start",null==n.sortProp?null:n.sortProp.start),s.xp6(1),s.Q6J("ngIf",n.showExpand),s.xp6(2),s.Oqu(s.lcZ(4,10,s.lcZ(5,12,n.header))),s.xp6(3),s.Q6J("ngIf",n.sortable),s.xp6(1),s.Q6J("ngTemplateOutlet",o)("ngTemplateOutletContext",s.WLB(14,w,a.headerExtraTemplate,n))}}const Q=function(t,l,n){return{width:t,left:l,right:n}};function Ga(t,l){if(1&t&&(s.TgZ(0,"th",89),s.ALo(1,"colClass"),s.TgZ(2,"div",51),s.YNc(3,Ta,1,5,"ng-template",13),s.ALo(4,"isTemplateRef"),s.YNc(5,Ma,2,4,"ng-template",null,52,s.W1O),s.YNc(7,Ea,8,17,"ng-template",null,53,s.W1O),s.qZA()()),2&t){const n=s.MAs(6),a=s.oxw().$implicit,o=s.oxw(2);s.Tol(s.lcZ(1,9,a)),s.Q6J("ngClass",s.WLB(13,D,"left"===a.pinned,"right"===a.pinned))("ngStyle",s.kEZ(16,Q,a.width,a.left,a.right))("resizable",a.resizable)("matResizableMinWidthPx",a.minWidth)("matResizableMaxWidthPx",a.maxWidth),s.xp6(3),s.Q6J("ngIf",s.lcZ(4,11,o.headerTemplate))("ngIfElse",n)}}function Pa(t,l){}function Oa(t,l){if(1&t&&s.YNc(0,Pa,0,0,"ng-template",54),2&t){const n=s.oxw(),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.oxw().$implicit,h=s.oxw(2);s.Q6J("ngTemplateOutlet",h.cellTemplate)("ngTemplateOutletContext",s.l5B(2,E,a,a,h._getIndex(o,p),d))}}function ka(t,l){}function La(t,l){if(1&t&&s.YNc(0,ka,0,0,"ng-template",54),2&t){const n=s.oxw(2),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.oxw().$implicit,h=s.oxw(2);s.Q6J("ngTemplateOutlet",h.cellTemplate[d.field])("ngTemplateOutletContext",s.l5B(2,E,a,a,h._getIndex(o,p),d))}}function Za(t,l){if(1&t&&(s.YNc(0,La,1,7,"ng-template",13),s.ALo(1,"isTemplateRef")),2&t){s.oxw();const n=s.MAs(7),a=s.oxw().$implicit,o=s.oxw(2);let p;s.Q6J("ngIf",s.lcZ(1,2,null==(p=o.cellTemplate)?null:p[a.field]))("ngIfElse",n)}}function Ra(t,l){}function Ba(t,l){if(1&t&&s.YNc(0,Ra,0,0,"ng-template",65),2&t){const n=s.oxw(),a=n.$implicit,o=n.index,p=n.dataIndex,d=s.MAs(9),h=s.oxw().$implicit,g=s.oxw(2);s.Q6J("ngIf",h.cellTemplate)("ngIfElse",d)("ngTemplateOutlet",h.cellTemplate)("ngTemplateOutletContext",s.l5B(4,E,a,a,g._getIndex(o,p),h))}}function Ia(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"button",68),s.NdJ("openedChange",function(o){s.CHM(n);const p=s.oxw(2).dataIndex,d=s.oxw(3);return s.KtG(d.expansionRowStates[p].expanded=o)})("toggleChange",function(o){s.CHM(n);const p=s.oxw(2),d=p.$implicit,h=p.dataIndex,g=s.oxw().$implicit,f=s.oxw(2);return s.KtG(f._onExpansionChange(o,d,g,h))}),s.O4$(),s.TgZ(1,"svg",69),s._UZ(2,"path",70),s.qZA()()}if(2&t){const n=s.oxw(2).dataIndex,a=s.oxw(3);s.Q6J("opened",a.expansionRowStates[n].expanded)}}function Na(t,l){if(1&t){const n=s.EpF();s.YNc(0,Ia,3,1,"button",66),s.TgZ(1,"mtx-grid-cell",67),s.NdJ("rowDataChange",function(o){s.CHM(n);const p=s.oxw(4);return s.KtG(p._onRowDataChange(o))}),s.qZA()}if(2&t){const n=s.oxw().$implicit,a=s.oxw().$implicit,o=s.oxw(2);s.Q6J("ngIf",a.showExpand),s.xp6(1),s.Q6J("rowData",n)("colDef",a)("placeholder",o.emptyValuePlaceholder)}}function Fa(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"td",61),s.NdJ("cellSelectedChange",function(o){const d=s.CHM(n).$implicit,h=s.oxw().$implicit,g=s.oxw(2);return s.KtG(g._selectCell(o,d,h))}),s.ALo(1,"colClass"),s.YNc(2,Oa,1,7,"ng-template",13),s.ALo(3,"isTemplateRef"),s.YNc(4,Za,2,4,"ng-template",null,62,s.W1O),s.YNc(6,Ba,1,9,"ng-template",null,63,s.W1O),s.YNc(8,Na,2,4,"ng-template",null,64,s.W1O),s.qZA()}if(2&t){const n=l.$implicit,a=s.MAs(5),o=s.oxw().$implicit,p=s.oxw(2);s.Tol(s.gM2(1,6,o,n,p.rowChangeRecord,null==p.rowChangeRecord?null:p.rowChangeRecord.currentValue)),s.Q6J("ngClass",s.WLB(13,D,"left"===o.pinned,"right"===o.pinned))("ngStyle",s.kEZ(16,Q,o.width,o.left,o.right)),s.xp6(2),s.Q6J("ngIf",s.lcZ(3,11,p.cellTemplate))("ngIfElse",a)}}function qa(t,l){1&t&&s._UZ(0,"span",58)}function Ha(t,l){}function Wa(t,l){if(1&t&&s.YNc(0,Ha,0,0,"ng-template",54),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.summaryTemplate)("ngTemplateOutletContext",s.kEZ(2,ls,n,n,a.data))}}function Ja(t,l){}function Qa(t,l){if(1&t&&s.YNc(0,Ja,0,0,"ng-template",54),2&t){const n=s.oxw(3).$implicit,a=s.oxw(2);s.Q6J("ngTemplateOutlet",a.summaryTemplate[n.field])("ngTemplateOutletContext",s.kEZ(2,os,a._getColData(a.data,n),a._getColData(a.data,n),n))}}function Ua(t,l){if(1&t&&(s.YNc(0,Qa,1,6,"ng-template",13),s.ALo(1,"isTemplateRef")),2&t){s.oxw();const n=s.MAs(7),a=s.oxw().$implicit,o=s.oxw(2);let p;s.Q6J("ngIf",s.lcZ(1,2,null==(p=o.summaryTemplate)?null:p[a.field]))("ngIfElse",n)}}function za(t,l){if(1&t&&s._UZ(0,"mtx-grid-cell",74),2&t){const n=s.oxw(2).$implicit,a=s.oxw(2);s.Q6J("summary",!0)("data",a.data)("colDef",n)("placeholder",a.emptyValuePlaceholder)}}function Ya(t,l){if(1&t&&(s.TgZ(0,"td",71),s.YNc(1,qa,1,0,"span",56),s.YNc(2,Wa,1,6,"ng-template",13),s.ALo(3,"isTemplateRef"),s.YNc(4,Ua,2,4,"ng-template",null,72,s.W1O),s.YNc(6,za,1,4,"ng-template",null,73,s.W1O),s.qZA()),2&t){const n=s.MAs(5),a=s.oxw().$implicit,o=s.oxw(2);s.Q6J("ngClass",s.WLB(7,D,"left"===a.pinned,"right"===a.pinned))("ngStyle",s.kEZ(10,Q,a.width,a.left,a.right)),s.xp6(1),s.Q6J("ngIf",a.showExpand),s.xp6(1),s.Q6J("ngIf",s.lcZ(3,5,o.summaryTemplate))("ngIfElse",n)}}function Xa(t,l){if(1&t&&(s.ynx(0)(1,46),s.YNc(2,Ga,9,20,"th",88),s.YNc(3,Fa,10,20,"td",48),s.YNc(4,Ya,8,14,"td",49),s.BQk()()),2&t){const n=l.$implicit;s.xp6(1),s.Q6J("matColumnDef",n.field)("sticky","left"===n.pinned)("stickyEnd","right"===n.pinned)}}function $a(t,l){}function Ka(t,l){1&t&&s._UZ(0,"tr",76)}function Va(t,l){if(1&t&&s.YNc(0,Ka,1,0,"tr",75),2&t){const n=s.oxw(2);s.Q6J("matHeaderRowDef",n.displayedColumns)("matHeaderRowDefSticky",!0)}}function se(t,l){}function ne(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"tr",78),s.NdJ("click",function(o){const p=s.CHM(n),d=p.$implicit,h=p.index,g=p.dataIndex,f=s.oxw(3);return s.KtG(f._selectRow(o,d,f._getIndex(h,g)))})("contextmenu",function(o){const p=s.CHM(n),d=p.$implicit,h=p.index,g=p.dataIndex,f=s.oxw(3);return s.KtG(f._contextmenu(o,d,f._getIndex(h,g)))}),s.ALo(1,"rowClass"),s.qZA()}if(2&t){const n=l.$implicit,a=l.index,o=l.dataIndex,p=s.oxw(3);s.Tol(s.gM2(1,3,n,a,o,p.rowClassFormatter)),s.Q6J("ngClass",s.VKq(8,ps,p.rowSelection.isSelected(n)))}}function te(t,l){if(1&t&&s.YNc(0,ne,2,10,"tr",77),2&t){const n=s.oxw(2);s.Q6J("matRowDefColumns",n.displayedColumns)}}function ae(t,l){1&t&&s._UZ(0,"tr",80)}function ee(t,l){if(1&t&&s.YNc(0,ae,1,0,"tr",79),2&t){const n=s.oxw(2);s.Q6J("matFooterRowDef",n.displayedColumns)("matFooterRowDefSticky",!0)}}function le(t,l){}function oe(t,l){}function pe(t,l){if(1&t&&(s.TgZ(0,"td",84)(1,"div",85),s.YNc(2,oe,0,0,"ng-template",54),s.qZA()()),2&t){const n=l.$implicit,a=l.dataIndex,o=s.oxw(3);s.uIk("colspan",o.displayedColumns.length),s.xp6(1),s.Q6J("@expansion",o.expansionRowStates[a].expanded?"expanded":"collapsed"),s.xp6(1),s.Q6J("ngTemplateOutlet",o.expansionTemplate)("ngTemplateOutletContext",s.l5B(4,is,n,n,a,o.expansionRowStates[a].expanded))}}function ie(t,l){if(1&t&&s._UZ(0,"tr",86),2&t){const n=l.dataIndex,a=s.oxw(3);s.Q6J("ngClass",s.VKq(1,cs,a.expansionRowStates[n].expanded?"expanded":"collapsed"))}}function ce(t,l){1&t&&(s.ynx(0)(1,81),s.YNc(2,pe,3,9,"td",82),s.BQk(),s.YNc(3,ie,1,3,"tr",83),s.BQk()),2&t&&(s.xp6(3),s.Q6J("matRowDefColumns",s.DdM(1,rs)))}function re(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"table",87),s.NdJ("matSortChange",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p._onSortChange(o))}),s.YNc(1,Ca,4,0,"ng-container",29),s.YNc(2,Xa,5,3,"ng-container",30),s.YNc(3,$a,0,0,"ng-template",13),s.YNc(4,Va,1,2,"ng-template",null,31,s.W1O),s.YNc(6,se,0,0,"ng-template",13),s.YNc(7,te,1,1,"ng-template",null,32,s.W1O),s.YNc(9,ee,1,2,"ng-template",33),s.YNc(10,le,0,0,"ng-template",33),s.YNc(11,ce,4,2,"ng-container",34),s.qZA()}if(2&t){const n=s.MAs(5),a=s.MAs(8),o=s.oxw();s.Q6J("ngClass",s.kEZ(18,ds,o.rowHover,o.rowStriped,o.expandable))("dataSource",o.dataSource)("multiTemplateDataRows",o.expandable)("matSortActive",o.sortActive)("matSortDirection",o.sortDirection)("matSortDisableClear",o.sortDisableClear)("matSortDisabled",o.sortDisabled)("matSortStart",o.sortStart)("trackBy",o.trackBy),s.xp6(1),s.Q6J("ngIf",o.rowSelectable&&!o.hideRowSelectionCheckbox),s.xp6(1),s.Q6J("ngForOf",o.columns),s.xp6(1),s.Q6J("ngIf",o.useContentHeaderRowTemplate)("ngIfElse",n),s.xp6(3),s.Q6J("ngIf",o.useContentRowTemplate)("ngIfElse",a),s.xp6(3),s.Q6J("ngIf",o._whetherShowSummary),s.xp6(1),s.Q6J("ngIf",o.useContentFooterRowTemplate),s.xp6(1),s.Q6J("ngIf",o.expandable)}}function de(t,l){}function he(t,l){if(1&t&&s.YNc(0,de,0,0,"ng-template",23),2&t){const n=s.oxw(2);s.Q6J("ngTemplateOutlet",n.noResultTemplate)}}function me(t,l){if(1&t&&s._uU(0),2&t){const n=s.oxw(2);s.Oqu(n.noResultText)}}function ge(t,l){if(1&t&&(s.TgZ(0,"div",90),s.YNc(1,he,1,1,"ng-template",13),s.YNc(2,me,1,1,"ng-template",null,91,s.W1O),s.qZA()),2&t){const n=s.MAs(3),a=s.oxw();s.xp6(1),s.Q6J("ngIf",a.noResultTemplate)("ngIfElse",n)}}function ue(t,l){}function xe(t,l){if(1&t&&s.YNc(0,ue,0,0,"ng-template",23),2&t){const n=s.oxw(2);s.Q6J("ngTemplateOutlet",n.sidebarTemplate)}}function _e(t,l){if(1&t&&(s.TgZ(0,"div",92),s.YNc(1,xe,1,1,"ng-template",33),s.qZA()),2&t){const n=s.oxw();s.xp6(1),s.Q6J("ngIf",n.sidebarTemplate)}}function fe(t,l){}function je(t,l){if(1&t&&s.YNc(0,fe,0,0,"ng-template",23),2&t){const n=s.oxw(2);s.Q6J("ngTemplateOutlet",n.statusbarTemplate)}}function be(t,l){if(1&t&&(s.TgZ(0,"div",93),s.YNc(1,je,1,1,"ng-template",33),s.qZA()),2&t){const n=s.oxw();s.xp6(1),s.Q6J("ngIf",n.statusbarTemplate)}}function Ce(t,l){}function ye(t,l){if(1&t&&s.YNc(0,Ce,0,0,"ng-template",23),2&t){const n=s.oxw();s.Q6J("ngTemplateOutlet",n.paginationTemplate)}}function Te(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"mat-paginator",94),s.NdJ("page",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p._onPage(o))}),s.qZA()}if(2&t){const n=s.oxw();s.ekj("mat-paginator-hidden",!n.showPaginator),s.Q6J("showFirstLastButtons",n.showFirstLastButtons)("length",n.length)("pageIndex",n.pageIndex)("pageSize",n.pageSize)("pageSizeOptions",n.pageSizeOptions)("hidePageSize",n.hidePageSize)("disabled",n.pageDisabled)}}function we(t,l){}function Ae(t,l){if(1&t&&s.YNc(0,we,0,0,"ng-template",54),2&t){const n=s.oxw(),o=n.colDef;s.Q6J("ngTemplateOutlet",n.$implicit)("ngTemplateOutletContext",s.WLB(2,w,o,o))}}function Me(t,l){}function ve(t,l){if(1&t&&s.YNc(0,Me,0,0,"ng-template",54),2&t){const n=s.oxw(2),o=n.colDef;s.Q6J("ngTemplateOutlet",n.$implicit[o.field])("ngTemplateOutletContext",s.WLB(2,w,o,o))}}function Se(t,l){if(1&t&&(s.YNc(0,ve,1,5,"ng-template",33),s.ALo(1,"isTemplateRef")),2&t){const n=s.oxw();let p;s.Q6J("ngIf",s.lcZ(1,1,null==(p=n.$implicit)?null:p[n.colDef.field]))}}function De(t,l){if(1&t&&(s.YNc(0,Ae,1,5,"ng-template",13),s.ALo(1,"isTemplateRef"),s.YNc(2,Se,2,3,"ng-template",null,95,s.W1O)),2&t){const n=l.$implicit,a=s.MAs(3);s.Q6J("ngIf",s.lcZ(1,2,n))("ngIfElse",a)}}const Ee=function(t){return{"mat-table-with-data":t}},Ge=new s.OlP("mtx-grid-default-options");let x=(()=>{class t{get _hasNoResult(){return!(this.data&&0!==this.data.length||this.loading)}get _whetherShowSummary(){return this.showSummary}constructor(n,a,o){this._utils=n,this._changeDetectorRef=a,this._defaultOptions=o,this.dataSource=new _.by,this.displayedColumns=[],this.columns=[],this.data=[],this.length=0,this.loading=!1,this.columnResizable=this._defaultOptions?.columnResizable??!1,this.emptyValuePlaceholder=this._defaultOptions?.emptyValuePlaceholder??"--",this.pageOnFront=this._defaultOptions?.pageOnFront??!0,this.showPaginator=this._defaultOptions?.showPaginator??!0,this.pageDisabled=this._defaultOptions?.pageDisabled??!1,this.showFirstLastButtons=this._defaultOptions?.showFirstLastButtons??!0,this.pageIndex=this._defaultOptions?.pageIndex??0,this.pageSize=this._defaultOptions?.pageSize??10,this.pageSizeOptions=this._defaultOptions?.pageSizeOptions??[10,50,100],this.hidePageSize=this._defaultOptions?.hidePageSize??!1,this.page=new s.vpe,this.sortOnFront=this._defaultOptions?.sortOnFront??!0,this.sortActive=this._defaultOptions?.sortActive??"",this.sortDirection=this._defaultOptions?.sortDirection??"",this.sortDisableClear=this._defaultOptions?.sortDisableClear??!1,this.sortDisabled=this._defaultOptions?.sortDisabled??!1,this.sortStart=this._defaultOptions?.sortStart??"asc",this.sortChange=new s.vpe,this.rowHover=this._defaultOptions?.rowHover??!1,this.rowStriped=this._defaultOptions?.rowStriped??!1,this.rowClick=new s.vpe,this.rowContextMenu=new s.vpe,this.expansionRowStates=[],this.expandable=!1,this.expansionChange=new s.vpe,this.rowSelection=new z.Ov(!0,[]),this.multiSelectable=this._defaultOptions?.multiSelectable??!0,this.multiSelectionWithClick=this._defaultOptions?.multiSelectionWithClick??!1,this.rowSelectable=this._defaultOptions?.rowSelectable??!1,this.hideRowSelectionCheckbox=this._defaultOptions?.hideRowSelectionCheckbox??!1,this.disableRowClickSelection=this._defaultOptions?.disableRowClickSelection??!1,this.rowSelectionFormatter={},this.rowSelected=[],this.rowSelectedChange=new s.vpe,this.cellSelection=[],this.cellSelectable=this._defaultOptions?.cellSelectable??!0,this.cellSelectedChange=new s.vpe,this.showToolbar=this._defaultOptions?.showToolbar??!1,this.toolbarTitle=this._defaultOptions?.toolbarTitle??"",this.columnHideable=this._defaultOptions?.columnHideable??!0,this.columnHideableChecked=this._defaultOptions?.columnHideableChecked??"show",this.columnSortable=this._defaultOptions?.columnSortable??!0,this.columnPinnable=this._defaultOptions?.columnPinnable??!0,this.columnChange=new s.vpe,this.columnPinOptions=this._defaultOptions?.columnPinOptions??[],this.showColumnMenuButton=this._defaultOptions?.showColumnMenuButton??!0,this.columnMenuButtonText=this._defaultOptions?.columnMenuButtonText??"",this.columnMenuButtonType=this._defaultOptions?.columnMenuButtonType??"stroked",this.columnMenuButtonColor=this._defaultOptions?.columnMenuButtonColor,this.columnMenuButtonClass=this._defaultOptions?.columnMenuButtonClass??"",this.columnMenuButtonIcon=this._defaultOptions?.columnMenuButtonIcon??"",this.showColumnMenuHeader=this._defaultOptions?.showColumnMenuHeader??!1,this.columnMenuHeaderText=this._defaultOptions?.columnMenuHeaderText??"Columns Header",this.showColumnMenuFooter=this._defaultOptions?.showColumnMenuFooter??!1,this.columnMenuFooterText=this._defaultOptions?.columnMenuFooterText??"Columns Footer",this.noResultText=this._defaultOptions?.noResultText??"No records found",this.useContentRowTemplate=!1,this.useContentHeaderRowTemplate=!1,this.useContentFooterRowTemplate=!1,this.showSummary=!1,this.showSidebar=!1,this.showStatusbar=!1}detectChanges(){this._changeDetectorRef.detectChanges()}_getColData(n,a){return this._utils.getColData(n,a)}ngOnChanges(n){this._countPinnedPosition(),this.displayedColumns=this.columns.filter(a=>!a.hide).map(a=>a.field),this.showColumnMenuButton&&this.columns.forEach(a=>{"show"===this.columnHideableChecked?a.show=!a.hide:a.hide=!!a.hide}),this.rowSelectable&&!this.hideRowSelectionCheckbox&&this.displayedColumns.unshift("MtxGridCheckboxColumnDef"),this.expandable&&(this.expansionRowStates=[],this.data?.forEach(a=>{this.expansionRowStates.push({expanded:!1})})),this.rowSelectable&&(this.rowSelection=new z.Ov(this.multiSelectable,this.rowSelected)),this.dataSource=new _.by(this.data),this.dataSource.paginator=this.pageOnFront?this.paginator:null,this.dataSource.sort=this.sortOnFront?this.sort:null,n.data&&this.scrollTop(0)}ngAfterViewInit(){this.pageOnFront&&(this.dataSource.paginator=this.paginator),this.sortOnFront&&(this.dataSource.sort=this.sort),this.rowDefs?.length>0&&this.useContentRowTemplate&&this.rowDefs.forEach(n=>this.table.addRowDef(n)),this.headerRowDefs?.length>0&&this.useContentHeaderRowTemplate&&this.headerRowDefs.forEach(n=>this.table.addHeaderRowDef(n)),this.footerRowDefs?.length>0&&this.useContentFooterRowTemplate&&this.footerRowDefs.forEach(n=>this.table.addFooterRowDef(n))}ngOnDestroy(){}_countPinnedPosition(){const n=(p,d)=>p+parseFloat(d.width||"80px"),a=this.columns.filter(p=>p.pinned&&"left"===p.pinned);a.forEach((p,d)=>{p.left=a.slice(0,d).reduce(n,0)+"px"});const o=this.columns.filter(p=>p.pinned&&"right"===p.pinned).reverse();o.forEach((p,d)=>{p.right=o.slice(0,d).reduce(n,0)+"px"})}_getIndex(n,a){return typeof n>"u"?a:n}_onSortChange(n){this.sortChange.emit(n)}_onRowDataChange(n){this.rowChangeRecord=n,this._changeDetectorRef.markForCheck()}_onExpansionChange(n,a,o,p){this.expansionChange.emit({expanded:n.expanded,data:a,index:p,column:o})}_selectCell(n,a,o){if(this._selectedCell!==n){const p=this._utils.getCellValue(a,o);this.cellSelection=[],this.cellSelection.push({cellData:p,rowData:a,colDef:o}),this.cellSelectedChange.emit(this.cellSelection),this._selectedCell&&this._selectedCell.deselect()}this._selectedCell=n.selected?n:void 0}_selectRow(n,a,o){this.rowSelectable&&!this.rowSelectionFormatter.disabled?.(a,o)&&!this.rowSelectionFormatter.hideCheckbox?.(a,o)&&!this.disableRowClickSelection&&(!this.multiSelectionWithClick&&!n.ctrlKey&&!n.metaKey&&this.rowSelection.clear(),this._toggleNormalCheckbox(a)),this.rowClick.emit({event:n,rowData:a,index:o})}_isAllSelected(){return this.rowSelection.selected.length===this.dataSource.data.filter((o,p)=>!this.rowSelectionFormatter.disabled?.(o,p)).length}_toggleMasterCheckbox(){this._isAllSelected()?this.rowSelection.clear():this.dataSource.data.forEach((n,a)=>{this.rowSelectionFormatter.disabled?.(n,a)||this.rowSelection.select(n)}),this.rowSelectedChange.emit(this.rowSelection.selected)}_toggleNormalCheckbox(n){this.rowSelection.toggle(n),this.rowSelectedChange.emit(this.rowSelection.selected)}_onColumnChange(n){this.columnChange.emit(n),this.displayedColumns=Object.assign([],this.getDisplayedColumnFields(n)),this.rowSelectable&&!this.hideRowSelectionCheckbox&&this.displayedColumns.unshift("MtxGridCheckboxColumnDef")}getDisplayedColumnFields(n){return n.filter(o=>"show"===this.columnHideableChecked?o.show:!o.hide).map(o=>o.field)}toggleExpansion(n){if(!this.expandable)throw new Error("The `expandable` should be set true.");return this.expansionRowStates[n].expanded=!this.expansionRowStates[n].expanded,this.expansionRowStates[n].expanded}_onPage(n){this.pageOnFront&&this.scrollTop(0),this.page.emit(n)}scrollTop(n){if(null==n)return this.tableContainer?.nativeElement.scrollTop;this.tableContainer&&!this.loading&&(this.tableContainer.nativeElement.scrollTop=n)}scrollLeft(n){if(null==n)return this.tableContainer?.nativeElement.scrollLeft;this.tableContainer&&!this.loading&&(this.tableContainer.nativeElement.scrollLeft=n)}_contextmenu(n,a,o){this.rowContextMenu.emit({event:n,rowData:a,index:o})}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(B.U),s.Y36(s.sBO),s.Y36(Ge,8))},t.\u0275cmp=s.Xpm({type:t,selectors:[["mtx-grid"]],contentQueries:function(n,a,o){if(1&n&&(s.Suo(o,_.nj,4),s.Suo(o,_.as,4),s.Suo(o,_.Q2,4)),2&n){let p;s.iGM(p=s.CRH())&&(a.rowDefs=p),s.iGM(p=s.CRH())&&(a.headerRowDefs=p),s.iGM(p=s.CRH())&&(a.footerRowDefs=p)}},viewQuery:function(n,a){if(1&n&&(s.Gf(_.BZ,5),s.Gf(Y.NW,5),s.Gf(R.YE,5),s.Gf(ht,5),s.Gf(mt,5)),2&n){let o;s.iGM(o=s.CRH())&&(a.table=o.first),s.iGM(o=s.CRH())&&(a.paginator=o.first),s.iGM(o=s.CRH())&&(a.sort=o.first),s.iGM(o=s.CRH())&&(a.columnMenu=o.first),s.iGM(o=s.CRH())&&(a.tableContainer=o.first)}},hostAttrs:[1,"mtx-grid"],inputs:{displayedColumns:"displayedColumns",columns:"columns",data:"data",length:"length",loading:"loading",trackBy:"trackBy",columnResizable:"columnResizable",emptyValuePlaceholder:"emptyValuePlaceholder",pageOnFront:"pageOnFront",showPaginator:"showPaginator",pageDisabled:"pageDisabled",showFirstLastButtons:"showFirstLastButtons",pageIndex:"pageIndex",pageSize:"pageSize",pageSizeOptions:"pageSizeOptions",hidePageSize:"hidePageSize",paginationTemplate:"paginationTemplate",sortOnFront:"sortOnFront",sortActive:"sortActive",sortDirection:"sortDirection",sortDisableClear:"sortDisableClear",sortDisabled:"sortDisabled",sortStart:"sortStart",rowHover:"rowHover",rowStriped:"rowStriped",expandable:"expandable",expansionTemplate:"expansionTemplate",multiSelectable:"multiSelectable",multiSelectionWithClick:"multiSelectionWithClick",rowSelectable:"rowSelectable",hideRowSelectionCheckbox:"hideRowSelectionCheckbox",disableRowClickSelection:"disableRowClickSelection",rowSelectionFormatter:"rowSelectionFormatter",rowClassFormatter:"rowClassFormatter",rowSelected:"rowSelected",cellSelectable:"cellSelectable",showToolbar:"showToolbar",toolbarTitle:"toolbarTitle",toolbarTemplate:"toolbarTemplate",columnHideable:"columnHideable",columnHideableChecked:"columnHideableChecked",columnSortable:"columnSortable",columnPinnable:"columnPinnable",columnPinOptions:"columnPinOptions",showColumnMenuButton:"showColumnMenuButton",columnMenuButtonText:"columnMenuButtonText",columnMenuButtonType:"columnMenuButtonType",columnMenuButtonColor:"columnMenuButtonColor",columnMenuButtonClass:"columnMenuButtonClass",columnMenuButtonIcon:"columnMenuButtonIcon",showColumnMenuHeader:"showColumnMenuHeader",columnMenuHeaderText:"columnMenuHeaderText",columnMenuHeaderTemplate:"columnMenuHeaderTemplate",showColumnMenuFooter:"showColumnMenuFooter",columnMenuFooterText:"columnMenuFooterText",columnMenuFooterTemplate:"columnMenuFooterTemplate",noResultText:"noResultText",noResultTemplate:"noResultTemplate",headerTemplate:"headerTemplate",headerExtraTemplate:"headerExtraTemplate",cellTemplate:"cellTemplate",useContentRowTemplate:"useContentRowTemplate",useContentHeaderRowTemplate:"useContentHeaderRowTemplate",useContentFooterRowTemplate:"useContentFooterRowTemplate",showSummary:"showSummary",summaryTemplate:"summaryTemplate",showSidebar:"showSidebar",sidebarTemplate:"sidebarTemplate",showStatusbar:"showStatusbar",statusbarTemplate:"statusbarTemplate"},outputs:{page:"page",sortChange:"sortChange",rowClick:"rowClick",rowContextMenu:"rowContextMenu",expansionChange:"expansionChange",rowSelectedChange:"rowSelectedChange",cellSelectedChange:"cellSelectedChange",columnChange:"columnChange"},exportAs:["mtxGrid"],features:[s.TTD],decls:18,vars:12,consts:[["class","mtx-grid-progress",4,"ngIf"],["class","mtx-grid-toolbar",4,"ngIf"],[1,"mtx-grid-main","mtx-grid-layout"],[1,"mtx-grid-content","mtx-grid-layout"],[1,"mat-table-container",3,"ngClass"],["tableContainer",""],["mat-table","","matSort","",3,"ngClass","dataSource","multiTemplateDataRows","matSortActive","matSortDirection","matSortDisableClear","matSortDisabled","matSortStart","trackBy","matSortChange",4,"ngIf"],["mat-table","","columnResize","","matSort","",3,"ngClass","dataSource","multiTemplateDataRows","matSortActive","matSortDirection","matSortDisableClear","matSortDisabled","matSortStart","trackBy","matSortChange",4,"ngIf"],["class","mtx-grid-no-result",4,"ngIf"],["class","mtx-grid-sidebar",4,"ngIf"],[1,"mtx-grid-footer"],["class","mtx-grid-statusbar",4,"ngIf"],[1,"mtx-grid-pagination"],[3,"ngIf","ngIfElse"],["defaultPaginationTemplate",""],["headerExtraTplBase",""],[1,"mtx-grid-progress"],["mode","indeterminate"],[1,"mtx-grid-toolbar"],[1,"mtx-grid-toolbar-content"],["defaultToolbarTemplate",""],[1,"mtx-grid-toolbar-actions"],[3,"columns","buttonText","buttonType","buttonColor","buttonClass","buttonIcon","selectable","selectableChecked","sortable","pinnable","showHeader","headerText","headerTemplate","showFooter","footerText","footerTemplate","pinOptions","columnChange",4,"ngIf"],[3,"ngTemplateOutlet"],["class","mtx-grid-toolbar-title",4,"ngIf"],[1,"mtx-grid-toolbar-title"],[3,"columns","buttonText","buttonType","buttonColor","buttonClass","buttonIcon","selectable","selectableChecked","sortable","pinnable","showHeader","headerText","headerTemplate","showFooter","footerText","footerTemplate","pinOptions","columnChange"],["columnMenu",""],["mat-table","","matSort","",3,"ngClass","dataSource","multiTemplateDataRows","matSortActive","matSortDirection","matSortDisableClear","matSortDisabled","matSortStart","trackBy","matSortChange"],["matColumnDef","MtxGridCheckboxColumnDef",4,"ngIf"],[4,"ngFor","ngForOf"],["defaultHeaderRowTpl",""],["defaultRowTpl",""],[3,"ngIf"],[4,"ngIf"],["matColumnDef","MtxGridCheckboxColumnDef"],["mat-header-cell","","class","mtx-grid-checkbox-cell",4,"matHeaderCellDef"],["mat-cell","","class","mtx-grid-checkbox-cell",4,"matCellDef"],["mat-footer-cell","","class","mtx-grid-checkbox-cell",4,"matFooterCellDef"],["mat-header-cell","",1,"mtx-grid-checkbox-cell"],[3,"checked","indeterminate","change",4,"ngIf"],[3,"checked","indeterminate","change"],["mat-cell","",1,"mtx-grid-checkbox-cell"],[3,"disabled","checked","click","change",4,"ngIf"],[3,"disabled","checked","click","change"],["mat-footer-cell","",1,"mtx-grid-checkbox-cell"],[3,"matColumnDef","sticky","stickyEnd"],["mat-header-cell","",3,"class","ngClass","ngStyle",4,"matHeaderCellDef"],["mat-cell","","mtx-grid-selectable-cell","",3,"class","ngClass","ngStyle","cellSelectedChange",4,"matCellDef"],["mat-footer-cell","",3,"ngClass","ngStyle",4,"matFooterCellDef"],["mat-header-cell","",3,"ngClass","ngStyle"],[1,"mat-header-cell-inner"],["headerTpl",""],["defaultHeaderTpl",""],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"mat-sort-header","disabled","disableClear","arrowPosition","start"],["class","mtx-grid-expansion-placeholder",4,"ngIf"],["class","mtx-grid-icon mat-sort-header-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngIf"],[1,"mtx-grid-expansion-placeholder"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-grid-icon","mat-sort-header-icon"],["d","M3,13H15V11H3M3,6V8H21V6M3,18H9V16H3V18Z"],["mat-cell","","mtx-grid-selectable-cell","",3,"ngClass","ngStyle","cellSelectedChange"],["cellTpl",""],["colDefCellTpl",""],["defaultCellTpl",""],[3,"ngIf","ngIfElse","ngTemplateOutlet","ngTemplateOutletContext"],["class","mtx-grid-row-expand-button","mat-icon-button","","mtx-grid-expansion-toggle","","type","button",3,"opened","openedChange","toggleChange",4,"ngIf"],[3,"rowData","colDef","placeholder","rowDataChange"],["mat-icon-button","","mtx-grid-expansion-toggle","","type","button",1,"mtx-grid-row-expand-button",3,"opened","openedChange","toggleChange"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mtx-grid-icon","mtx-grid-row-expand-icon"],["d","M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],["mat-footer-cell","",3,"ngClass","ngStyle"],["summaryTpl",""],["defaultSummaryTpl",""],[3,"summary","data","colDef","placeholder"],["mat-header-row","",4,"matHeaderRowDef","matHeaderRowDefSticky"],["mat-header-row",""],["mat-row","",3,"class","ngClass","click","contextmenu",4,"matRowDef","matRowDefColumns"],["mat-row","",3,"ngClass","click","contextmenu"],["mat-footer-row","",4,"matFooterRowDef","matFooterRowDefSticky"],["mat-footer-row",""],["matColumnDef","MtxGridExpansionColumnDef"],["mat-cell","",4,"matCellDef"],["mat-row","",3,"ngClass",4,"matRowDef","matRowDefColumns"],["mat-cell",""],[1,"mtx-grid-expansion-detail"],["mat-row","",3,"ngClass"],["mat-table","","columnResize","","matSort","",3,"ngClass","dataSource","multiTemplateDataRows","matSortActive","matSortDirection","matSortDisableClear","matSortDisabled","matSortStart","trackBy","matSortChange"],["mat-header-cell","",3,"class","ngClass","ngStyle","resizable","matResizableMinWidthPx","matResizableMaxWidthPx",4,"matHeaderCellDef"],["mat-header-cell","",3,"ngClass","ngStyle","resizable","matResizableMinWidthPx","matResizableMaxWidthPx"],[1,"mtx-grid-no-result"],["defaultNoResultTpl",""],[1,"mtx-grid-sidebar"],[1,"mtx-grid-statusbar"],[3,"showFirstLastButtons","length","pageIndex","pageSize","pageSizeOptions","hidePageSize","disabled","page"],["headerExtraTpl",""]],template:function(n,a){if(1&n&&(s.YNc(0,gt,2,0,"div",0),s.YNc(1,bt,7,3,"div",1),s.TgZ(2,"div",2)(3,"div",3)(4,"div",4,5),s.YNc(6,ua,12,22,"table",6),s.YNc(7,re,12,22,"table",7),s.qZA(),s.YNc(8,ge,4,2,"div",8),s.qZA(),s.YNc(9,_e,2,1,"div",9),s.qZA(),s.TgZ(10,"div",10),s.YNc(11,be,2,1,"div",11),s.TgZ(12,"div",12),s.YNc(13,ye,1,1,"ng-template",13),s.YNc(14,Te,1,9,"ng-template",null,14,s.W1O),s.qZA()(),s.YNc(16,De,4,4,"ng-template",null,15,s.W1O)),2&n){const o=s.MAs(15);s.Q6J("ngIf",a.loading),s.xp6(1),s.Q6J("ngIf",a.showToolbar),s.xp6(3),s.Q6J("ngClass",s.VKq(10,Ee,!a._hasNoResult)),s.xp6(2),s.Q6J("ngIf",!a.columnResizable),s.xp6(1),s.Q6J("ngIf",a.columnResizable),s.xp6(1),s.Q6J("ngIf",a._hasNoResult),s.xp6(1),s.Q6J("ngIf",a.showSidebar),s.xp6(2),s.Q6J("ngIf",a.showStatusbar),s.xp6(2),s.Q6J("ngIf",a.paginationTemplate)("ngIfElse",o)}},dependencies:function(){return[m.mk,m.sg,m.O5,m.tP,m.PC,_.BZ,_.fO,_.as,_.w1,_.Dz,_.nj,_.mD,_.Ke,_.ge,_.ev,_.yh,_.XQ,_.Gk,_.Q2,R.YE,R.nU,Y.NW,M.oG,b.RK,fs.pW,Ms,Bs,An,ct,rt,Pe,m.Ov,H.y,dt.U,qs,Fs]},styles:[".mtx-grid{position:relative;display:flex;flex-direction:column;width:100%;border:1px solid var(--mtx-grid-outline-color)}.mtx-grid .mat-mdc-table.mat-table-striped .mat-row-odd{background-color:var(--mtx-grid-table-row-striped-background-color)}.mtx-grid .mat-mdc-table.mat-table-hover .mat-mdc-row:hover{background-color:var(--mtx-grid-table-row-hover-background-color)}.mtx-grid .mat-mdc-table .mat-mdc-row.selected,.mtx-grid .mat-mdc-table .mat-mdc-row.mat-row-odd.selected{background-color:var(--mtx-grid-table-row-selected-background-color)}.mtx-grid .mat-mdc-table .mat-mdc-cell.selected{box-shadow:inset 0 0 0 1px var(--mtx-grid-table-cell-selected-outline-color)}.mtx-grid .mat-table-container{overflow:auto}.mtx-grid .mat-table-container.mat-table-with-data{flex:1}.mtx-grid .mat-mdc-table:not(.mat-column-resize-table){min-width:100%;border-collapse:separate}.mtx-grid .mat-mdc-table:not(.mat-column-resize-table) .mat-mdc-header-cell:not(.mtx-grid-checkbox-cell),.mtx-grid .mat-mdc-table:not(.mat-column-resize-table) .mat-mdc-footer-cell:not(.mtx-grid-checkbox-cell),.mtx-grid .mat-mdc-table:not(.mat-column-resize-table) .mat-mdc-cell:not(.mtx-grid-checkbox-cell){min-width:80px}.mtx-grid .mat-table-sticky-left{border-right:1px solid var(--mat-table-row-item-outline-color)}[dir=rtl] .mtx-grid .mat-table-sticky-left{border-right-width:0;border-left:1px solid var(--mat-table-row-item-outline-color)}.mtx-grid .mat-table-sticky-right{border-left:1px solid var(--mat-table-row-item-outline-color)}[dir=rtl] .mtx-grid .mat-table-sticky-right{border-left-width:0;border-right:1px solid var(--mat-table-row-item-outline-color)}.mtx-grid .mat-mdc-header-cell,.mtx-grid .mat-mdc-footer-cell,.mtx-grid .mat-mdc-cell{padding:4px 10px;box-sizing:border-box}.mtx-grid .mat-mdc-header-cell:first-of-type:not(:only-of-type),.mtx-grid .mat-mdc-footer-cell:first-of-type:not(:only-of-type),.mtx-grid .mat-mdc-cell:first-of-type:not(:only-of-type){padding-left:24px}.mtx-grid .mat-mdc-header-cell:first-of-type:not(:only-of-type).mtx-grid-checkbox-cell,.mtx-grid .mat-mdc-footer-cell:first-of-type:not(:only-of-type).mtx-grid-checkbox-cell,.mtx-grid .mat-mdc-cell:first-of-type:not(:only-of-type).mtx-grid-checkbox-cell{padding-left:10px;padding-right:10px}[dir=rtl] .mtx-grid .mat-mdc-header-cell:first-of-type:not(:only-of-type),[dir=rtl] .mtx-grid .mat-mdc-footer-cell:first-of-type:not(:only-of-type),[dir=rtl] .mtx-grid .mat-mdc-cell:first-of-type:not(:only-of-type){padding-left:10px;padding-right:24px}[dir=rtl] .mtx-grid .mat-mdc-header-cell:first-of-type:not(:only-of-type).mtx-grid-checkbox-cell,[dir=rtl] .mtx-grid .mat-mdc-footer-cell:first-of-type:not(:only-of-type).mtx-grid-checkbox-cell,[dir=rtl] .mtx-grid .mat-mdc-cell:first-of-type:not(:only-of-type).mtx-grid-checkbox-cell{padding-left:10px;padding-right:10px}.mtx-grid .mat-mdc-header-cell:last-of-type:not(:only-of-type),.mtx-grid .mat-mdc-footer-cell:last-of-type:not(:only-of-type),.mtx-grid .mat-mdc-cell:last-of-type:not(:only-of-type){padding-right:24px}[dir=rtl] .mtx-grid .mat-mdc-header-cell:last-of-type:not(:only-of-type),[dir=rtl] .mtx-grid .mat-mdc-footer-cell:last-of-type:not(:only-of-type),[dir=rtl] .mtx-grid .mat-mdc-cell:last-of-type:not(:only-of-type){padding-left:24px;padding-right:10px}.mtx-grid .mat-mdc-footer-cell{border-top:1px solid var(--mat-table-row-item-outline-color);background-color:var(--mtx-grid-table-footer-background-color)}.mtx-grid .mat-mdc-row.mtx-grid-expansion{height:0;overflow:hidden}.mtx-grid .mat-mdc-row.mtx-grid-expansion .mat-mdc-cell{padding-top:0;padding-bottom:0}.mtx-grid .mat-mdc-row.mtx-grid-expansion.collapsed .mat-mdc-cell{border-bottom-width:0}.mtx-grid .mat-mdc-row:last-of-type .mat-cell{border-bottom-width:0}.mtx-grid .mat-sort-header-icon{margin:0 4px}.mtx-grid .mat-header-cell-inner{display:inline-flex;align-items:center}.mtx-grid .mat-mdc-paginator{border-top:1px solid var(--mtx-grid-outline-color)}.mtx-grid .mat-paginator-hidden{display:none}.mtx-grid-progress{position:absolute;top:0;z-index:120;width:100%}.mtx-grid-toolbar{display:flex;justify-content:space-between;align-items:center;min-height:48px;padding:8px;box-sizing:border-box;border-bottom:1px solid var(--mtx-grid-outline-color)}.mtx-grid-layout{display:flex;flex:1 1 auto;overflow:auto}.mtx-grid-content{flex-direction:column;width:0}.mtx-grid-sidebar{max-width:50%;border-left:1px solid var(--mtx-grid-outline-color)}[dir=rtl] .mtx-grid-sidebar{border-left-width:0;border-right:1px solid var(--mtx-grid-outline-color)}.mtx-grid-footer{position:relative;z-index:1}.mtx-grid-statusbar{display:flex;align-items:center;min-height:56px;padding:8px;border-top:1px solid var(--mtx-grid-outline-color)}.mtx-grid-no-result{display:flex;justify-content:center;align-items:center;flex:1;min-height:150px}.mtx-grid-expansion-placeholder{display:inline-block;width:40px;height:40px;vertical-align:middle}.mtx-grid-expansion-detail{display:flex;align-items:center;min-height:48px;overflow:hidden}.mtx-grid-checkbox-cell{flex:none;justify-content:center;width:60px;min-width:60px}.mtx-grid-checkbox-cell .mat-checkbox{display:flex;margin:0 10px}.mtx-grid-checkbox-cell .mat-checkbox-inner-container{margin-left:0}.mtx-grid-row-expand-button.mat-mdc-icon-button{width:40px;height:40px;padding:8px;vertical-align:middle}.mtx-grid-row-expand-button.mat-mdc-icon-button.expanded .mtx-grid-row-expand-icon{transform:rotate(90deg)}.mtx-grid-row-expand-button.mat-mdc-icon-button+mtx-grid-cell{vertical-align:middle}.mtx-grid-row-expand-button.mat-mdc-icon-button .mat-mdc-button-touch-target{width:100%;height:100%}.mtx-grid-icon{width:20px;height:20px;font-size:20px}.mtx-grid-column-menu-item,.mtx-grid-column-menu-header,.mtx-grid-column-menu-footer{color:var(--mtx-grid-column-menu-text-color)}.mtx-grid-column-menu-header{border-bottom:1px solid var(--mtx-grid-column-menu-divider-color)}.mtx-grid-column-menu-footer{border-top:1px solid var(--mtx-grid-column-menu-divider-color)}\n"],encapsulation:2,data:{animation:[(0,C.X$)("expansion",[(0,C.SB)("collapsed, void",(0,C.oB)({height:"0",minHeight:"0",visibility:"hidden"})),(0,C.SB)("expanded",(0,C.oB)({height:"*",visibility:"visible"})),(0,C.eR)("expanded <=> collapsed",(0,C.jt)("225ms cubic-bezier(0.4, 0.0, 0.2, 1)")),(0,C.eR)("expanded <=> void",(0,C.jt)("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])]},changeDetection:0}),t})(),Pe=(()=>{class t{get selected(){return this._selected}set mtxSelectableRowData(n){n!==this._rowData&&(this._rowData=n)}constructor(n){this._grid=n,this._selected=!1,this.ctrlKeyPressed=!1,this.shiftKeyPressed=!1,this.cellSelectedChange=new s.vpe}onClick(n){this.ctrlKeyPressed=n.ctrlKey,this.shiftKeyPressed=n.shiftKey,this._grid.cellSelectable&&this.select()}select(){this._selected=!0,this.cellSelectedChange.emit(this)}deselect(){this._selected=!1,this.cellSelectedChange.emit(this)}toggle(){this._selected=!this._selected,this.cellSelectedChange.emit(this)}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(x))},t.\u0275dir=s.lG2({type:t,selectors:[["","mtx-grid-selectable-cell",""]],hostVars:2,hostBindings:function(n,a){1&n&&s.NdJ("click",function(p){return a.onClick(p)}),2&n&&s.ekj("selected",a.selected)},inputs:{mtxSelectableRowData:"mtxSelectableRowData"},outputs:{cellSelectedChange:"cellSelectedChange"}}),t})();const Oe={title:"Basic",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",type:"number",typeParameter:{digitsInfo:"1.2-2"}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Date",field:"date",type:"date",typeParameter:{format:"yyyy-MM-dd"}}],this.list=u}trackByName(n,a){return a.name}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","trackBy"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)("trackBy",a.trackByName)},dependencies:[x]}),t})(),files:[{file:"app.component.html",content:e(65956),filecontent:e(63202)},{file:"app.component.ts",content:e(99706),filecontent:e(22278)},{file:"app.component.scss",content:e(44407),filecontent:e(95715)},{file:"data.ts",content:e(70988),filecontent:e(6407)}]},ke={title:"Loading status",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u,this.isLoading=!0}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(n,a){1&n&&(s.TgZ(0,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.isLoading=p}),s._uU(1,"Loading"),s.qZA(),s._UZ(2,"mtx-grid",1)),2&n&&(s.Q6J("ngModel",a.isLoading),s.xp6(2),s.Q6J("data",a.list)("columns",a.columns)("loading",a.isLoading))},dependencies:[j.JJ,j.On,M.oG,x],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),t})(),files:[{file:"app.component.html",content:e(31789),filecontent:e(21071)},{file:"app.component.ts",content:e(48255),filecontent:e(46717)},{file:"app.component.scss",content:e(97653),filecontent:e(260)}]},Le={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)("pageOnFront",!1)("showPaginator",!1)},dependencies:[x]}),t})(),files:[{file:"app.component.html",content:e(66593),filecontent:e(46295)},{file:"app.component.ts",content:e(13733),filecontent:e(93237)},{file:"app.component.scss",content:e(62856),filecontent:e(36598)}]},Ze={title:"Sortable",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!1},{header:"City",field:"city",sortable:!0,sortProp:{arrowPosition:"before",disableClear:!0,start:"desc"}}],this.list=u}log(n){console.log(n)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:5,consts:[["sortActive","name","sortDirection","asc","sortStart","asc",3,"data","columns","sortOnFront","sortDisableClear","sortDisabled","sortChange"]],template:function(n,a){1&n&&(s.TgZ(0,"mtx-grid",0),s.NdJ("sortChange",function(p){return a.log(p)}),s.qZA()),2&n&&s.Q6J("data",a.list)("columns",a.columns)("sortOnFront",!0)("sortDisableClear",!0)("sortDisabled",!1)},dependencies:[x]}),t})(),files:[{file:"app.component.html",content:e(3964),filecontent:e(85326)},{file:"app.component.ts",content:e(57493),filecontent:e(56805)},{file:"app.component.scss",content:e(11870),filecontent:e(86499)}]};var G=e(87466);const Re={title:"Row selectable",description:"\n  <p>If you choose the multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple rows.</p>\n  ",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=u.slice(2,3),this.rowSelectionFormatter={disabled:n=>"Boron"===n.name,hideCheckbox:n=>"John"===n.name}}log(n){console.log(n)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectedChange","cellSelectedChange"]],template:function(n,a){1&n&&(s.TgZ(0,"div")(1,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.rowSelectable=p}),s._uU(2,"Row selectable"),s.qZA(),s.TgZ(3,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.hideRowSelectionCheckbox=p}),s._uU(4,"Hide checkbox"),s.qZA(),s.TgZ(5,"mat-radio-group",0),s.NdJ("ngModelChange",function(p){return a.multiSelectable=p}),s.TgZ(6,"mat-radio-button",1),s._uU(7,"Single"),s.qZA(),s.TgZ(8,"mat-radio-button",1),s._uU(9,"Multiple"),s.qZA()()(),s.TgZ(10,"mtx-grid",2),s.NdJ("rowSelectedChange",function(p){return a.log(p)})("cellSelectedChange",function(p){return a.log(p)}),s.qZA()),2&n&&(s.xp6(1),s.Q6J("ngModel",a.rowSelectable),s.xp6(2),s.Q6J("ngModel",a.hideRowSelectionCheckbox),s.xp6(2),s.Q6J("ngModel",a.multiSelectable),s.xp6(1),s.Q6J("value",!1),s.xp6(2),s.Q6J("value",!0),s.xp6(2),s.Q6J("data",a.list)("columns",a.columns)("multiSelectable",a.multiSelectable)("hideRowSelectionCheckbox",a.hideRowSelectionCheckbox)("rowSelectable",a.rowSelectable)("rowSelected",a.rowSelected)("rowSelectionFormatter",a.rowSelectionFormatter))},dependencies:[j.JJ,j.On,M.oG,G.VQ,G.U0,x],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),t})(),files:[{file:"app.component.html",content:e(33608),filecontent:e(79425)},{file:"app.component.ts",content:e(31754),filecontent:e(27331)},{file:"app.component.scss",content:e(55136),filecontent:e(95789)}]};function Be(t,l){1&t&&s._uU(0),2&t&&s.hij(" ",l.$implicit.name,"\n")}const Ie={title:"Expandable row",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u}log(n){console.log(n)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(n,a){if(1&n&&(s.TgZ(0,"mtx-grid",0),s.NdJ("expansionChange",function(p){return a.log(p)}),s.qZA(),s.YNc(1,Be,1,1,"ng-template",null,1,s.W1O)),2&n){const o=s.MAs(2);s.Q6J("data",a.list)("columns",a.columns)("expandable",!0)("expansionTemplate",o)}},dependencies:[x]}),t})(),files:[{file:"app.component.html",content:e(41355),filecontent:e(20310)},{file:"app.component.ts",content:e(78413),filecontent:e(2450)},{file:"app.component.scss",content:e(62218),filecontent:e(37498)}]},Ne=["grid"];function Fe(t,l){if(1&t){const n=s.EpF();s.TgZ(0,"button"),s._uU(1,"Save"),s.qZA(),s.TgZ(2,"button",6),s.NdJ("click",function(){s.CHM(n);const o=s.oxw();return s.KtG(o.closeMenu())}),s._uU(3,"Close"),s.qZA()}}const qe={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u,this.columnPinnable=!1,this.columnSortable=!0,this.columnHideable=!0,this.columnHideableChecked="show"}closeMenu(){this.grid.columnMenu.menuTrigger.closeMenu()}log(n){console.log(n)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],viewQuery:function(n,a){if(1&n&&s.Gf(Ne,5),2&n){let o;s.iGM(o=s.CRH())&&(a.grid=o.first)}},decls:18,vars:16,consts:[[3,"ngModel","ngModelChange"],["value","show"],["value","hide"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnHideableChecked","columnSortable","columnPinnable","showColumnMenuHeader","columnMenuHeaderText","showColumnMenuFooter","columnMenuFooterTemplate","columnChange"],["grid",""],["menuFooter",""],[3,"click"]],template:function(n,a){if(1&n&&(s.TgZ(0,"div")(1,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.columnHideable=p}),s._uU(2,"Column Hiding"),s.qZA(),s.TgZ(3,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.columnSortable=p}),s._uU(4,"Column Sorting"),s.qZA(),s.TgZ(5,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.columnPinnable=p}),s._uU(6,"Column Pinning"),s.qZA(),s.TgZ(7,"label"),s._uU(8,"ColumnHideableChecked:"),s.qZA(),s.TgZ(9,"mat-radio-group",0),s.NdJ("ngModelChange",function(p){return a.columnHideableChecked=p}),s.TgZ(10,"mat-radio-button",1),s._uU(11,"Show"),s.qZA(),s.TgZ(12,"mat-radio-button",2),s._uU(13,"Hide"),s.qZA()()(),s.TgZ(14,"mtx-grid",3,4),s.NdJ("columnChange",function(p){return a.log(p)}),s.qZA(),s.YNc(16,Fe,4,0,"ng-template",null,5,s.W1O)),2&n){const o=s.MAs(17);s.xp6(1),s.Q6J("ngModel",a.columnHideable),s.xp6(2),s.Q6J("ngModel",a.columnSortable),s.xp6(2),s.Q6J("ngModel",a.columnPinnable),s.xp6(4),s.Q6J("ngModel",a.columnHideableChecked),s.xp6(5),s.Q6J("data",a.list)("columns",a.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",a.columnHideable)("columnHideableChecked",a.columnHideableChecked)("columnSortable",a.columnSortable)("columnPinnable",a.columnPinnable)("showColumnMenuHeader",!0)("columnMenuHeaderText","Title")("showColumnMenuFooter",!0)("columnMenuFooterTemplate",o)}},dependencies:[j.JJ,j.On,M.oG,G.VQ,G.U0,x],styles:["label[_ngcontent-%COMP%]{padding:0 8px}"]}),t})(),files:[{file:"app.component.html",content:e(14180),filecontent:e(66184)},{file:"app.component.ts",content:e(31901),filecontent:e(21386)},{file:"app.component.scss",content:e(16686),filecontent:e(35959)}]},He={title:"Column pinnable",component:(()=>{class t{constructor(){this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","showToolbar"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)("showToolbar",!0)},dependencies:[x]}),t})(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:e(11520),filecontent:e(78717)},{file:"app.component.ts",content:e(14431),filecontent:e(83040)},{file:"app.component.scss",content:e(85453),filecontent:e(41738)}]},We={title:"Hover & striped",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u,this.rowHover=!0,this.rowStriped=!1}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:6,vars:7,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped","rowSelectable"]],template:function(n,a){1&n&&(s.TgZ(0,"div")(1,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.rowHover=p}),s._uU(2,"Hover"),s.qZA(),s.TgZ(3,"mat-checkbox",0),s.NdJ("ngModelChange",function(p){return a.rowStriped=p}),s._uU(4,"Striped"),s.qZA()(),s._UZ(5,"mtx-grid",1)),2&n&&(s.xp6(1),s.Q6J("ngModel",a.rowHover),s.xp6(2),s.Q6J("ngModel",a.rowStriped),s.xp6(2),s.Q6J("data",a.list)("columns",a.columns)("rowHover",a.rowHover)("rowStriped",a.rowStriped)("rowSelectable",!0))},dependencies:[j.JJ,j.On,M.oG,x],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),t})(),files:[{file:"app.component.html",content:e(17869),filecontent:e(64392)},{file:"app.component.ts",content:e(90935),filecontent:e(92869)},{file:"app.component.scss",content:e(49211),filecontent:e(1009)}]},Je={title:"Row with buttons",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"180px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"copy",icon:"file_copy",tooltip:"copy",disabled:!0,click:()=>alert("copy")},{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:()=>alert("edit")},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:"Confirm delete?",click:()=>alert("delete"),badge:{content:1,size:"small"}}]}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)},dependencies:[x],styles:["[_nghost-%COMP%]     .mtx-grid .mat-badge-after .mat-badge-content{right:0}[_nghost-%COMP%]     .mtx-grid .mat-badge-above .mat-badge-content{top:0}"]}),t})(),files:[{file:"app.component.html",content:e(87038),filecontent:e(79448)},{file:"app.component.ts",content:e(88531),filecontent:e(86889)},{file:"app.component.scss",content:e(62540),filecontent:e(25467)}]};var Qe=e(82599);const Ue=["statusTpl"];function ze(t,l){1&t&&(s.TgZ(0,"mat-slide-toggle",2),s._uU(1,"Slide me!"),s.qZA()),2&t&&s.Q6J("checked",l.$implicit.status)}const Ye={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:(()=>{class t{constructor(){this.columns=[],this.list=u}ngOnInit(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],viewQuery:function(n,a){if(1&n&&s.Gf(Ue,7),2&n){let o;s.iGM(o=s.CRH())&&(a.statusTpl=o.first)}},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(n,a){1&n&&(s._UZ(0,"mtx-grid",0),s.YNc(1,ze,2,1,"ng-template",null,1,s.W1O)),2&n&&s.Q6J("data",a.list)("columns",a.columns)},dependencies:[Qe.Rr,x]}),t})(),files:[{file:"app.component.html",content:e(11638),filecontent:e(38922)},{file:"app.component.ts",content:e(16918),filecontent:e(53979)},{file:"app.component.scss",content:e(27067),filecontent:e(49358)}]};function Xe(t,l){if(1&t&&(s.TgZ(0,"button",3),s._uU(1),s.qZA()),2&t){const n=l.$implicit;s.xp6(1),s.Oqu(n.mobile)}}function $e(t,l){if(1&t&&(s.TgZ(0,"button",4),s._uU(1),s.qZA()),2&t){const n=l.$implicit;s.xp6(1),s.Oqu(n.city)}}const Ke=function(t,l){return{mobile:t,city:l}},Ve={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ mobile: mobileTpl, city: cityTpl }"</code>,\n  the key of cellTemplate is the column field.</p>\n  ',component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:5,vars:6,consts:[[3,"data","columns","cellTemplate"],["mobileTpl",""],["cityTpl",""],["mat-raised-button","","color","accent"],["mat-raised-button","","color","primary"]],template:function(n,a){if(1&n&&(s._UZ(0,"mtx-grid",0),s.YNc(1,Xe,2,1,"ng-template",null,1,s.W1O),s.YNc(3,$e,2,1,"ng-template",null,2,s.W1O)),2&n){const o=s.MAs(2),p=s.MAs(4);s.Q6J("data",a.list)("columns",a.columns)("cellTemplate",s.WLB(3,Ke,o,p))}},dependencies:[b.lW,x]}),t})(),files:[{file:"app.component.html",content:e(33086),filecontent:e(43557)},{file:"app.component.ts",content:e(49370),filecontent:e(8597)},{file:"app.component.scss",content:e(38118),filecontent:e(12721)}]},sl={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",formatter:n=>`<span class="label">${n.name}</span>`},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)},dependencies:[x],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),t})(),files:[{file:"app.component.html",content:e(88913),filecontent:e(94445)},{file:"app.component.ts",content:e(53733),filecontent:e(94433)},{file:"app.component.scss",content:e(32720),filecontent:e(9747)}]},nl={title:"No result",description:'\n  <p>You can use <code>[noResultTemplate]="noResultTpl"</code> to customize it.</p>\n  ',component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)},dependencies:[x]}),t})(),files:[{file:"app.component.html",content:e(81656),filecontent:e(60627)},{file:"app.component.ts",content:e(91450),filecontent:e(58445)},{file:"app.component.scss",content:e(13690),filecontent:e(85871)}]};function tl(t,l){if(1&t&&(s._uU(0),s.TgZ(1,"mat-icon",2),s._uU(2,"info"),s.qZA()),2&t){const n=l.$implicit;s.hij(" ",n.header," "),s.xp6(1),s.Q6J("matTooltip",n.description)}}const al={title:"Custom header template",description:"\n  <p>If you just want to append something to header, you can try\n  <code>[headerExtraTemplate]</code> instead.</p>\n  ",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(n,a){if(1&n&&(s._UZ(0,"mtx-grid",0),s.YNc(1,tl,3,2,"ng-template",null,1,s.W1O)),2&n){const o=s.MAs(2);s.Q6J("data",a.list)("columns",a.columns)("headerTemplate",o)}},dependencies:[q.Hw,ts.gM,x]}),t})(),files:[{file:"app.component.html",content:e(21751),filecontent:e(92301)},{file:"app.component.ts",content:e(26921),filecontent:e(97034)},{file:"app.component.scss",content:e(18182),filecontent:e(18503)}]};function el(t,l){if(1&t&&(s.TgZ(0,"div"),s._uU(1),s.ALo(2,"currency"),s.qZA()),2&t){const n=l.$implicit,a=s.oxw();s.xp6(1),s.Oqu(s.lcZ(2,1,a.getTotalCost(n)))}}const ll=function(t){return{cost:t}},ol={title:"Custom footer template",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:n=>Math.max(...n)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=u}getTotalCost(n){return n.reduce((a,o)=>a+o,0)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(n,a){if(1&n&&(s._UZ(0,"mtx-grid",0),s.YNc(1,el,3,3,"ng-template",null,1,s.W1O)),2&n){const o=s.MAs(2);s.Q6J("data",a.list)("columns",a.columns)("showSummary",!0)("summaryTemplate",s.VKq(4,ll,o))}},dependencies:[x,m.H9]}),t})(),files:[{file:"app.component.html",content:e(10575),filecontent:e(82033)},{file:"app.component.ts",content:e(55596),filecontent:e(61510)},{file:"app.component.scss",content:e(9279),filecontent:e(1855)}]};function pl(t,l){1&t&&s._UZ(0,"input",2)}const il={title:"Custom toolbar template",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:n=>Math.max(...n)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(n,a){if(1&n&&(s._UZ(0,"mtx-grid",0),s.YNc(1,pl,1,0,"ng-template",null,1,s.W1O)),2&n){const o=s.MAs(2);s.Q6J("data",a.list)("columns",a.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",o)}},dependencies:[x]}),t})(),files:[{file:"app.component.html",content:e(85847),filecontent:e(15981)},{file:"app.component.ts",content:e(87947),filecontent:e(53185)},{file:"app.component.scss",content:e(53411),filecontent:e(12746)}]};function cl(t,l){if(1&t&&(s.TgZ(0,"mat-radio-button",3),s._uU(1),s.qZA()),2&t){const n=l.$implicit;s.Q6J("value",n.value),s.xp6(1),s.hij(" ",n.label," ")}}const rl={title:"I18n ngx-translate",component:(()=>{class t{constructor(n){this.translate=n,this.columns=[{header:this.translate.stream("name"),field:"name"},{header:this.translate.stream("weight"),field:"weight"},{header:this.translate.stream("gender"),field:"gender"},{header:this.translate.stream("mobile"),field:"mobile"},{header:this.translate.stream("city"),field:"city"},{header:this.translate.stream("operation"),field:"operation",width:"120px",pinned:"right",right:"0px",type:"button",buttons:[{type:"basic",text:this.translate.stream("delete"),icon:"delete",tooltip:this.translate.stream("delete"),color:"warn",pop:{title:this.translate.stream("confirm_delete"),closeText:this.translate.stream("close"),okText:this.translate.stream("ok")},click:()=>alert("delete")}]}],this.list=u,this.columnPinOptions=[{label:this.translate.stream("pin_left"),value:"left"},{label:this.translate.stream("pin_right"),value:"right"},{label:this.translate.stream("no_pin"),value:null}],this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",n.addLangs(this.langs.map(a=>a.value)),n.setDefaultLang(this.defaultlang)}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(Z.sK))},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:3,vars:8,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],[3,"data","columns","showToolbar","columnHideable","columnSortable","columnPinOptions"],[3,"value"]],template:function(n,a){1&n&&(s.TgZ(0,"mat-radio-group",0),s.NdJ("ngModelChange",function(p){return a.defaultlang=p})("change",function(p){return a.translate.use(p.value)}),s.YNc(1,cl,2,2,"mat-radio-button",1),s.qZA(),s._UZ(2,"mtx-grid",2)),2&n&&(s.Q6J("ngModel",a.defaultlang),s.xp6(1),s.Q6J("ngForOf",a.langs),s.xp6(1),s.Q6J("data",a.list)("columns",a.columns)("showToolbar",!0)("columnHideable",!0)("columnSortable",!0)("columnPinOptions",a.columnPinOptions))},dependencies:[m.sg,j.JJ,j.On,G.VQ,G.U0,x],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),t})(),files:[{file:"app.component.html",content:e(47544),filecontent:e(95073)},{file:"app.component.ts",content:e(31102),filecontent:e(31844)},{file:"app.component.scss",content:e(74858),filecontent:e(65896)},{file:"assets/zh-CN.json",content:e(40340),filecontent:e(15215)},{file:"assets/en-US.json",content:e(75497),filecontent:e(61863)}]},dl=function(){return[5,10,20]},hl={title:"Remote Data",component:(()=>{class t{get params(){const n=Object.assign({},this.query);return n.page+=1,n}constructor(n){this.http=n,this.columns=[{header:"Name",field:"name",formatter:a=>`<a href="${a.html_url}" target="_blank">${a.name}</a>`},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}ngOnInit(){this.getList()}getList(){this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe(n=>{this.list=n.items,this.total=n.total_count,this.isLoading=!1},()=>{this.isLoading=!1},()=>{this.isLoading=!1})}getNextPage(n){this.query.page=n.pageIndex,this.query.per_page=n.pageSize,this.getList()}refresh(){this.getList()}reset(){this.query.page=0,this.query.per_page=5,this.getList()}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(U.eN))},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:5,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],["mat-raised-button","","color","warn",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(n,a){1&n&&(s.TgZ(0,"button",0),s.NdJ("click",function(){return a.refresh()}),s._uU(1,"Refresh"),s.qZA(),s.TgZ(2,"button",1),s.NdJ("click",function(){return a.reset()}),s._uU(3,"Reset"),s.qZA(),s.TgZ(4,"mtx-grid",2),s.NdJ("page",function(p){return a.getNextPage(p)}),s.qZA()),2&n&&(s.xp6(4),s.Q6J("data",a.list)("columns",a.columns)("length",a.total)("loading",a.isLoading)("pageOnFront",!1)("pageIndex",a.query.page)("pageSize",a.query.per_page)("pageSizeOptions",s.DdM(8,dl)))},dependencies:[b.lW,x],styles:[".mat-mdc-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),t})(),files:[{file:"app.component.html",content:e(10232),filecontent:e(43466)},{file:"app.component.ts",content:e(4540),filecontent:e(78593)},{file:"app.component.scss",content:e(73145),filecontent:e(44735)}]},ml=function(){return[1,2,5,10]},gl={title:"Column resize",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",minWidth:200,maxWidth:300},{header:"Weight",field:"weight",minWidth:200},{header:"Gender",field:"gender",width:"100px",resizable:!1},{header:"Mobile",field:"mobile",maxWidth:200},{header:"City",field:"city",minWidth:200}],this.list=[...u,...u,...u]}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:5,consts:[[3,"data","columns","columnResizable","pageSizeOptions"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)("columnResizable",!0)("pageSizeOptions",s.DdM(4,ml))},dependencies:[x],styles:["[_nghost-%COMP%]     .mtx-grid{height:280px}"]}),t})(),files:[{file:"app.component.html",content:e(55910),filecontent:e(67454)},{file:"app.component.ts",content:e(50760),filecontent:e(72837)},{file:"app.component.scss",content:e(35145),filecontent:e(33908)}]},ul={title:"Custom class for row and column",component:(()=>{class t{constructor(){this.rowClassFormatter={success:(n,a)=>"Boron"===n.name,danger:(n,a)=>1===a},this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",class:n=>n?.weight>10?"warning":""},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile",class:"info"},{header:"City",field:"city"}],this.list=u}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","rowClassFormatter"]],template:function(n,a){1&n&&s._UZ(0,"mtx-grid",0),2&n&&s.Q6J("data",a.list)("columns",a.columns)("rowClassFormatter",a.rowClassFormatter)},dependencies:[x],styles:["[_nghost-%COMP%]     .mtx-grid .success{background-color:#d1e7dd}[_nghost-%COMP%]     .mtx-grid .danger{background-color:#f8d7da}[_nghost-%COMP%]     .mtx-grid .warning{background-color:#fff3cd}[_nghost-%COMP%]     .mtx-grid .info{background-color:#cff4fc}"]}),t})(),files:[{file:"app.component.html",content:e(81763),filecontent:e(2409)},{file:"app.component.ts",content:e(18235),filecontent:e(55573)},{file:"app.component.scss",content:e(33799),filecontent:e(87341)}]};var hs=e(92438);function xl(t,l){if(1&t&&(s.TgZ(0,"button",5),s._uU(1),s.qZA()),2&t){const n=l.rowData,a=l.index;s.xp6(1),s.AsE("",n.name,", ",a,"")}}const _l={title:"Context Menu",component:(()=>{class t{constructor(){this.columns=[{header:"Name",field:"name",minWidth:200,maxWidth:300},{header:"Weight",field:"weight",minWidth:200},{header:"Gender",field:"gender",width:"100px",resizable:!1},{header:"Mobile",field:"mobile",maxWidth:200},{header:"City",field:"city",minWidth:200}],this.list=u,this.contextMenuPosition={x:"0px",y:"0px"}}onContextMenu(n){const{event:a,rowData:o,index:p}=n;a.preventDefault(),this.contextMenu.closeMenu(),setTimeout(()=>this.contextMenu.openMenu(),this.contextMenu.menuOpen?150:0),this.contextMenuPosition.x=a.clientX+"px",this.contextMenuPosition.y=a.clientY+"px",this.contextMenu.menuData={rowData:o,index:p},this.contextMenu.menu?.focusFirstItem("mouse"),this.closingMenuSubscription=(0,N.T)((0,hs.R)(document,"click"),(0,hs.R)(document,"touchend")).subscribe(h=>{this.contextMenu.closeMenu(),this.closingMenuSubscription.unsubscribe()})}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["data-grid-example"]],viewQuery:function(n,a){if(1&n&&s.Gf(y.p6,5),2&n){let o;s.iGM(o=s.CRH())&&(a.contextMenu=o.first)}},decls:5,vars:8,consts:[[3,"data","columns","rowContextMenu"],[2,"position","fixed","visibility","hidden",3,"matMenuTriggerFor"],[3,"hasBackdrop"],["contextMenu","matMenu"],["matMenuContent",""],["mat-menu-item",""]],template:function(n,a){if(1&n&&(s.TgZ(0,"mtx-grid",0),s.NdJ("rowContextMenu",function(p){return a.onContextMenu(p)}),s.qZA(),s._UZ(1,"div",1),s.TgZ(2,"mat-menu",2,3),s.YNc(4,xl,2,2,"ng-template",4),s.qZA()),2&n){const o=s.MAs(3);s.Q6J("data",a.list)("columns",a.columns),s.xp6(1),s.Udp("left",a.contextMenuPosition.x)("top",a.contextMenuPosition.y),s.Q6J("matMenuTriggerFor",o),s.xp6(1),s.Q6J("hasBackdrop",!1)}},dependencies:[y.VK,y.OP,y.KA,y.p6,x]}),t})(),files:[{file:"app.component.html",content:e(36273),filecontent:e(48063)},{file:"app.component.ts",content:e(49112),filecontent:e(94004)},{file:"app.component.scss",content:e(4481),filecontent:e(1028)}]};var fl=e(1309),jl=e(71629),bl=e(52240);function Cl(t,l){if(1&t&&(s.ynx(0),s._UZ(1,"doc-heading",2)(2,"example-viewer",3),s.BQk()),2&t){const n=l.$implicit;s.xp6(1),s.Q6J("text",n.title),s.xp6(1),s.Q6J("exampleData",n)}}function yl(t,l){if(1&t&&(s.ynx(0),s.YNc(1,Cl,3,2,"ng-container",1),s.BQk()),2&t){const n=l.ngIf;s.xp6(1),s.Q6J("ngForOf",n.examples)}}function Tl(t,l){if(1&t&&(s.ynx(0),s._UZ(1,"doc-viewer",1),s.BQk()),2&t){const n=l.ngIf;s.xp6(1),s.Q6J("textContent",n.content.default)}}function ms(t){return new _s.w(t,"assets/i18n/data-grid/","_json")}let gs=(()=>{class t{constructor(n){this.route=n}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(r.gz))},t.\u0275cmp=s.Xpm({type:t,selectors:[["app-grid-overview"]],decls:7,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(n,a){1&n&&(s.TgZ(0,"p"),s._uU(1," The "),s.TgZ(2,"code"),s._uU(3,"mtx-grid"),s.qZA(),s._uU(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),s.qZA(),s.YNc(5,yl,2,1,"ng-container",0),s.ALo(6,"async")),2&n&&(s.xp6(5),s.Q6J("ngIf",s.lcZ(6,1,a.route.data)))},dependencies:[m.sg,m.O5,fl.Q,jl.B,m.Ov],encapsulation:2}),t})(),us=(()=>{class t{constructor(n){this.route=n}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(r.gz))},t.\u0275cmp=s.Xpm({type:t,selectors:[["app-grid-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(n,a){1&n&&(s.YNc(0,Tl,2,1,"ng-container",0),s.ALo(1,"async")),2&n&&s.Q6J("ngIf",s.lcZ(1,1,a.route.data))},dependencies:[m.O5,bl.z,m.Ov],encapsulation:2}),t})(),wl=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=s.oAB({type:t}),t.\u0275inj=s.cJS({imports:[xs.m8,Z.aw.forRoot({loader:{provide:Z.Zw,useFactory:ms,deps:[U.eN]}}),r.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:gs,pathMatch:"full",data:{examples:[Oe,gl,_l,ke,Le,Ze,Re,Ie,qe,He,We,Je,Ye,Ve,sl,ul,nl,al,ol,il,rl,hl]}},{path:"api",component:us,pathMatch:"full",data:{content:e(67878)}},{path:"**",redirectTo:"overview"}])]}),t})()},65956:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">trackBy</span>]=<span class="hljs-string">&quot;trackByName&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},14180:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideable&quot;</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnSortable&quot;</span>&gt;</span>Column Sorting<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnPinnable&quot;</span>&gt;</span>Column Pinning<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>ColumnHideableChecked:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>Show<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>Hide<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span> #<span class="hljs-attr">grid</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">&quot;&#x27;Data Grid&#x27;&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;columnHideable&quot;</span>\n          [<span class="hljs-attr">columnHideableChecked</span>]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>\n          [<span class="hljs-attr">columnSortable</span>]=<span class="hljs-string">&quot;columnSortable&quot;</span>\n          [<span class="hljs-attr">columnPinnable</span>]=<span class="hljs-string">&quot;columnPinnable&quot;</span>\n          (<span class="hljs-attr">columnChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          [<span class="hljs-attr">showColumnMenuHeader</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuHeaderText</span>]=<span class="hljs-string">&quot;&#x27;Title&#x27;&quot;</span>\n          [<span class="hljs-attr">showColumnMenuFooter</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuFooterTemplate</span>]=<span class="hljs-string">&quot;menuFooter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">menuFooter</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>Save<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;closeMenu()&quot;</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},11520:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},55910:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">columnResizable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[1,2,5,10]&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},36273:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          (<span class="hljs-attr">rowContextMenu</span>)=<span class="hljs-string">&quot;onContextMenu($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Context Menu --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed; visibility: hidden;&quot;</span>\n     [<span class="hljs-attr">style.left</span>]=<span class="hljs-string">&quot;contextMenuPosition.x&quot;</span>\n     [<span class="hljs-attr">style.top</span>]=<span class="hljs-string">&quot;contextMenuPosition.y&quot;</span>\n     [<span class="hljs-attr">matMenuTriggerFor</span>]=<span class="hljs-string">&quot;contextMenu&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-menu</span> #<span class="hljs-attr">contextMenu</span>=<span class="hljs-string">&quot;matMenu&quot;</span> [<span class="hljs-attr">hasBackdrop</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> <span class="hljs-attr">matMenuContent</span> <span class="hljs-attr">let-row</span>=<span class="hljs-string">&quot;rowData&quot;</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-menu-item</span>&gt;</span>{{row.name}}, {{index}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-menu</span>&gt;</span>\n'},33086:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">&quot;{mobile: mobileTpl, city: cityTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">mobileTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;accent&quot;</span>&gt;</span>{{row.mobile}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},11638:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">&quot;row.status&quot;</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},10575:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">&quot;{&#x27;cost&#x27;: footerTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},21751:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">&quot;headerTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">&quot;col.description&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},85847:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">&quot;toolbarTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},88913:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},41355:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">&quot;expansionTpl&quot;</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},66593:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},17869:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowHover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowStriped&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">&quot;rowHover&quot;</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">&quot;rowStriped&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},47544:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnSortable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnPinOptions</span>]=<span class="hljs-string">&quot;columnPinOptions&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},31789:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},81656:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},10232:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;refresh()&quot;</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;warn&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;reset()&quot;</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">&quot;total&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">&quot;query.page&quot;</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">&quot;query.per_page&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[5,10,20]&quot;</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">&quot;getNextPage($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},81763:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowClassFormatter</span>]=<span class="hljs-string">&quot;rowClassFormatter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},33608:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowSelectable&quot;</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiSelectable&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">&quot;multiSelectable&quot;</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;rowSelectable&quot;</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">&quot;rowSelected&quot;</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">&quot;rowSelectionFormatter&quot;</span>\n          (<span class="hljs-attr">rowSelectedChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          (<span class="hljs-attr">cellSelectedChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},87038:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},3964:c=>{c.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">sortOnFront</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortActive</span>=<span class="hljs-string">&quot;name&quot;</span>\n          <span class="hljs-attr">sortDirection</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          [<span class="hljs-attr">sortDisableClear</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">sortDisabled</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          <span class="hljs-attr">sortStart</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},75497:c=>{c.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Name&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;weight&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Weight&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;gender&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Gender&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;mobile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Mobile&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;city&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;City&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;operation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Operation&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;delete&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Delete&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Confirm delete?&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;CLOSE&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;ok&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;OK&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pin_left&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Pin Left&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pin_right&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Pin Right&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;no_pin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;No Pin&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},40340:c=>{c.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u59d3\u540d&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;weight&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u4f53\u91cd&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;gender&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u6027\u522b&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;mobile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u624b\u673a&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;city&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u57ce\u5e02&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;operation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u64cd\u4f5c&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;delete&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u5220\u9664&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u786e\u8ba4\u5220\u9664\uff1f&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u5173\u95ed&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;ok&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pin_left&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u56fa\u5b9a\u5728\u5de6\u4fa7&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pin_right&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u56fa\u5b9a\u5728\u53f3\u4fa7&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;no_pin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u53d6\u6d88\u56fa\u5b9a&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},44407:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},16686:c=>{c.exports='<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span>;\n}\n'},85453:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},35145:c=>{c.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep .mtx-grid {\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">280px</span>;\n}\n'},4481:c=>{c.exports=""},38118:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},27067:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},9279:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},18182:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},53411:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},32720:c=>{c.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep .label {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},62218:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},62856:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},49211:c=>{c.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},74858:c=>{c.exports='<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},97653:c=>{c.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},13690:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},73145:c=>{c.exports='<span class="hljs-selector-class">.mat-mdc-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},33799:c=>{c.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep .mtx-grid {\n  <span class="hljs-selector-class">.success</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#d1e7dd</span>;\n  }\n\n  <span class="hljs-selector-class">.danger</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f8d7da</span>;\n  }\n\n  <span class="hljs-selector-class">.warning</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff3cd</span>;\n  }\n\n  <span class="hljs-selector-class">.info</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#cff4fc</span>;\n  }\n}\n'},55136:c=>{c.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},62540:c=>{c.exports='<span class="hljs-selector-pseudo">:host</span> ::ng-deep {\n  <span class="hljs-selector-class">.mtx-grid</span> {\n    <span class="hljs-selector-class">.mat-badge-after</span> <span class="hljs-selector-class">.mat-badge-content</span> {\n      <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;\n    }\n\n    <span class="hljs-selector-class">.mat-badge-above</span> <span class="hljs-selector-class">.mat-badge-content</span> {\n      <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;\n    }\n  }\n}\n'},11870:c=>{c.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},70988:c=>{c.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-attr">EXAMPLE_DATA</span>: <span class="hljs-built_in">any</span>[] = [\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">10.811</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;B&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;male&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;13198765432&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;567891234&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Berlin&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;Bernauer Str.111,13355&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Boron@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">4</span>,\n  },\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">2</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Helium&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;blue&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">8.0026</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;He&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;female&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;13034676675&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;80675432&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Shanghai&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;88 Songshan Road&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Helium@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">5</span>,\n  },\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">3</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Nitrogen&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;yellow&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">14.0067</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;N&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;male&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;15811112222&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;345678912&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Sydney&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;Circular Quay, Sydney NSW 2000&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Nitrogen@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">2</span>,\n  },\n];\n'},99706:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;number&#x27;</span>,\n      <span class="hljs-attr">typeParameter</span>: {\n        <span class="hljs-attr">digitsInfo</span>: <span class="hljs-string">&#x27;1.2-2&#x27;</span>,\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Date&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-attr">typeParameter</span>: {\n        <span class="hljs-attr">format</span>: <span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>,\n      },\n    },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-title function_">trackByName</span>(<span class="hljs-params">index: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> item.<span class="hljs-property">name</span>;\n  }\n}\n'},31901:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">ViewChild</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span>, <span class="hljs-title class_">MtxGrid</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;grid&#x27;</span>) grid!: <span class="hljs-title class_">MtxGrid</span>;\n\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  columnPinnable = <span class="hljs-literal">false</span>;\n  columnSortable = <span class="hljs-literal">true</span>;\n  columnHideable = <span class="hljs-literal">true</span>;\n  <span class="hljs-attr">columnHideableChecked</span>: <span class="hljs-string">&#x27;show&#x27;</span> | <span class="hljs-string">&#x27;hide&#x27;</span> = <span class="hljs-string">&#x27;show&#x27;</span>;\n\n  <span class="hljs-title function_">closeMenu</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">grid</span>.<span class="hljs-property">columnMenu</span>.<span class="hljs-property">menuTrigger</span>.<span class="hljs-title function_">closeMenu</span>();\n  }\n\n  <span class="hljs-title function_">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n}\n'},14431:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Position&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;position&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;tags&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;tag.0.value&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Symbol&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;symbol&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Tele&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;tele&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Address&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;address&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;date&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Website&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;website&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Company&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;company&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Email&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Status&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},50760:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">300</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;100px&#x27;</span>,\n      <span class="hljs-attr">resizable</span>: <span class="hljs-literal">false</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n  ];\n\n  list = [...<span class="hljs-variable constant_">EXAMPLE_DATA</span>, ...<span class="hljs-variable constant_">EXAMPLE_DATA</span>, ...<span class="hljs-variable constant_">EXAMPLE_DATA</span>];\n}\n'},49112:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">ViewChild</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatMenuTrigger</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/menu&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Observable</span>, <span class="hljs-title class_">Subscription</span>, fromEvent, merge } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;rxjs&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">300</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;100px&#x27;</span>,\n      <span class="hljs-attr">resizable</span>: <span class="hljs-literal">false</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-title class_">MatMenuTrigger</span>) contextMenu!: <span class="hljs-title class_">MatMenuTrigger</span>;\n  contextMenuPosition = { <span class="hljs-attr">x</span>: <span class="hljs-string">&#x27;0px&#x27;</span>, <span class="hljs-attr">y</span>: <span class="hljs-string">&#x27;0px&#x27;</span> };\n  <span class="hljs-keyword">private</span> closingMenuSubscription!: <span class="hljs-title class_">Subscription</span>;\n\n  <span class="hljs-title function_">onContextMenu</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">const</span> { event, rowData, index } = e;\n    event.<span class="hljs-title function_">preventDefault</span>();\n\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenu</span>.<span class="hljs-title function_">closeMenu</span>();\n\n    <span class="hljs-keyword">const</span> timer = <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenu</span>.<span class="hljs-property">menuOpen</span> ? <span class="hljs-number">150</span> : <span class="hljs-number">0</span>;\n    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenu</span>.<span class="hljs-title function_">openMenu</span>(), timer);\n\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenuPosition</span>.<span class="hljs-property">x</span> = event.<span class="hljs-property">clientX</span> + <span class="hljs-string">&#x27;px&#x27;</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenuPosition</span>.<span class="hljs-property">y</span> = event.<span class="hljs-property">clientY</span> + <span class="hljs-string">&#x27;px&#x27;</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenu</span>.<span class="hljs-property">menuData</span> = { rowData, index };\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenu</span>.<span class="hljs-property">menu</span>?.<span class="hljs-title function_">focusFirstItem</span>(<span class="hljs-string">&#x27;mouse&#x27;</span>);\n\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">closingMenuSubscription</span> = <span class="hljs-title function_">merge</span>(\n      <span class="hljs-title function_">fromEvent</span>(<span class="hljs-variable language_">document</span>, <span class="hljs-string">&#x27;click&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-title class_">MouseEvent</span>&gt;,\n      <span class="hljs-title function_">fromEvent</span>(<span class="hljs-variable language_">document</span>, <span class="hljs-string">&#x27;touchend&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-title class_">MouseEvent</span>&gt;\n    ).<span class="hljs-title function_">subscribe</span>(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">contextMenu</span>.<span class="hljs-title function_">closeMenu</span>();\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">closingMenuSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    });\n  }\n}\n'},49370:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},16918:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnInit</span>, <span class="hljs-title class_">ViewChild</span>, <span class="hljs-title class_">TemplateRef</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span> {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;statusTpl&#x27;</span>, { <span class="hljs-attr">static</span>: <span class="hljs-literal">true</span> }) statusTpl!: <span class="hljs-title class_">TemplateRef</span>&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-title function_">ngOnInit</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">columns</span> = [\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Status&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-attr">cellTemplate</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">statusTpl</span> },\n    ];\n  }\n}\n'},55596:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(...data) },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Cost&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-title function_">getTotalCost</span>(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},26921:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},87947:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(...data) },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Cost&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},53733:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class=&quot;label&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},78413:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">showExpand</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-title function_">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n}\n'},13733:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},90935:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},31102:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span>, <span class="hljs-title class_">MtxGridColumnPinOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TranslateService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;name&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;weight&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;gender&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;mobile&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;city&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;operation&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;120px&#x27;</span>,\n      <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span>,\n      <span class="hljs-attr">right</span>: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;basic&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">pop</span>: {\n            <span class="hljs-attr">title</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;confirm_delete&#x27;</span>),\n            <span class="hljs-attr">closeText</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;close&#x27;</span>),\n            <span class="hljs-attr">okText</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          },\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;delete&#x27;</span>),\n        },\n      ],\n    },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-attr">columnPinOptions</span>: <span class="hljs-title class_">MtxGridColumnPinOption</span>[] = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;pin_left&#x27;</span>), <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;pin_right&#x27;</span>), <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;no_pin&#x27;</span>), <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span> },\n  ];\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.<span class="hljs-title function_">addLangs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">langs</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span>));\n    translate.<span class="hljs-title function_">setDefaultLang</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultlang</span>);\n  }\n}\n'},48255:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},91450:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = [];\n}\n'},4540:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnInit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PageEvent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/paginator&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">HttpClient</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common/http&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">${data.html_url}</span>&quot; target=&quot;_blank&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Owner&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;owner.login&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Owner Avatar&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;owner.avatar_url&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;image&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Description&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;description&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;300px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Stars&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;stargazers_count&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Forks&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;forks_count&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Score&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;score&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Issues&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;open_issues&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Language&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;language&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;License&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;license.name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Home Page&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;homepage&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;link&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Is forked&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;fork&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Archived&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;archived&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;tag&#x27;</span>,\n      <span class="hljs-attr">tag</span>: {\n        <span class="hljs-attr">true</span>: { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Yes&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red-100&#x27;</span> },\n        <span class="hljs-attr">false</span>: { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;No&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;green-100&#x27;</span> },\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Created Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;created_at&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Updated Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;updated_at&#x27;</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    <span class="hljs-attr">q</span>: <span class="hljs-string">&#x27;user:nzbin&#x27;</span>,\n    <span class="hljs-attr">page</span>: <span class="hljs-number">0</span>,\n    <span class="hljs-attr">per_page</span>: <span class="hljs-number">5</span>,\n  };\n\n  <span class="hljs-keyword">get</span> <span class="hljs-title function_">params</span>() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>({}, <span class="hljs-variable language_">this</span>.<span class="hljs-property">query</span>);\n    p.<span class="hljs-property">page</span> += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>) {}\n\n  <span class="hljs-title function_">ngOnInit</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getList</span>();\n  }\n\n  <span class="hljs-title function_">getList</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isLoading</span> = <span class="hljs-literal">true</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;https://api.github.com/search/repositories&#x27;</span>, { <span class="hljs-attr">params</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">params</span> }).<span class="hljs-title function_">subscribe</span>(\n      <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">list</span> = res.<span class="hljs-property">items</span>;\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">total</span> = res.<span class="hljs-property">total_count</span>;\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">isLoading</span> = <span class="hljs-literal">false</span>;\n      },\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">isLoading</span> = <span class="hljs-literal">false</span>;\n      },\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">isLoading</span> = <span class="hljs-literal">false</span>;\n      }\n    );\n  }\n\n  <span class="hljs-title function_">getNextPage</span>(<span class="hljs-params">e: PageEvent</span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">query</span>.<span class="hljs-property">page</span> = e.<span class="hljs-property">pageIndex</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">query</span>.<span class="hljs-property">per_page</span> = e.<span class="hljs-property">pageSize</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getList</span>();\n  }\n\n  <span class="hljs-title function_">refresh</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getList</span>();\n  }\n\n  <span class="hljs-title function_">reset</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">query</span>.<span class="hljs-property">page</span> = <span class="hljs-number">0</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">query</span>.<span class="hljs-property">per_page</span> = <span class="hljs-number">5</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getList</span>();\n  }\n}\n'},18235:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span>, <span class="hljs-title class_">MtxGridRowClassFormatter</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">rowClassFormatter</span>: <span class="hljs-title class_">MtxGridRowClassFormatter</span> = {\n    <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> data.<span class="hljs-property">name</span> === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">danger</span>: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> index === <span class="hljs-number">1</span>,\n  };\n\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">class</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> {\n        <span class="hljs-keyword">return</span> data?.<span class="hljs-property">weight</span> &gt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;warning&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span>;\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">class</span>: <span class="hljs-string">&#x27;info&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},31754:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span>, <span class="hljs-title class_">MtxGridRowSelectionFormatter</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = <span class="hljs-variable constant_">EXAMPLE_DATA</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  <span class="hljs-attr">rowSelectionFormatter</span>: <span class="hljs-title class_">MtxGridRowSelectionFormatter</span> = {\n    <span class="hljs-attr">disabled</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.<span class="hljs-property">name</span> === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">hideCheckbox</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.<span class="hljs-property">name</span> === <span class="hljs-string">&#x27;John&#x27;</span>,\n  };\n\n  <span class="hljs-title function_">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n}\n'},88531:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Operation&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;180px&#x27;</span>,\n      <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span>,\n      <span class="hljs-attr">right</span>: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;file_copy&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;copy&#x27;</span>),\n        },\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;Edit&#x27;</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;edit&#x27;</span>),\n        },\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;Delete&#x27;</span>,\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">pop</span>: <span class="hljs-string">&#x27;Confirm delete?&#x27;</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">badge</span>: {\n            <span class="hljs-attr">content</span>: <span class="hljs-number">1</span>,\n            <span class="hljs-attr">size</span>: <span class="hljs-string">&#x27;small&#x27;</span>,\n          },\n        },\n      ],\n    },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n}\n'},57493:c=>{c.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">EXAMPLE_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxGridColumn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/grid&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">MtxGridColumn</span>[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">false</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">sortProp</span>: {\n        <span class="hljs-attr">arrowPosition</span>: <span class="hljs-string">&#x27;before&#x27;</span>,\n        <span class="hljs-attr">disableClear</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">start</span>: <span class="hljs-string">&#x27;desc&#x27;</span>,\n      },\n    },\n  ];\n\n  list = <span class="hljs-variable constant_">EXAMPLE_DATA</span>;\n\n  <span class="hljs-title function_">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n}\n'},67878:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<h1 id="data-grid">Data Grid</h1>\n<h2 id="api-reference-for-material-extensions-grid">API reference for Material Extensions grid</h2>\n<p><code>import { MtxGridModule } from &apos;@ng-matero/extensions/grid&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxgrid"><code>MtxGrid</code></h4>\n<p>Selector: <code>[mtx-grid]</code></p>\n<p>Exported as: <code>mtxGrid</code></p>\n<h5 id="properties">Properties</h5>\n<h6 id="basic">Basic</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>columns: MtxGridColumn[]</code></td>\n<td align="left">The grid&apos;s columns.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>data: any[]</code></td>\n<td align="left">The grid&apos;s data.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>length: number</code></td>\n<td align="left">The total number of the data. Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>loading: boolean</code></td>\n<td align="left">Whether the grid is loading. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>trackBy: TrackByFunction&lt;any&gt;</code></td>\n<td align="left">Tracking function that will be used to check the differences in data changes.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnResizable: boolean</code></td>\n<td align="left">Whether the column is resizable. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>emptyValuePlaceholder: string</code></td>\n<td align="left">Placeholder for the empty value (<code>null</code>, <code>&apos;&apos;</code>, <code>[]</code>). Default is <strong><code>--</code></strong>.</td>\n</tr>\n</tbody></table>\n<h6 id="page">Page</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>pageOnFront: boolean</code></td>\n<td align="left">Whether to paginate the data on front end. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showPaginator: boolean</code></td>\n<td align="left">Whether to show the paginator. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>pageDisabled: boolean</code></td>\n<td align="left">Whether the paginator is disabled. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showFirstLastButtons: boolean</code></td>\n<td align="left">Whether to show the first/last buttons UI to the user. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>pageIndex: number</code></td>\n<td align="left">The zero-based page index of the displayed list of items. Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>pageSize: number</code></td>\n<td align="left">Number of items to display on a page. Default is <strong><code>10</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>pageSizeOptions: number[]</code></td>\n<td align="left">The set of provided page size options to display to the user. Default is <strong><code>[10, 50, 100]</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>hidePageSize: boolean</code></td>\n<td align="left">Whether to hide the page size selection UI from the user. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>page: EventEmitter&lt;PageEvent&gt;</code></td>\n<td align="left">Event emitted when the paginator changes the page size or page index.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>paginationTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the pagination.</td>\n</tr>\n</tbody></table>\n<h6 id="sort">Sort</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>sortOnFront: boolean</code></td>\n<td align="left">Whether to sort the data on front end. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>sortActive: string</code></td>\n<td align="left">The id of the most recently sorted MatSortable.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>sortDirection: SortDirection</code></td>\n<td align="left">The sort direction of the currently active MatSortable.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>sortDisableClear: boolean</code></td>\n<td align="left">Whether to disable the user from clearing the sort by finishing the sort direction cycle. May be overriden by the column&apos;s <code>disableClear</code> in <code>sortProp</code>. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>sortDisabled: boolean</code></td>\n<td align="left">Whether the sort is disabled. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>sortStart: &apos;asc&apos; | &apos;desc&apos;</code></td>\n<td align="left">The direction to set when an MatSortable is initially sorted. May be overriden by the column&apos;s <code>start</code> in <code>sortProp</code>. Default is <strong><code>asc</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>sortChange: EventEmitter&lt;sort&gt;</code></td>\n<td align="left">Event emitted when the user changes either the active sort or sort direction.</td>\n</tr>\n</tbody></table>\n<h6 id="expansion">Expansion</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>expandable: boolean</code></td>\n<td align="left">Whether the row is expandable. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>expansionTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the expandable row.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>expansionChange: EventEmitter&lt;any&gt;</code></td>\n<td align="left">Event emitted when the user toggles the expandable row.</td>\n</tr>\n</tbody></table>\n<h6 id="selection">Selection</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>multiSelectable: boolean</code></td>\n<td align="left">Whether to support multiple row/cell selection. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>multiSelectionWithClick: boolean</code></td>\n<td align="left">Whether the user can select multiple rows with click. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>rowSelectable: boolean</code></td>\n<td align="left">Whether the row is selectable. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>rowSelected: any[]</code></td>\n<td align="left">The selected row items. Default is <strong><code>[]</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>hideRowSelectionCheckbox: boolean</code></td>\n<td align="left">Whether to hide the row selection checkbox. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>disableRowClickSelection: boolean</code></td>\n<td align="left">Whether disable rows to be selected when clicked. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>rowSelectionFormatter: MtxGridRowSelectionFormatter</code></td>\n<td align="left">The formatter to disable the row selection or hide the row&apos;s checkbox.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>rowClassFormatter: MtxGridRowClassFormatter</code></td>\n<td align="left">The formatter to set the row&apos;s class.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>rowSelectedChange: EventEmitter&lt;any&gt;</code></td>\n<td align="left">Event emitted when the row is selected.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>cellSelectable: boolean</code></td>\n<td align="left">Whether the cell is selectable. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>cellSelectedChange: EventEmitter&lt;any&gt;</code></td>\n<td align="left">Event emitted when the cell is selected.</td>\n</tr>\n</tbody></table>\n<h6 id="toolbar">Toolbar</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>showToolbar: boolean</code></td>\n<td align="left">Whether to show the toolbar. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>toolbarTitle: string</code></td>\n<td align="left">The text of the toolbar&apos;s title. Default is <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>toolbarTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the toolbar .</td>\n</tr>\n</tbody></table>\n<h6 id="column-menu">Column menu</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>columnHideable: boolean</code></td>\n<td align="left">Whether the column is hideable. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnHideableChecked: &apos;show&apos; | &apos;hide&apos;</code></td>\n<td align="left">Hide or show when the column&apos;s checkbox is checked. Default is <strong><code>&apos;show&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnSortable: boolean</code></td>\n<td align="left">Whether the column is sortable. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnPinnable: boolean</code></td>\n<td align="left">Whether the column is pinnable. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>columnChange: EventEmitter&lt;string[]&gt;</code></td>\n<td align="left">Event emitted when the column is hided or is sorted.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showColumnMenuHeader: boolean</code></td>\n<td align="left">Whether to show the column-menu&apos;s header. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuHeaderText: string</code></td>\n<td align="left">The text for the column-menu&apos;s header. Default is <strong><code>&apos;Columns Header&apos;</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuHeaderTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the column-menu&apos;s header.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showColumnMenuFooter: boolean</code></td>\n<td align="left">Whether to show the column-menu&apos;s footer. Default is <strong><code>false</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuFooterText: string</code></td>\n<td align="left">The text for the column-menu&apos;s footer. Default is <strong><code>&apos;Columns Footer&apos;</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuFooterTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the column-menu&apos;s footer.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showColumnMenuButton: boolean</code></td>\n<td align="left">Whether to show the column menu button. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuButtonText: string</code></td>\n<td align="left">The text for the column menu button. Default is <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuButtonType: MtxGridButtonType</code></td>\n<td align="left">The type for the column menu button. Default is <strong><code>&apos;stroked&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuButtonColor: string</code></td>\n<td align="left">The color for the column menu button. Default is <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuButtonClass: string</code></td>\n<td align="left">The class for the column menu button. Default is <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnMenuButtonIcon: string</code></td>\n<td align="left">The icon for the column menu button. Default is <strong><code>&apos;&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>columnPinOptions: MtxGridColumnPinOption[]</code></td>\n<td align="left">The options for the column pin list.</td>\n</tr>\n</tbody></table>\n<h6 id="row">Row</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>rowHover: boolean</code></td>\n<td align="left">Whether to use the row hover style. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>rowStriped: boolean</code></td>\n<td align="left">Whether to use the row striped style. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>rowClick: EventEmitter&lt;any&gt;;</code></td>\n<td align="left">Event emitted when the user clicks the row.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>rowContextMenu: EventEmitter&lt;any&gt;;</code></td>\n<td align="left">Event emitted when the user attempts to open a context menu.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>useContentRowTemplate: boolean</code></td>\n<td align="left">Whether to use custom row template. If true, you should define a <code>matRowDef</code>. Default is <strong><code>false</code></strong>.</td>\n</tr>\n</tbody></table>\n<h6 id="cell-templates">Cell templates</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>headerTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The header&apos;s cell template for the grid.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>headerExtraTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The header&apos;s cell template for the grid exclude sort.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>cellTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The cell template for the grid.</td>\n</tr>\n</tbody></table>\n<h6 id="summary">Summary</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>showSummary: boolean</code></td>\n<td align="left">Whether to show the summary. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>summaryTemplate: TemplateRef&lt;any&gt; | MtxGridCellTemplate</code></td>\n<td align="left">The template for the summary .</td>\n</tr>\n</tbody></table>\n<h6 id="no-result">No result</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>noResultText: string</code></td>\n<td align="left">The displayed text for the empty data. Default is <strong><code>&apos;No records found&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>noResultTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the empty data.</td>\n</tr>\n</tbody></table>\n<h6 id="sidebar">Sidebar</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>showSidebar: boolean</code></td>\n<td align="left">Whether to show the sidebar. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>sidebarTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the sidebar.</td>\n</tr>\n</tbody></table>\n<h6 id="status-bar">Status bar</h6>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>showStatusbar: boolean</code></td>\n<td align="left">Whether to show the status bar. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>statusbarTemplate: TemplateRef&lt;any&gt;</code></td>\n<td align="left">The template for the status bar .</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxgridcolumn"><code>MtxGridColumn</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumn</span>&lt;T = <span class="hljs-built_in">any</span>&gt; {\n  <span class="hljs-attr">field</span>: <span class="hljs-built_in">string</span>;\n  header?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  hide?: <span class="hljs-built_in">boolean</span>;\n  show?: <span class="hljs-built_in">boolean</span>;\n  disabled?: <span class="hljs-built_in">boolean</span>;\n  pinned?: <span class="hljs-title class_">MtxGridColumnPinValue</span>;\n  left?: <span class="hljs-built_in">string</span>;\n  right?: <span class="hljs-built_in">string</span>;\n  width?: <span class="hljs-built_in">string</span>;\n  resizable?: <span class="hljs-built_in">boolean</span>;\n  minWidth?: <span class="hljs-built_in">number</span>;\n  maxWidth?: <span class="hljs-built_in">number</span>;\n  sortable?: <span class="hljs-built_in">boolean</span> | <span class="hljs-built_in">string</span>;\n  sortProp?: <span class="hljs-title class_">MtxGridSortProp</span>;\n  <span class="hljs-keyword">type</span>?: <span class="hljs-title class_">MtxGridColumnType</span>;\n  typeParameter?: <span class="hljs-title class_">MtxGridColumnTypeParameter</span>;\n  tag?: <span class="hljs-title class_">MtxGridColumnTag</span>;\n  buttons?: <span class="hljs-title class_">MtxGridColumnButton</span>&lt;T&gt;[] | (<span class="hljs-function">(<span class="hljs-params">rowData: T</span>) =&gt;</span> <span class="hljs-title class_">MtxGridColumnButton</span>&lt;T&gt;[]);\n  formatter?: <span class="hljs-function">(<span class="hljs-params">rowData: T, colDef?: MtxGridColumn</span>) =&gt;</span> <span class="hljs-built_in">any</span>;\n  cellTemplate?: <span class="hljs-title class_">TemplateRef</span>&lt;<span class="hljs-built_in">any</span>&gt; | <span class="hljs-literal">null</span>;\n  showExpand?: <span class="hljs-built_in">boolean</span>;\n  description?: <span class="hljs-built_in">string</span>;\n  summary?: (<span class="hljs-function">(<span class="hljs-params">data: T[], colDef?: MtxGridColumn</span>) =&gt;</span> <span class="hljs-built_in">any</span>) | <span class="hljs-built_in">string</span>;\n  <span class="hljs-keyword">class</span>?: <span class="hljs-built_in">string</span> | (<span class="hljs-function">(<span class="hljs-params">rowData?: T, colDef?: MtxGridColumn</span>) =&gt;</span> <span class="hljs-built_in">string</span>);\n}\n</pre>\n<h4 id="mtxgridcolumnpinoption"><code>MtxGridColumnPinOption</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnPinOption</span> {\n  <span class="hljs-attr">label</span>: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  <span class="hljs-attr">value</span>: <span class="hljs-title class_">MtxGridColumnPinValue</span>;\n}\n</pre>\n<h4 id="mtxgridcolumntypeparameter"><code>MtxGridColumnTypeParameter</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnTypeParameter</span> {\n  currencyCode?: <span class="hljs-built_in">string</span>;\n  display?: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">boolean</span>;\n  digitsInfo?: <span class="hljs-built_in">string</span>;\n  format?: <span class="hljs-built_in">string</span>;\n  locale?: <span class="hljs-built_in">string</span>;\n  timezone?: <span class="hljs-built_in">string</span>;\n}\n</pre>\n<h4 id="mtxgridsortprop"><code>MtxGridSortProp</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridSortProp</span> {\n  arrowPosition?: <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n  disableClear?: <span class="hljs-built_in">boolean</span>;\n  id?: <span class="hljs-built_in">string</span>;\n  start?: <span class="hljs-string">&apos;asc&apos;</span> | <span class="hljs-string">&apos;desc&apos;</span>;\n}\n</pre>\n<h4 id="mtxgridcolumnbutton"><code>MtxGridColumnButton</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnButton</span>&lt;T = <span class="hljs-built_in">any</span>&gt; {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-title class_">MtxGridButtonType</span>;\n  text?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  icon?: <span class="hljs-built_in">string</span>;\n  color?: <span class="hljs-title class_">ThemePalette</span>;\n  <span class="hljs-keyword">class</span>?: <span class="hljs-built_in">string</span>;\n  disabled?: <span class="hljs-built_in">boolean</span> | (<span class="hljs-function">(<span class="hljs-params">rowData: T</span>) =&gt;</span> <span class="hljs-built_in">boolean</span>);\n  click?: <span class="hljs-function">(<span class="hljs-params">rowData: T</span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n  iif?: <span class="hljs-function">(<span class="hljs-params">rowData: T</span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n  pop?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt; | <span class="hljs-title class_">MtxGridColumnButtonPop</span>;\n  tooltip?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt; | <span class="hljs-title class_">MtxGridColumnButtonTooltip</span>;\n  badge?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt; | <span class="hljs-title class_">MtxGridColumnButtonBadge</span>;\n}\n</pre>\n<h4 id="mtxgridcolumnbuttonpop"><code>MtxGridColumnButtonPop</code></h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnButtonPop</span> {\n  <span class="hljs-attr">title</span>: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  description?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  okColor?: <span class="hljs-title class_">ThemePalette</span>;\n  okText?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  closeColor?: <span class="hljs-title class_">ThemePalette</span>;\n  closeText?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n}\n</pre>\n<h4 id="mtxgridcolumnbuttontooltip"><code>MtxGridColumnButtonTooltip</code></h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnButtonTooltip</span> {\n  <span class="hljs-attr">message</span>: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  position?: <span class="hljs-title class_">TooltipPosition</span>;\n  positionAtOrigin?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-keyword">class</span>?: <span class="hljs-built_in">any</span>;\n  hideDelay?: <span class="hljs-built_in">number</span>;\n  showDelay?: <span class="hljs-built_in">number</span>;\n  touchGestures?: <span class="hljs-title class_">TooltipTouchGestures</span>;\n  disabled?: <span class="hljs-built_in">boolean</span>;\n}\n</pre>\n<h4 id="mtxgridcolumnbuttonbadge"><code>MtxGridColumnButtonBadge</code></h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnButtonBadge</span> {\n  <span class="hljs-attr">content</span>: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  description?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  color?: <span class="hljs-title class_">ThemePalette</span>;\n  position?: <span class="hljs-title class_">MatBadgePosition</span>;\n  size?: <span class="hljs-title class_">MatBadgeSize</span>;\n  overlap?: <span class="hljs-built_in">boolean</span>;\n  disabled?: <span class="hljs-built_in">boolean</span>;\n  hidden?: <span class="hljs-built_in">boolean</span>;\n}\n</pre>\n<h4 id="mtxgridcolumntag"><code>MtxGridColumnTag</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnTag</span> {\n  [<span class="hljs-attr">key</span>: <span class="hljs-built_in">number</span>]: <span class="hljs-title class_">MtxGridColumnTagValue</span>;\n  [<span class="hljs-attr">key</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-title class_">MtxGridColumnTagValue</span>;\n}\n</pre>\n<h4 id="mtxgridcolumntagvalue"><code>MtxGridColumnTagValue</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridColumnTagValue</span> {\n  text?: <span class="hljs-built_in">string</span>;\n  color?: <span class="hljs-built_in">string</span>;\n}\n</pre>\n<h4 id="mtxgridrowselectionformatter"><code>MtxGridRowSelectionFormatter</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridRowSelectionFormatter</span>&lt;T = <span class="hljs-built_in">any</span>&gt; {\n  disabled?: <span class="hljs-function">(<span class="hljs-params">rowData: T, index: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n  hideCheckbox?: <span class="hljs-function">(<span class="hljs-params">rowData: T, index: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n}\n</pre>\n<h4 id="mtxgridrowclassformatter"><code>MtxGridRowClassFormatter</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridRowClassFormatter</span>&lt;T = <span class="hljs-built_in">any</span>&gt; {\n  [<span class="hljs-attr">className</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-function">(<span class="hljs-params">rowData: T, index: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">boolean</span>;\n}\n</pre>\n<h4 id="mtxgriddefaultoptions"><code>MtxGridDefaultOptions</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxGridDefaultOptions</span> {\n  columnResizable?: <span class="hljs-built_in">boolean</span>;\n  emptyValuePlaceholder?: <span class="hljs-built_in">string</span>;\n\n  pageOnFront?: <span class="hljs-built_in">boolean</span>;\n  showPaginator?: <span class="hljs-built_in">boolean</span>;\n  pageDisabled?: <span class="hljs-built_in">boolean</span>;\n  showFirstLastButtons?: <span class="hljs-built_in">boolean</span>;\n  pageIndex?: <span class="hljs-built_in">number</span>;\n  pageSize?: <span class="hljs-built_in">number</span>;\n  pageSizeOptions?: <span class="hljs-built_in">number</span>[];\n  hidePageSize?: <span class="hljs-built_in">boolean</span>;\n\n  sortOnFront?: <span class="hljs-built_in">boolean</span>;\n  sortActive?: <span class="hljs-built_in">string</span>;\n  sortDirection?: <span class="hljs-title class_">SortDirection</span>;\n  sortDisableClear?: <span class="hljs-built_in">boolean</span>;\n  sortDisabled?: <span class="hljs-built_in">boolean</span>;\n  sortStart?: <span class="hljs-string">&apos;asc&apos;</span> | <span class="hljs-string">&apos;desc&apos;</span>;\n\n  rowHover?: <span class="hljs-built_in">boolean</span>;\n  rowStriped?: <span class="hljs-built_in">boolean</span>;\n\n  multiSelectable?: <span class="hljs-built_in">boolean</span>;\n  multiSelectionWithClick?: <span class="hljs-built_in">boolean</span>;\n  rowSelectable?: <span class="hljs-built_in">boolean</span>;\n  hideRowSelectionCheckbox?: <span class="hljs-built_in">boolean</span>;\n  disableRowClickSelection?: <span class="hljs-built_in">boolean</span>;\n\n  cellSelectable?: <span class="hljs-built_in">boolean</span>;\n\n  showToolbar?: <span class="hljs-built_in">boolean</span>;\n  toolbarTitle?: <span class="hljs-built_in">string</span>;\n\n  columnHideable?: <span class="hljs-built_in">boolean</span>;\n  columnHideableChecked?: <span class="hljs-string">&apos;show&apos;</span> | <span class="hljs-string">&apos;hide&apos;</span>;\n  columnSortable?: <span class="hljs-built_in">boolean</span>;\n  columnPinnable?: <span class="hljs-built_in">boolean</span>;\n  columnPinOptions?: <span class="hljs-title class_">MtxGridColumnPinOption</span>[];\n\n  showColumnMenuButton?: <span class="hljs-built_in">boolean</span>;\n  columnMenuButtonText?: <span class="hljs-built_in">string</span>;\n  columnMenuButtonType?: <span class="hljs-title class_">MtxGridButtonType</span>;\n  columnMenuButtonColor?: <span class="hljs-title class_">ThemePalette</span>;\n  columnMenuButtonClass?: <span class="hljs-built_in">string</span>;\n  columnMenuButtonIcon?: <span class="hljs-built_in">string</span>;\n\n  showColumnMenuHeader?: <span class="hljs-built_in">boolean</span>;\n  columnMenuHeaderText?: <span class="hljs-built_in">string</span>;\n  showColumnMenuFooter?: <span class="hljs-built_in">boolean</span>;\n  columnMenuFooterText?: <span class="hljs-built_in">string</span>;\n\n  noResultText?: <span class="hljs-built_in">string</span>;\n}\n</pre>\n<h3 id="type-aliases">Type aliases</h3>\n<h4 id="mtxgridcolumntype"><code>MtxGridColumnType</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxGridColumnType</span> = <span class="hljs-string">&apos;tag&apos;</span> | <span class="hljs-string">&apos;button&apos;</span> | <span class="hljs-string">&apos;link&apos;</span> | <span class="hljs-string">&apos;image&apos;</span> | <span class="hljs-string">&apos;boolean&apos;</span> | <span class="hljs-string">&apos;number&apos;</span> | <span class="hljs-string">&apos;currency&apos;</span> | <span class="hljs-string">&apos;percent&apos;</span> | <span class="hljs-string">&apos;date&apos;</span>;\n</pre>\n<h4 id="mtxgridcolumnpinvalue"><code>MtxGridColumnPinValue</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxGridColumnPinValue</span> = <span class="hljs-string">&apos;left&apos;</span> | <span class="hljs-string">&apos;right&apos;</span> | <span class="hljs-literal">null</span>;\n</pre>\n<h4 id="mtxgridbuttontype"><code>MtxGridButtonType</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxGridButtonType</span> = <span class="hljs-string">&apos;basic&apos;</span> | <span class="hljs-string">&apos;raised&apos;</span> | <span class="hljs-string">&apos;stroked&apos;</span> | <span class="hljs-string">&apos;flat&apos;</span> | <span class="hljs-string">&apos;icon&apos;</span> | <span class="hljs-string">&apos;fab&apos;</span> | <span class="hljs-string">&apos;mini-fab&apos;</span>;\n</pre>\n<h3 id="constants">Constants</h3>\n<h4 id="mtx_grid_default_options"><code>MTX_GRID_DEFAULT_OPTIONS</code></h4>\n<p>Injection token that can be used to specify default grid options.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_GRID_DEFAULT_OPTIONS</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">MtxGridDefaultOptions</span>&gt;;\n</pre>\n'},6407:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4,\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5,\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2,\n  },\n];\n"},63202:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [trackBy]="trackByName">\n</mtx-grid>\n'},95715:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},22278:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      type: 'number',\n      typeParameter: {\n        digitsInfo: '1.2-2',\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Date',\n      field: 'date',\n      type: 'date',\n      typeParameter: {\n        format: 'yyyy-MM-dd',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: number, item: any) {\n    return item.name;\n  }\n}\n"},66184:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnSortable">Column Sorting</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnPinnable">Column Pinning</mat-checkbox>\n\n  <label>ColumnHideableChecked:</label>\n  <mat-radio-group [(ngModel)]="columnHideableChecked">\n    <mat-radio-button value="show">Show</mat-radio-button>\n    <mat-radio-button value="hide">Hide</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list" #grid\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnHideableChecked]="columnHideableChecked"\n          [columnSortable]="columnSortable"\n          [columnPinnable]="columnPinnable"\n          (columnChange)="log($event)"\n          [showColumnMenuHeader]="true"\n          [columnMenuHeaderText]="\'Title\'"\n          [showColumnMenuFooter]="true"\n          [columnMenuFooterTemplate]="menuFooter">\n</mtx-grid>\n\n<ng-template #menuFooter>\n  <button>Save</button>\n  <button (click)="closeMenu()">Close</button>\n</ng-template>\n'},35959:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="label {\n  padding: 0 8px;\n}\n"},21386:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component, ViewChild } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGrid } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  @ViewChild('grid') grid!: MtxGrid;\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnPinnable = false;\n  columnSortable = true;\n  columnHideable = true;\n  columnHideableChecked: 'show' | 'hide' = 'show';\n\n  closeMenu() {\n    this.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},78717:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true">\n</mtx-grid>\n'},41738:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},83040:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},67454:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [columnResizable]="true"\n          [pageSizeOptions]="[1,2,5,10]">\n</mtx-grid>\n'},33908:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=":host ::ng-deep .mtx-grid {\n  height: 280px;\n}\n"},72837:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      minWidth: 200,\n      maxWidth: 300,\n    },\n    {\n      header: 'Weight',\n      field: 'weight',\n      minWidth: 200,\n    },\n    {\n      header: 'Gender',\n      field: 'gender',\n      width: '100px',\n      resizable: false,\n    },\n    {\n      header: 'Mobile',\n      field: 'mobile',\n      maxWidth: 200,\n    },\n    {\n      header: 'City',\n      field: 'city',\n      minWidth: 200,\n    },\n  ];\n\n  list = [...EXAMPLE_DATA, ...EXAMPLE_DATA, ...EXAMPLE_DATA];\n}\n"},48063:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          (rowContextMenu)="onContextMenu($event)">\n</mtx-grid>\n\n\x3c!-- Context Menu --\x3e\n<div style="position: fixed; visibility: hidden;"\n     [style.left]="contextMenuPosition.x"\n     [style.top]="contextMenuPosition.y"\n     [matMenuTriggerFor]="contextMenu">\n</div>\n<mat-menu #contextMenu="matMenu" [hasBackdrop]="false">\n  <ng-template matMenuContent let-row="rowData" let-index="index">\n    <button mat-menu-item>{{row.name}}, {{index}}</button>\n  </ng-template>\n</mat-menu>\n'},1028:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=""},94004:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\nimport { EXAMPLE_DATA } from '../../data';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      minWidth: 200,\n      maxWidth: 300,\n    },\n    {\n      header: 'Weight',\n      field: 'weight',\n      minWidth: 200,\n    },\n    {\n      header: 'Gender',\n      field: 'gender',\n      width: '100px',\n      resizable: false,\n    },\n    {\n      header: 'Mobile',\n      field: 'mobile',\n      maxWidth: 200,\n    },\n    {\n      header: 'City',\n      field: 'city',\n      minWidth: 200,\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  @ViewChild(MatMenuTrigger) contextMenu!: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n  private closingMenuSubscription!: Subscription;\n\n  onContextMenu(e: any) {\n    const { event, rowData, index } = e;\n    event.preventDefault();\n\n    this.contextMenu.closeMenu();\n\n    const timer = this.contextMenu.menuOpen ? 150 : 0;\n    setTimeout(() => this.contextMenu.openMenu(), timer);\n\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { rowData, index };\n    this.contextMenu.menu?.focusFirstItem('mouse');\n\n    this.closingMenuSubscription = merge(\n      fromEvent(document, 'click') as Observable<MouseEvent>,\n      fromEvent(document, 'touchend') as Observable<MouseEvent>\n    ).subscribe(_ => {\n      this.contextMenu.closeMenu();\n      this.closingMenuSubscription.unsubscribe();\n    });\n  }\n}\n"},43557:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{mobile: mobileTpl, city: cityTpl}">\n</mtx-grid>\n\n<ng-template #mobileTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="accent">{{row.mobile}}</button>\n</ng-template>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},12721:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},8597:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},38922:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},49358:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},53979:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl!: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},82033:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},1855:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},61510:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},92301:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},18503:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},97034:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},15981:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},12746:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},53185:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},94445:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},9747:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},94433:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},20310:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},37498:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},2450:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},46295:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},36598:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},93237:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},64392:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped"\n          [rowSelectable]="true">\n</mtx-grid>\n'},1009:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},92869:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},95073:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [columnHideable]="true"\n          [columnSortable]="true"\n          [columnPinOptions]="columnPinOptions">\n</mtx-grid>\n'},65896:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=".mat-radio-button {\n  margin: 0 1rem 1rem 0;\n}\n"},31844:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridColumnPinOption } from '@ng-matero/extensions/grid';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('name'),\n      field: 'name',\n    },\n    {\n      header: this.translate.stream('weight'),\n      field: 'weight',\n    },\n    {\n      header: this.translate.stream('gender'),\n      field: 'gender',\n    },\n    {\n      header: this.translate.stream('mobile'),\n      field: 'mobile',\n    },\n    {\n      header: this.translate.stream('city'),\n      field: 'city',\n    },\n    {\n      header: this.translate.stream('operation'),\n      field: 'operation',\n      width: '120px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'basic',\n          text: this.translate.stream('delete'),\n          icon: 'delete',\n          tooltip: this.translate.stream('delete'),\n          color: 'warn',\n          pop: {\n            title: this.translate.stream('confirm_delete'),\n            closeText: this.translate.stream('close'),\n            okText: this.translate.stream('ok'),\n          },\n          click: () => alert('delete'),\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnPinOptions: MtxGridColumnPinOption[] = [\n    { label: this.translate.stream('pin_left'), value: 'left' },\n    { label: this.translate.stream('pin_right'), value: 'right' },\n    { label: this.translate.stream('no_pin'), value: null },\n  ];\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},21071:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},260:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},46717:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},60627:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},85871:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},58445:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},43466:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n<button mat-raised-button color="warn" (click)="reset()">Reset</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},44735:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=".mat-mdc-raised-button {\n  margin-bottom: 1rem;\n}\n"},78593:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getList();\n  }\n\n  getList() {\n    this.isLoading = true;\n    this.http.get('https://api.github.com/search/repositories', { params: this.params }).subscribe(\n      (res: any) => {\n        this.list = res.items;\n        this.total = res.total_count;\n        this.isLoading = false;\n      },\n      () => {\n        this.isLoading = false;\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getList();\n  }\n\n  refresh() {\n    this.getList();\n  }\n\n  reset() {\n    this.query.page = 0;\n    this.query.per_page = 5;\n    this.getList();\n  }\n}\n"},2409:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowClassFormatter]="rowClassFormatter">\n</mtx-grid>\n'},87341:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=":host ::ng-deep .mtx-grid {\n  .success {\n    background-color: #d1e7dd;\n  }\n\n  .danger {\n    background-color: #f8d7da;\n  }\n\n  .warning {\n    background-color: #fff3cd;\n  }\n\n  .info {\n    background-color: #cff4fc;\n  }\n}\n"},55573:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowClassFormatter } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  rowClassFormatter: MtxGridRowClassFormatter = {\n    success: (data, index) => data.name === 'Boron',\n    danger: (data, index) => index === 1,\n  };\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      class: data => {\n        return data?.weight > 10 ? 'warning' : '';\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile', class: 'info' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},79425:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectedChange)="log($event)"\n          (cellSelectedChange)="log($event)">\n</mtx-grid>\n'},95789:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},27331:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},79448:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},25467:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r=":host ::ng-deep {\n  .mtx-grid {\n    .mat-badge-after .mat-badge-content {\n      right: 0;\n    }\n\n    .mat-badge-above .mat-badge-content {\n      top: 0;\n    }\n  }\n}\n"},86889:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '180px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'copy',\n          icon: 'file_copy',\n          tooltip: 'copy',\n          disabled: true,\n          click: () => alert('copy'),\n        },\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => alert('edit'),\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: 'Confirm delete?',\n          click: () => alert('delete'),\n          badge: {\n            content: 1,\n            size: 'small',\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},85326:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='<mtx-grid [data]="list"\n          [columns]="columns"\n          [sortOnFront]="true"\n          sortActive="name"\n          sortDirection="asc"\n          [sortDisableClear]="true"\n          [sortDisabled]="false"\n          sortStart="asc"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},86499:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="/** No CSS for this example */\n"},56805:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions/grid';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: false },\n    {\n      header: 'City',\n      field: 'city',\n      sortable: true,\n      sortProp: {\n        arrowPosition: 'before',\n        disableClear: true,\n        start: 'desc',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},61863:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='{\n  "name": "Name",\n  "weight": "Weight",\n  "gender": "Gender",\n  "mobile": "Mobile",\n  "city": "City",\n  "operation": "Operation",\n  "delete": "Delete",\n  "confirm_delete": "Confirm delete?",\n  "close": "CLOSE",\n  "ok": "OK",\n  "pin_left": "Pin Left",\n  "pin_right": "Pin Right",\n  "no_pin": "No Pin"\n}\n'},15215:(c,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>r});const r='{\n  "name": "\u59d3\u540d",\n  "weight": "\u4f53\u91cd",\n  "gender": "\u6027\u522b",\n  "mobile": "\u624b\u673a",\n  "city": "\u57ce\u5e02",\n  "operation": "\u64cd\u4f5c",\n  "delete": "\u5220\u9664",\n  "confirm_delete": "\u786e\u8ba4\u5220\u9664\uff1f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a",\n  "pin_left": "\u56fa\u5b9a\u5728\u5de6\u4fa7",\n  "pin_right": "\u56fa\u5b9a\u5728\u53f3\u4fa7",\n  "no_pin": "\u53d6\u6d88\u56fa\u5b9a"\n}\n'}}]);