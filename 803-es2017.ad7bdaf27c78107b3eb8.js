(self.webpackChunkextensions_srcs=self.webpackChunkextensions_srcs||[]).push([[803],{14803:function(s,n,a){"use strict";a.r(n),a.d(n,{DialogApiComponent:function(){return Z},DialogModule:function(){return I},DialogOverviewComponent:function(){return A},TranslateHttpLoaderFactory:function(){return M}});var t=a(63423),l=a(52578),p=a(32472),e=a(91841),o=a(29790),i=a(37716),c=a(13084),r=a(51095);const h={title:"Basic confirmation",component:(()=>{class s{constructor(s){this.mtxDialog=s}alert(){this.mtxDialog.alert("My name is Zongbin!","",()=>{this.mtxDialog.alert("Glad to meet you!")})}confirm(){this.mtxDialog.confirm("What's your name?","",()=>{this.mtxDialog.alert("Hi, Zongbin!")},()=>{this.mtxDialog.alert("I don't know.")})}open(){this.mtxDialog.open({title:"This is the title",description:"You can write some messages here.",showCloseIcon:!0,buttons:[{text:"CLOSE",onClick:()=>{this.mtxDialog.alert("You click Close button.")}},{color:"primary",text:"VIEW",onClick:()=>{this.mtxDialog.alert("You click View button.")}},{color:"warn",text:"OK",focusInitial:!0,onClick:()=>{this.mtxDialog.alert("You click Ok button.")}}]})}}return s.\u0275fac=function(n){return new(n||s)(i.Y36(c.cP))},s.\u0275cmp=i.Xpm({type:s,selectors:[["dialog-example"]],decls:6,vars:0,consts:[["mat-raised-button","","color","warn",3,"click"],["mat-raised-button","","color","accent",3,"click"],["mat-raised-button","","color","primary",3,"click"]],template:function(s,n){1&s&&(i.TgZ(0,"button",0),i.NdJ("click",function(){return n.alert()}),i._uU(1,"Alert"),i.qZA(),i.TgZ(2,"button",1),i.NdJ("click",function(){return n.confirm()}),i._uU(3,"Confirm"),i.qZA(),i.TgZ(4,"button",2),i.NdJ("click",function(){return n.open()}),i._uU(5,"Open Dialog"),i.qZA())},directives:[r.lW],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin:0 .5em}"]}),s})(),files:[{file:"app.component.html",content:a(71548),filecontent:a(27302)},{file:"app.component.ts",content:a(70557),filecontent:a(65631)},{file:"app.component.scss",content:a(48916),filecontent:a(12802)}]};var g=a(22238),u=a(38583),j=a(98295),m=a(49983),d=a(3679);function f(s,n){if(1&s&&(i.TgZ(0,"div"),i._uU(1," You chose: "),i.TgZ(2,"strong"),i._uU(3),i.qZA(),i.qZA()),2&s){const s=i.oxw();i.xp6(3),i.Oqu(s.animal)}}let x=(()=>{class s{constructor(s){this.mtxDialog=s}openOriginal(){this.mtxDialog.originalOpen(b,{width:"550px",data:{name:"nzbin",animal:"panda"}}).afterClosed().subscribe(s=>{console.log("The dialog was closed"),this.animal=s})}}return s.\u0275fac=function(n){return new(n||s)(i.Y36(c.cP))},s.\u0275cmp=i.Xpm({type:s,selectors:[["dialog-example"]],decls:3,vars:1,consts:[["mat-raised-button","",3,"click"],[4,"ngIf"]],template:function(s,n){1&s&&(i.TgZ(0,"button",0),i.NdJ("click",function(){return n.openOriginal()}),i._uU(1,"Open Original Dialog"),i.qZA(),i.YNc(2,f,4,1,"div",1)),2&s&&(i.xp6(2),i.Q6J("ngIf",n.animal))},directives:[r.lW,u.O5],styles:["div[_ngcontent-%COMP%]{padding:1em}"]}),s})(),b=(()=>{class s{constructor(s,n){this.dialogRef=s,this.data=n}onNoClick(){this.dialogRef.close()}}return s.\u0275fac=function(n){return new(n||s)(i.Y36(g.so),i.Y36(g.WI))},s.\u0275cmp=i.Xpm({type:s,selectors:[["dialog-overview"]],decls:12,vars:3,consts:[["mat-dialog-title",""],["mat-dialog-content",""],["matInput","",3,"ngModel","ngModelChange"],["mat-dialog-actions",""],["mat-button","",3,"click"],["mat-button","","cdkFocusInitial","",3,"mat-dialog-close"]],template:function(s,n){1&s&&(i.TgZ(0,"h1",0),i._uU(1),i.qZA(),i.TgZ(2,"div",1),i.TgZ(3,"p"),i._uU(4,"What's your favorite animal?"),i.qZA(),i.TgZ(5,"mat-form-field"),i.TgZ(6,"input",2),i.NdJ("ngModelChange",function(s){return n.data.animal=s}),i.qZA(),i.qZA(),i.qZA(),i.TgZ(7,"div",3),i.TgZ(8,"button",4),i.NdJ("click",function(){return n.onNoClick()}),i._uU(9,"No Thanks"),i.qZA(),i.TgZ(10,"button",5),i._uU(11,"Ok"),i.qZA(),i.qZA()),2&s&&(i.xp6(1),i.hij("Hi, ",n.data.name,""),i.xp6(5),i.Q6J("ngModel",n.data.animal),i.xp6(4),i.Q6J("mat-dialog-close",n.data.animal))},directives:[g.uh,g.xY,j.KE,m.Nt,d.Fj,d.JJ,d.On,g.H8,r.lW,g.ZT],encapsulation:2}),s})();const v={title:"Material original dialog",component:x,files:[{file:"app.component.html",content:a(80824),filecontent:a(89471)},{file:"app.component.ts",content:a(85144),filecontent:a(97068)},{file:"app.component.scss",content:a(31798),filecontent:a(71688)},{file:"dialog.html",content:a(76043),filecontent:a(9100)}]};var k=a(82613);function y(s,n){if(1&s&&(i.TgZ(0,"mat-radio-button",3),i._uU(1),i.qZA()),2&s){const s=n.$implicit;i.Q6J("value",s.value),i.xp6(1),i.hij(" ",s.label," ")}}const D={title:"I18n confirmation",component:(()=>{class s{constructor(s,n){this.mtxDialog=s,this.translate=n,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",n.addLangs(this.langs.map(s=>s.value)),n.setDefaultLang(this.defaultlang)}open(){this.mtxDialog.open({title:this.translate.stream("title"),description:this.translate.stream("description"),buttons:[{text:this.translate.stream("close"),onClick:()=>{}},{color:"primary",text:this.translate.stream("view"),onClick:()=>{}},{color:"warn",focusInitial:!0,text:this.translate.stream("ok"),onClick:()=>{}}]})}}return s.\u0275fac=function(n){return new(n||s)(i.Y36(c.cP),i.Y36(o.sK))},s.\u0275cmp=i.Xpm({type:s,selectors:[["dialog-example"]],decls:4,vars:2,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],["mat-raised-button","","color","primary",3,"click"],[3,"value"]],template:function(s,n){1&s&&(i.TgZ(0,"mat-radio-group",0),i.NdJ("ngModelChange",function(s){return n.defaultlang=s})("change",function(s){return n.translate.use(s.value)}),i.YNc(1,y,2,2,"mat-radio-button",1),i.qZA(),i.TgZ(2,"button",2),i.NdJ("click",function(){return n.open()}),i._uU(3,"Open Dialog"),i.qZA()),2&s&&(i.Q6J("ngModel",n.defaultlang),i.xp6(1),i.Q6J("ngForOf",n.langs))},directives:[k.VQ,d.JJ,d.On,u.sg,r.lW,k.U0],styles:[".mat-radio-group[_ngcontent-%COMP%]{display:block}.mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),s})(),files:[{file:"app.component.html",content:a(10398),filecontent:a(5103)},{file:"app.component.ts",content:a(3151),filecontent:a(13422)},{file:"app.component.scss",content:a(63547),filecontent:a(11402)},{file:"assets/zh-CN.json",content:a(92178),filecontent:a(39988)},{file:"assets/en-US.json",content:a(94696),filecontent:a(65611)}]};var _=a(28860),w=a(22281),C=a(29241);function q(s,n){if(1&s&&(i.ynx(0),i._UZ(1,"doc-heading",2),i._UZ(2,"example-viewer",3),i.BQk()),2&s){const s=n.$implicit;i.xp6(1),i.Q6J("text",s.title),i.xp6(1),i.Q6J("exampleData",s)}}function O(s,n){if(1&s&&(i.ynx(0),i.YNc(1,q,3,2,"ng-container",1),i.BQk()),2&s){const s=n.ngIf;i.xp6(1),i.Q6J("ngForOf",s.examples)}}function T(s,n){if(1&s&&(i.ynx(0),i._UZ(1,"doc-viewer",1),i.BQk()),2&s){const s=n.ngIf;i.xp6(1),i.Q6J("textContent",s.content.default)}}function M(s){return new p.w(s,"assets/i18n/dialog/","_json")}let A=(()=>{class s{constructor(s){this.route=s}}return s.\u0275fac=function(n){return new(n||s)(i.Y36(t.gz))},s.\u0275cmp=i.Xpm({type:s,selectors:[["app-dialog-overview"]],decls:4,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(i.TgZ(0,"p"),i._uU(1," The Extensions dialog is a wrapper of Angular Material dialog.\n"),i.qZA(),i.YNc(2,O,2,1,"ng-container",0),i.ALo(3,"async")),2&s&&(i.xp6(2),i.Q6J("ngIf",i.lcZ(3,1,n.route.data)))},directives:[u.O5,u.sg,_.Q,w.B],pipes:[u.Ov],encapsulation:2}),s})(),Z=(()=>{class s{constructor(s){this.route=s}}return s.\u0275fac=function(n){return new(n||s)(i.Y36(t.gz))},s.\u0275cmp=i.Xpm({type:s,selectors:[["app-dialog-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(s,n){1&s&&(i.YNc(0,T,2,1,"ng-container",0),i.ALo(1,"async")),2&s&&i.Q6J("ngIf",i.lcZ(1,1,n.route.data))},directives:[u.O5,C.z],pipes:[u.Ov],encapsulation:2}),s})(),I=(()=>{class s{}return s.\u0275fac=function(n){return new(n||s)},s.\u0275mod=i.oAB({type:s}),s.\u0275inj=i.cJS({imports:[[l.m8,o.aw.forRoot({loader:{provide:o.Zw,useFactory:M,deps:[e.eN]}}),t.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:A,pathMatch:"full",data:{examples:[h,v,D]}},{path:"api",component:Z,pathMatch:"full",data:{content:a(24350)}},{path:"**",redirectTo:"overview"}])]]}),s})()},71548:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;warn&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;alert()&quot;</span>&gt;</span>Alert<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;accent&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;confirm()&quot;</span>&gt;</span>Confirm<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;open()&quot;</span>&gt;</span>Open Dialog<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},10398:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;open()&quot;</span>&gt;</span>Open Dialog<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},80824:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;openOriginal()&quot;</span>&gt;</span>Open Original Dialog<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;animal&quot;</span>&gt;</span>\n  You chose: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{animal}}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n'},76043:function(s){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">mat-dialog-title</span>&gt;</span>Hi, {{ data.name }}<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">mat-dialog-content</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>What&#x27;s your favorite animal?<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;data.animal&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">mat-dialog-actions</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;onNoClick()&quot;</span>&gt;</span>No Thanks<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-button</span> [<span class="hljs-attr">mat-dialog-close</span>]=<span class="hljs-string">&quot;data.animal&quot;</span> <span class="hljs-attr">cdkFocusInitial</span>&gt;</span>Ok<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n'},94696:function(s){s.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;This is the title&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;You can write some messages here&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;CLOSE&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;ok&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;OK&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;view&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;VIEW&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},92178:function(s){s.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u8fd9\u662f\u6807\u9898&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u53ef\u4ee5\u5728\u8fd9\u91cc\u5199\u4e00\u4e9b\u8be6\u7ec6\u4fe1\u606f&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u5173\u95ed&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;ok&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;view&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u67e5\u770b&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},70557:function(s){s.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxDialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> mtxDialog: MtxDialog</span>) {}\n\n  <span class="hljs-title function_">alert</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`My name is Zongbin!`</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`Glad to meet you!`</span>);\n    });\n  }\n\n  <span class="hljs-title function_">confirm</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">confirm</span>(\n      <span class="hljs-string">`What&#x27;s your name?`</span>,\n      <span class="hljs-string">&#x27;&#x27;</span>,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`Hi, Zongbin!`</span>);\n      },\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`I don&#x27;t know.`</span>);\n      }\n    );\n  }\n\n  <span class="hljs-title function_">open</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">open</span>({\n      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;This is the title&#x27;</span>,\n      <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;You can write some messages here.&#x27;</span>,\n      <span class="hljs-attr">showCloseIcon</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;CLOSE&#x27;</span>,\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`You click Close button.`</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;VIEW&#x27;</span>,\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`You click View button.`</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;OK&#x27;</span>,\n          <span class="hljs-attr">focusInitial</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">`You click Ok button.`</span>);\n          },\n        },\n      ],\n    });\n  }\n}\n'},3151:function(s){s.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxDialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TranslateService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> mtxDialog: MtxDialog, <span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.<span class="hljs-title function_">addLangs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">langs</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span>));\n    translate.<span class="hljs-title function_">setDefaultLang</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultlang</span>);\n  }\n\n  <span class="hljs-title function_">open</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">open</span>({\n      <span class="hljs-attr">title</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;title&#x27;</span>),\n      <span class="hljs-attr">description</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;description&#x27;</span>),\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;close&#x27;</span>),\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {},\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;view&#x27;</span>),\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {},\n        },\n        {\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">focusInitial</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          <span class="hljs-attr">onClick</span>: <span class="hljs-function">() =&gt;</span> {},\n        },\n      ],\n    });\n  }\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n}\n'},85144:function(s){s.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">Inject</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxDialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDialogRef</span>, <span class="hljs-variable constant_">MAT_DIALOG_DATA</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/dialog&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  animal?: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> mtxDialog: MtxDialog</span>) {}\n\n  <span class="hljs-title function_">openOriginal</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> dialogRef = <span class="hljs-variable language_">this</span>.<span class="hljs-property">mtxDialog</span>.<span class="hljs-title function_">originalOpen</span>(<span class="hljs-title class_">DialogOverviewExampleComponent</span>, {\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;550px&#x27;</span>,\n      <span class="hljs-attr">data</span>: { <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;nzbin&#x27;</span>, <span class="hljs-attr">animal</span>: <span class="hljs-string">&#x27;panda&#x27;</span> },\n    });\n\n    dialogRef.<span class="hljs-title function_">afterClosed</span>().<span class="hljs-title function_">subscribe</span>(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;The dialog was closed&#x27;</span>);\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">animal</span> = result;\n    });\n  }\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;dialog-overview&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./dialog.html&#x27;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DialogOverviewExampleComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">public</span> dialogRef: MatDialogRef&lt;DialogOverviewExampleComponent&gt;,\n    <span class="hljs-meta">@Inject</span>(MAT_DIALOG_DATA) <span class="hljs-keyword">public</span> data: <span class="hljs-built_in">any</span>\n  </span>) {}\n\n  <span class="hljs-title function_">onNoClick</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">dialogRef</span>.<span class="hljs-title function_">close</span>();\n  }\n}\n'},24350:function(s,n,a){"use strict";a.r(n),n.default='<h1 id="dialog">Dialog</h1>\n<h2 id="api-reference-for-material-extensions-dialog">API reference for Material Extensions Dialog</h2>\n<p><code>import { MtxDialogModule } from &apos;@ng-matero/extensions/dialog&apos;;</code></p>\n<h3 id="services">Services</h3>\n<h4 id="mtxdialog"><code>MtxDialog</code></h4>\n<h5 id="methods">Methods</h5>\n<p><code>alert</code></p>\n<table>\n<thead>\n<tr>\n<th align="left">Parameter</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>title: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog title.</td>\n</tr>\n<tr>\n<td align="left"><code>description: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog description. Defaulted to <strong><code>&apos;&apos;</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>onOk: () =&gt; void</code></td>\n<td align="left">The ok callback function. Defaulted to <strong><code>() =&gt; {}</code></strong></td>\n</tr>\n</tbody></table>\n<p><code>confirm</code></p>\n<table>\n<thead>\n<tr>\n<th align="left">Parameter</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>title: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog title.</td>\n</tr>\n<tr>\n<td align="left"><code>description: string | Observable&lt;string&gt;</code></td>\n<td align="left">The dialog description. Defaulted to <strong><code>&apos;&apos;</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>onOk: () =&gt; void</code></td>\n<td align="left">The ok callback function. Defaulted to <strong><code>() =&gt; {}</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>onClose: () =&gt; void</code></td>\n<td align="left">The close callback function. Defaulted to <strong><code>() =&gt; {}</code></strong></td>\n</tr>\n</tbody></table>\n<p><code>open</code></p>\n<table>\n<thead>\n<tr>\n<th align="left">Parameter</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>config: MtxDialogData</code></td>\n<td align="left">The dialog description.</td>\n</tr>\n<tr>\n<td align="left"><code>componentOrTemplateRef: ComponentType&lt;T&gt;</code></td>\n<td align="left">The component to load into the dialog. Defaulted to <strong><code>MtxDialogComponent</code></strong></td>\n</tr>\n</tbody></table>\n<p><code>originalOpen</code></p>\n<table>\n<thead>\n<tr>\n<th align="left">Parameter</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>componentOrTemplateRef: ComponentType&lt;T&gt;</code></td>\n<td align="left">The component to load into the dialog. Defaulted to <strong><code>MtxDialogComponent</code></strong></td>\n</tr>\n<tr>\n<td align="left"><code>config?: MatDialogConfig&lt;D&gt;</code></td>\n<td align="left">The dialog description.</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="dialog-data">Dialog Data</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxDialogData <span class="hljs-keyword">extends</span> MatDialogConfig {\n  title?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  description?: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  buttons?: <span class="hljs-title class_">MtxDialogBtns</span>[];\n  showCloseIcon?: <span class="hljs-built_in">boolean</span>;\n}</pre>\n<h4 id="dialog-button">Dialog Button</h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> MtxDialogBtns {\n  <span class="hljs-keyword">type</span>?: <span class="hljs-string">&apos;&apos;</span> | <span class="hljs-string">&apos;raised&apos;</span> | <span class="hljs-string">&apos;stroked&apos;</span> | <span class="hljs-string">&apos;flat&apos;</span>;\n  color?: <span class="hljs-string">&apos;&apos;</span> | <span class="hljs-string">&apos;primary&apos;</span> | <span class="hljs-string">&apos;accent&apos;</span> | <span class="hljs-string">&apos;warn&apos;</span>;\n  <span class="hljs-keyword">class</span>?: <span class="hljs-built_in">string</span>;\n  focusInitial?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">text</span>: <span class="hljs-built_in">string</span> | <span class="hljs-title class_">Observable</span>&lt;<span class="hljs-built_in">string</span>&gt;;\n  onClick?: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n}</pre>\n'},27302:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="warn" (click)="alert()">Alert</button>\n<button mat-raised-button color="accent" (click)="confirm()">Confirm</button>\n<button mat-raised-button color="primary" (click)="open()">Open Dialog</button>\n'},65631:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxDialog } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'dialog-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private mtxDialog: MtxDialog) {}\n\n  alert() {\n    this.mtxDialog.alert(`My name is Zongbin!`, '', () => {\n      this.mtxDialog.alert(`Glad to meet you!`);\n    });\n  }\n\n  confirm() {\n    this.mtxDialog.confirm(\n      `What's your name?`,\n      '',\n      () => {\n        this.mtxDialog.alert(`Hi, Zongbin!`);\n      },\n      () => {\n        this.mtxDialog.alert(`I don't know.`);\n      }\n    );\n  }\n\n  open() {\n    this.mtxDialog.open({\n      title: 'This is the title',\n      description: 'You can write some messages here.',\n      showCloseIcon: true,\n      buttons: [\n        {\n          text: 'CLOSE',\n          onClick: () => {\n            this.mtxDialog.alert(`You click Close button.`);\n          },\n        },\n        {\n          color: 'primary',\n          text: 'VIEW',\n          onClick: () => {\n            this.mtxDialog.alert(`You click View button.`);\n          },\n        },\n        {\n          color: 'warn',\n          text: 'OK',\n          focusInitial: true,\n          onClick: () => {\n            this.mtxDialog.alert(`You click Ok button.`);\n          },\n        },\n      ],\n    });\n  }\n}\n"},5103:function(s,n,a){"use strict";a.r(n),n.default='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<button mat-raised-button color="primary" (click)="open()">Open Dialog</button>\n'},13422:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxDialog } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'dialog-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private mtxDialog: MtxDialog, public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n\n  open() {\n    this.mtxDialog.open({\n      title: this.translate.stream('title'),\n      description: this.translate.stream('description'),\n      buttons: [\n        {\n          text: this.translate.stream('close'),\n          onClick: () => {},\n        },\n        {\n          color: 'primary',\n          text: this.translate.stream('view'),\n          onClick: () => {},\n        },\n        {\n          color: 'warn',\n          focusInitial: true,\n          text: this.translate.stream('ok'),\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n}\n"},89471:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button (click)="openOriginal()">Open Original Dialog</button>\n\n<div *ngIf="animal">\n  You chose: <strong>{{animal}}</strong>\n</div>\n'},97068:function(s,n,a){"use strict";a.r(n),n.default="import { Component, Inject } from '@angular/core';\nimport { MtxDialog } from '@ng-matero/extensions';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'dialog-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  animal?: string;\n\n  constructor(private mtxDialog: MtxDialog) {}\n\n  openOriginal() {\n    const dialogRef = this.mtxDialog.originalOpen(DialogOverviewExampleComponent, {\n      width: '550px',\n      data: { name: 'nzbin', animal: 'panda' },\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview',\n  templateUrl: './dialog.html',\n})\nexport class DialogOverviewExampleComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n"},9100:function(s,n,a){"use strict";a.r(n),n.default='<h1 mat-dialog-title>Hi, {{ data.name }}</h1>\n<div mat-dialog-content>\n  <p>What\'s your favorite animal?</p>\n  <mat-form-field>\n    <input matInput [(ngModel)]="data.animal" />\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)="onNoClick()">No Thanks</button>\n  <button mat-button [mat-dialog-close]="data.animal" cdkFocusInitial>Ok</button>\n</div>\n'},65611:function(s,n,a){"use strict";a.r(n),n.default='{\n  "title": "This is the title",\n  "description": "You can write some messages here",\n  "close": "CLOSE",\n  "ok": "OK",\n  "view": "VIEW"\n}\n'},39988:function(s,n,a){"use strict";a.r(n),n.default='{\n  "title": "\u8fd9\u662f\u6807\u9898",\n  "description": "\u53ef\u4ee5\u5728\u8fd9\u91cc\u5199\u4e00\u4e9b\u8be6\u7ec6\u4fe1\u606f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a",\n  "view": "\u67e5\u770b"\n}\n'},48916:function(s){"use strict";s.exports='module.exports = "<span class=\\"hljs-selector-class\\">.mat-raised-button</span> {\\n  <span class=\\"hljs-attribute\\">margin</span>: <span class=\\"hljs-number\\">0</span> .<span class=\\"hljs-number\\">5em</span>;\\n}\\n"'},63547:function(s){"use strict";s.exports='module.exports = "<span class=\\"hljs-selector-class\\">.mat-radio-group</span> {\\n  <span class=\\"hljs-attribute\\">display</span>: block;\\n}\\n\\n<span class=\\"hljs-selector-class\\">.mat-radio-button</span> {\\n  <span class=\\"hljs-attribute\\">margin</span>: <span class=\\"hljs-number\\">0</span> <span class=\\"hljs-number\\">1rem</span> <span class=\\"hljs-number\\">1rem</span> <span class=\\"hljs-number\\">0</span>;\\n}\\n"'},31798:function(s){"use strict";s.exports='module.exports = "<span class=\\"hljs-selector-tag\\">div</span> {\\n  <span class=\\"hljs-attribute\\">padding</span>: <span class=\\"hljs-number\\">1em</span>;\\n}\\n"'},12802:function(s){"use strict";s.exports='export default ".mat-raised-button {\\n  margin: 0 .5em;\\n}\\n";'},11402:function(s){"use strict";s.exports='export default ".mat-radio-group {\\n  display: block;\\n}\\n\\n.mat-radio-button {\\n  margin: 0 1rem 1rem 0;\\n}\\n";'},71688:function(s){"use strict";s.exports='export default "div {\\n  padding: 1em;\\n}\\n";'}}]);