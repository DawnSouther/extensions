(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[986],{66986:(p,o,a)=>{"use strict";a.r(o),a.d(o,{CheckboxGroupApiComponent:()=>y,CheckboxGroupOverviewComponent:()=>M,routes:()=>I});var c=a(96814),d=a(1309),b=a(52240),f=a(81208),h=a(56223),s=a(19212),x=a(42495);let m=(()=>{class l{constructor(){this._vertical=!1,this._inset=!1}get vertical(){return this._vertical}set vertical(n){this._vertical=(0,x.Ig)(n)}get inset(){return this._inset}set inset(n){this._inset=(0,x.Ig)(n)}static#s=this.\u0275fac=function(t){return new(t||l)};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["mat-divider"]],hostAttrs:["role","separator",1,"mat-divider"],hostVars:7,hostBindings:function(t,e){2&t&&(s.uIk("aria-orientation",e.vertical?"vertical":"horizontal"),s.ekj("mat-divider-vertical",e.vertical)("mat-divider-horizontal",!e.vertical)("mat-divider-inset",e.inset))},inputs:{vertical:"vertical",inset:"inset"},standalone:!0,features:[s.jDz],decls:0,vars:0,template:function(t,e){},styles:[".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}"],encapsulation:2,changeDetection:0})}return l})();var j=a(75986),A=a(42469),_=a(4300);function T(l,u){if(1&l){const n=s.EpF();s.TgZ(0,"mat-checkbox",1),s.NdJ("indeterminateChange",function(e){s.CHM(n);const r=s.oxw();return s.KtG(r.selectAllIndeterminate=e)})("change",function(e){s.CHM(n);const r=s.oxw();return s.KtG(r._updateMasterCheckboxState(e,-1))}),s._uU(1),s.qZA()}if(2&l){const n=s.oxw();s.Q6J("checked",n.selectAll)("indeterminate",n.selectAllIndeterminate)("disabled",n.disabled),s.xp6(),s.Oqu(n.selectAllLabel)}}const F=()=>({standalone:!0});function D(l,u){if(1&l){const n=s.EpF();s.TgZ(0,"mat-checkbox",2),s.NdJ("ngModelChange",function(e){const i=s.CHM(n).$implicit;return s.KtG(i.checked=e)})("change",function(e){const i=s.CHM(n).$index,q=s.oxw();return s.KtG(q._updateNormalCheckboxState(e,i))}),s._uU(1),s.ALo(2,"async"),s.ALo(3,"toObservable"),s.qZA()}if(2&l){const n=u.$implicit,t=s.oxw();s.Q6J("ngModel",n.checked)("ngModelOptions",s.DdM(15,F))("aria-describedby",n.ariaDescribedby)("aria-label",n.ariaLabel)("aria-labelledby",n.ariaLabelledby)("color",n.color)("disabled",n.disabled||t.disabled)("disableRipple",n.disableRipple)("labelPosition",n.labelPosition)("required",n.required),s.xp6(),s.Oqu(s.lcZ(2,11,s.lcZ(3,13,n[t.bindLabel])))}}class z{constructor(u,n){this.label=u,this.value=n}}let C=(()=>{class l{get items(){return this._items}set items(n){this._originalItems=JSON.parse(JSON.stringify(n)),this._items=n.map(t=>t instanceof Object?{...t}:new z(t,t))}get compareWith(){return this._compareWith}set compareWith(n){if(null!=n&&"function"!=typeof n)throw Error("`compareWith` must be a function.");this._compareWith=n}constructor(n,t,e){this._changeDetectorRef=n,this._focusMonitor=t,this._elementRef=e,this._items=[],this._originalItems=[],this.bindLabel="label",this.bindValue="value",this.showSelectAll=!1,this.selectAllLabel="Select All",this.disabled=!1,this.change=new s.vpe,this.selectAll=!1,this.selectAllIndeterminate=!1,this.selectedItems=[],this._onChange=()=>null,this._onTouched=()=>null}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(n=>{n||Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}_selectValue(n){const t=this.items.find(e=>{try{const r=e[this.bindValue]===n;return this._compareWith?this._compareWith(e,n):r}catch(r){return console.warn(r),!1}});return t&&(t.checked=!0),t}writeValue(n){if(this.items.forEach(t=>t.checked=!1),n){if(!Array.isArray(n))throw Error("Value must be an array.");n.forEach(t=>this._selectValue(t)),this.selectedItems=n}this._checkMasterCheckboxState(),this._changeDetectorRef.markForCheck()}registerOnChange(n){this._onChange=n}registerOnTouched(n){this._onTouched=n}setDisabledState(n){this.disabled=n,this._changeDetectorRef.markForCheck()}_checkMasterCheckboxState(){this.items.filter(n=>n.checked||!n.disabled).every(n=>!n.checked)?(this.selectAll=!1,this.selectAllIndeterminate=!1):this.items.filter(n=>n.checked||!n.disabled).every(n=>n.checked)?(this.selectAll=!0,this.selectAllIndeterminate=!1):this.selectAllIndeterminate=!0}_getSelectedItems(n){this.selectedItems=this.items.filter(t=>t.checked),this.selectedItems=this._compareWith?this._originalItems.filter(t=>this.selectedItems.find(e=>this._compareWith(t,e))):this.selectedItems.map(t=>t[this.bindValue]),this._onChange(this.selectedItems),this.change.emit({model:this.selectedItems,index:n})}_updateNormalCheckboxState(n,t){this._checkMasterCheckboxState(),this._getSelectedItems(t)}_updateMasterCheckboxState(n,t){this.selectAll=!this.selectAll,this.selectAllIndeterminate=!1,this.selectAll?this.items.filter(e=>e.checked||!e.disabled).forEach(e=>e.checked=!0):this.items.filter(e=>e.checked||!e.disabled).forEach(e=>e.checked=!!e.disabled),this._getSelectedItems(t)}static#s=this.\u0275fac=function(t){return new(t||l)(s.Y36(s.sBO),s.Y36(_.tE),s.Y36(s.SBq))};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["mtx-checkbox-group"]],contentQueries:function(t,e,r){if(1&t&&s.Suo(r,j.oG,5),2&t){let i;s.iGM(i=s.CRH())&&(e._checkboxes=i)}},hostAttrs:[1,"mtx-checkbox-group"],inputs:{items:"items",bindLabel:"bindLabel",bindValue:"bindValue",showSelectAll:[s.lbL.HasDecoratorInputTransform,"showSelectAll","showSelectAll",s.VuI],selectAllLabel:"selectAllLabel",compareWith:"compareWith",disabled:[s.lbL.HasDecoratorInputTransform,"disabled","disabled",s.VuI]},outputs:{change:"change"},exportAs:["mtxCheckboxGroup"],standalone:!0,features:[s._Bn([{provide:h.JU,useExisting:(0,s.Gpc)(()=>l),multi:!0}]),s.Xq5,s.jDz],decls:3,vars:1,consts:[["class","mtx-checkbox-master",3,"checked","indeterminate","disabled"],[1,"mtx-checkbox-master",3,"checked","indeterminate","disabled","indeterminateChange","change"],[1,"mtx-checkbox-normal",3,"ngModel","ngModelOptions","aria-describedby","aria-label","aria-labelledby","color","disabled","disableRipple","labelPosition","required","ngModelChange","change"],["class","mtx-checkbox-normal",3,"ngModel","ngModelOptions","aria-describedby","aria-label","aria-labelledby","color","disabled","disableRipple","labelPosition","required"]],template:function(t,e){1&t&&(s.YNc(0,T,2,4,"mat-checkbox",0),s.SjG(1,D,4,16,"mat-checkbox",3,s.x6l)),2&t&&(s.um2(0,e.showSelectAll?0:-1),s.xp6(),s.wJu(e.items))},dependencies:[h.u5,h.JJ,h.Q7,h.On,j.oG,A.y,c.Ov],encapsulation:2,changeDetection:0})}return l})();const O={title:"Basic",component:(()=>{class l{constructor(){this.foods=[{label:"Steak",value:"steak",color:"primary"},{label:"Pizza",value:"pizza",color:"accent"},{label:"Tacos",value:"tacos",color:"warn"}],this.selectedFoods=["steak","pizza","tacos"],this.cars=["Ford","Chevrolet","Dodge"],this.selectedCars=["Dodge"]}static#s=this.\u0275fac=function(t){return new(t||l)};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.jDz],decls:9,vars:10,consts:[[3,"items","ngModel","ngModelChange"]],template:function(t,e){1&t&&(s.TgZ(0,"mtx-checkbox-group",0),s.NdJ("ngModelChange",function(i){return e.selectedFoods=i}),s.qZA(),s.TgZ(1,"p"),s._uU(2),s.ALo(3,"json"),s.qZA(),s._UZ(4,"mat-divider"),s.TgZ(5,"mtx-checkbox-group",0),s.NdJ("ngModelChange",function(i){return e.selectedCars=i}),s.qZA(),s.TgZ(6,"p"),s._uU(7),s.ALo(8,"json"),s.qZA()),2&t&&(s.Q6J("items",e.foods)("ngModel",e.selectedFoods),s.xp6(2),s.Oqu(s.lcZ(3,6,e.selectedFoods)),s.xp6(3),s.Q6J("items",e.cars)("ngModel",e.selectedCars),s.xp6(2),s.Oqu(s.lcZ(8,8,e.selectedCars)))},dependencies:[C,h.u5,h.JJ,h.On,m,c.Ts],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]})}return l})(),files:[{file:"app.component.html",content:a(40650),filecontent:a(26471)},{file:"app.component.ts",content:a(71389),filecontent:a(80306)},{file:"app.component.scss",content:a(48972),filecontent:a(5760)}]},P={title:"BindLabel & BindValue",component:(()=>{class l{constructor(){this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[3]}static#s=this.\u0275fac=function(t){return new(t||l)};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.jDz],decls:4,vars:5,consts:[["bindLabel","name","bindValue","id",3,"items","ngModel","ngModelChange"]],template:function(t,e){1&t&&(s.TgZ(0,"mtx-checkbox-group",0),s.NdJ("ngModelChange",function(i){return e.selectedCars=i}),s.qZA(),s.TgZ(1,"p"),s._uU(2),s.ALo(3,"json"),s.qZA()),2&t&&(s.Q6J("items",e.cars)("ngModel",e.selectedCars),s.xp6(2),s.Oqu(s.lcZ(3,3,e.selectedCars)))},dependencies:[C,h.u5,h.JJ,h.On,c.Ts]})}return l})(),files:[{file:"app.component.html",content:a(78100),filecontent:a(55731)},{file:"app.component.ts",content:a(66793),filecontent:a(33914)},{file:"app.component.scss",content:a(56291),filecontent:a(4954)}]},E={title:"CompareWith",component:(()=>{class l{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza"},{label:"Tacos",value:"tacos"}],this.selectedFoods=[{label:"Pizza",value:"pizza"}],this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}]}compareWith(n,t){return n.value===t.value}compareWith2(n,t){return n.id===t.id}static#s=this.\u0275fac=function(t){return new(t||l)};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.jDz],decls:9,vars:12,consts:[[3,"items","ngModel","compareWith","ngModelChange"],["bindLabel","name",3,"items","ngModel","compareWith","ngModelChange"]],template:function(t,e){1&t&&(s.TgZ(0,"mtx-checkbox-group",0),s.NdJ("ngModelChange",function(i){return e.selectedFoods=i}),s.qZA(),s.TgZ(1,"p"),s._uU(2),s.ALo(3,"json"),s.qZA(),s._UZ(4,"mat-divider"),s.TgZ(5,"mtx-checkbox-group",1),s.NdJ("ngModelChange",function(i){return e.selectedCars=i}),s.qZA(),s.TgZ(6,"p"),s._uU(7),s.ALo(8,"json"),s.qZA()),2&t&&(s.Q6J("items",e.foods)("ngModel",e.selectedFoods)("compareWith",e.compareWith),s.xp6(2),s.Oqu(s.lcZ(3,8,e.selectedFoods)),s.xp6(3),s.Q6J("items",e.cars)("ngModel",e.selectedCars)("compareWith",e.compareWith2),s.xp6(2),s.Oqu(s.lcZ(8,10,e.selectedCars)))},dependencies:[C,h.u5,h.JJ,h.On,m,c.Ts],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]})}return l})(),files:[{file:"app.component.html",content:a(20230),filecontent:a(4139)},{file:"app.component.ts",content:a(33345),filecontent:a(41248)},{file:"app.component.scss",content:a(30797),filecontent:a(11442)}]};var k=a(87466),G=a(89515);function L(l,u){if(1&l&&(s.TgZ(0,"mat-radio-button",2),s._uU(1),s.qZA()),2&l){const n=u.$implicit;s.Q6J("value",n.value),s.xp6(),s.Oqu(n.label)}}const w={title:"I18n ngx-translate",component:(()=>{class l{constructor(n){this.translate=n,this.foods=[{label:this.translate.stream("steak"),value:"steak"},{label:this.translate.stream("pizza"),value:"pizza"},{label:this.translate.stream("tacos"),value:"tacos"}],this.selectedFoods=["steak"],this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",n.addLangs(this.langs.map(t=>t.value)),n.setDefaultLang(this.defaultlang)}static#s=this.\u0275fac=function(t){return new(t||l)(s.Y36(G.sK))};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.jDz],decls:7,vars:6,consts:[[3,"ngModel","ngModelChange","change"],[3,"items","ngModel","ngModelChange"],[3,"value"]],template:function(t,e){1&t&&(s.TgZ(0,"mat-radio-group",0),s.NdJ("ngModelChange",function(i){return e.defaultlang=i})("change",function(i){return e.translate.use(i.value)}),s.SjG(1,L,2,2,"mat-radio-button",2,s.x6l),s.qZA(),s.TgZ(3,"mtx-checkbox-group",1),s.NdJ("ngModelChange",function(i){return e.selectedFoods=i}),s.qZA(),s.TgZ(4,"p"),s._uU(5),s.ALo(6,"json"),s.qZA()),2&t&&(s.Q6J("ngModel",e.defaultlang),s.xp6(),s.wJu(e.langs),s.xp6(2),s.Q6J("items",e.foods)("ngModel",e.selectedFoods),s.xp6(2),s.Oqu(s.lcZ(6,4,e.selectedFoods)))},dependencies:[k.VQ,h.u5,h.JJ,h.On,k.U0,C,c.Ts]})}return l})(),files:[{file:"app.component.html",content:a(94962),filecontent:a(92127)},{file:"app.component.ts",content:a(76389),filecontent:a(13530)},{file:"app.component.scss",content:a(22682),filecontent:a(56564)},{file:"assets/zh-CN.json",content:a(28600),filecontent:a(50951)},{file:"assets/en-US.json",content:a(48811),filecontent:a(27699)}]};var J=a(32296);const S={title:"SelectAll",component:(()=>{class l{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza",disabled:!0},{label:"Tacos",value:"tacos"}],this.selectedFoods=["tacos"],this.disabled=!1}onOptionChange(n){console.log(n)}toggleOptionDisabled(){this.foods[1].disabled=!this.foods[1].disabled,this.foods=this.foods.filter(n=>!0)}static#s=this.\u0275fac=function(t){return new(t||l)};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.jDz],decls:9,vars:8,consts:[["mat-raised-button","",3,"click"],[3,"ngModel","ngModelChange"],["selectAllLabel","Select all foods",3,"items","ngModel","disabled","showSelectAll","ngModelChange","change"]],template:function(t,e){1&t&&(s.TgZ(0,"p")(1,"button",0),s.NdJ("click",function(){return e.toggleOptionDisabled()}),s._uU(2,"Toggle Option[1] Disabled"),s.qZA(),s.TgZ(3,"mat-checkbox",1),s.NdJ("ngModelChange",function(i){return e.disabled=i}),s._uU(4,"Disabled checkbox group"),s.qZA()(),s.TgZ(5,"mtx-checkbox-group",2),s.NdJ("ngModelChange",function(i){return e.selectedFoods=i})("change",function(i){return e.onOptionChange(i)}),s.qZA(),s.TgZ(6,"p"),s._uU(7),s.ALo(8,"json"),s.qZA()),2&t&&(s.xp6(3),s.Q6J("ngModel",e.disabled),s.xp6(2),s.Q6J("items",e.foods)("ngModel",e.selectedFoods)("disabled",e.disabled)("showSelectAll",!0),s.xp6(2),s.Oqu(s.lcZ(8,6,e.selectedFoods)))},dependencies:[J.lW,j.oG,h.u5,h.JJ,h.On,C,c.Ts]})}return l})(),files:[{file:"app.component.html",content:a(58654),filecontent:a(6962)},{file:"app.component.ts",content:a(65007),filecontent:a(70328)},{file:"app.component.scss",content:a(82823),filecontent:a(98023)}]};var v=a(52787);function U(l,u){if(1&l&&s._UZ(0,"doc-heading",0)(1,"example-viewer",1),2&l){const n=u.$implicit;s.Q6J("text",n.title),s.xp6(),s.Q6J("exampleData",n)}}function Z(l,u){1&l&&s.SjG(0,U,2,2,null,null,s.x6l),2&l&&s.wJu(u.examples)}function W(l,u){1&l&&s._UZ(0,"doc-viewer",0),2&l&&s.Q6J("textContent",u.content.default)}let M=(()=>{class l{constructor(n){this.route=n}static#s=this.\u0275fac=function(t){return new(t||l)(s.Y36(v.gz))};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["app-checkbox-group-overview"]],standalone:!0,features:[s.jDz],decls:2,vars:3,consts:[[3,"text"],[3,"exampleData"]],template:function(t,e){if(1&t&&(s.YNc(0,Z,2,0),s.ALo(1,"async")),2&t){let r;s.um2(0,(r=s.lcZ(1,1,e.route.data))?0:-1,r)}},dependencies:[d.Q,f.B,c.Ov],encapsulation:2})}return l})(),y=(()=>{class l{constructor(n){this.route=n}static#s=this.\u0275fac=function(t){return new(t||l)(s.Y36(v.gz))};static#a=this.\u0275cmp=s.Xpm({type:l,selectors:[["app-checkbox-group-api"]],standalone:!0,features:[s.jDz],decls:2,vars:3,consts:[[3,"textContent"]],template:function(t,e){if(1&t&&(s.YNc(0,W,1,1,"doc-viewer",0),s.ALo(1,"async")),2&t){let r;s.um2(0,(r=s.lcZ(1,1,e.route.data))?0:-1,r)}},dependencies:[b.z,c.Ov],encapsulation:2})}return l})();const I=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:M,data:{examples:[O,P,E,S,w]}},{path:"api",component:y,pathMatch:"full",data:{content:a(42790)}},{path:"**",redirectTo:"overview"}]},1309:(p,o,a)=>{"use strict";a.d(o,{Q:()=>h});var c=a(30617),d=a(19212),b=a(96814);let f=(()=>{class s{constructor(m){this.platformLocation=m,this._text=""}ngOnInit(){this._text=this.example.toLowerCase().split(" ").filter(m=>"&"!==m).join("-")}getFragmentUrl(){return`${this.platformLocation.pathname}#${this._text}`}static#s=this.\u0275fac=function(g){return new(g||s)(d.Y36(b.lw))};static#a=this.\u0275cmp=d.Xpm({type:s,selectors:[["header-link"]],inputs:{example:"example"},standalone:!0,features:[d.jDz],decls:3,vars:2,consts:[["aria-label","Link to this heading",1,"docs-markdown-a","header-link",3,"href"]],template:function(g,j){1&g&&(d.TgZ(0,"a",0)(1,"mat-icon"),d._uU(2,"link"),d.qZA()()),2&g&&(d.Q6J("href",j.getFragmentUrl(),d.LSH),d.uIk("aria-describedby",j.example))},dependencies:[c.Hw],styles:["h1 .header-link,h2 .header-link,h3 .header-link,h4 .header-link,h5 .header-link,h6 .header-link{display:inline-flex;padding:2px 0;margin-left:-30px;color:#6e6e6e;text-decoration:none;-webkit-user-select:none;user-select:none;visibility:hidden;vertical-align:middle}h1:hover .header-link,h2:hover .header-link,h3:hover .header-link,h4:hover .header-link,h5:hover .header-link,h6:hover .header-link{visibility:visible}h1 span,h2 span,h3 span,h4 span,h5 span,h6 span{vertical-align:middle}\n"],encapsulation:2})}return s})(),h=(()=>{class s{constructor(){this.text="",this.id=""}ngOnInit(){this.id=this.text.toLowerCase().split(" ").filter(m=>"&"!==m).join("-")}static#s=this.\u0275fac=function(g){return new(g||s)};static#a=this.\u0275cmp=d.Xpm({type:s,selectors:[["doc-heading"]],inputs:{text:"text"},standalone:!0,features:[d.jDz],decls:4,vars:3,consts:[[3,"id"],[3,"example"]],template:function(g,j){1&g&&(d.TgZ(0,"h3",0),d._UZ(1,"header-link",1),d.TgZ(2,"span"),d._uU(3),d.qZA()()),2&g&&(d.Q6J("id",j.id),d.xp6(),d.Q6J("example",j.text),d.xp6(2),d.hij(" ",j.text,""))},dependencies:[f],encapsulation:2})}return s})()},42469:(p,o,a)=>{"use strict";a.d(o,{y:()=>f});var c=a(2664),d=a(22096),b=a(19212);let f=(()=>{class h{transform(x){return(0,c.b)(x)?x:(0,d.of)(x)}static#s=this.\u0275fac=function(m){return new(m||h)};static#a=this.\u0275pipe=b.Yjl({name:"toObservable",type:h,pure:!0,standalone:!0})}return h})()},40650:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},78100:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n                    <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n                    <span class="hljs-attr">bindValue</span>=<span class="hljs-string">&quot;id&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},20230:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n                    [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n                    <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>\n                    [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith2&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},94962:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  @for (lang of langs; track lang) {\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>{{lang.label}}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  }\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n'},58654:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;toggleOptionDisabled()&quot;</span>&gt;</span>Toggle Option[1] Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Disabled checkbox group<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n                    [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">&quot;disabled&quot;</span>\n                    [<span class="hljs-attr">showSelectAll</span>]=<span class="hljs-string">&quot;true&quot;</span>\n                    <span class="hljs-attr">selectAllLabel</span>=<span class="hljs-string">&quot;Select all foods&quot;</span>\n                    (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;onOptionChange($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},48811:p=>{p.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;steak&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Steak&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pizza&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Pizza&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;tacos&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Tacos&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},28600:p=>{p.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;steak&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u725b\u6392&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pizza&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u62ab\u8428&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;tacos&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u7389\u7c73\u5377&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},48972:p=>{p.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},56291:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},30797:p=>{p.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},22682:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},82823:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},71389:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDivider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/divider&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">MtxCheckboxGroupOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatDivider</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">foods</span>: <span class="hljs-title class_">MtxCheckboxGroupOption</span>[] = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;accent&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span> },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  cars = [<span class="hljs-string">&#x27;Ford&#x27;</span>, <span class="hljs-string">&#x27;Chevrolet&#x27;</span>, <span class="hljs-string">&#x27;Dodge&#x27;</span>];\n  selectedCars = [<span class="hljs-string">&#x27;Dodge&#x27;</span>];\n}\n'},66793:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  cars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n\n  selectedCars = [<span class="hljs-number">3</span>];\n}\n'},33345:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDivider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/divider&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatDivider</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  foods = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n  selectedFoods = [{ <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span> }];\n  <span class="hljs-title function_">compareWith</span>(<span class="hljs-params">a: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-property">value</span> === b.<span class="hljs-property">value</span>;\n  }\n\n  cars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  selectedCars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  <span class="hljs-title function_">compareWith2</span>(<span class="hljs-params">a: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-property">id</span> === b.<span class="hljs-property">id</span>;\n  }\n}\n'},76389:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">MtxCheckboxGroupOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TranslateService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatRadioGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">foods</span>: <span class="hljs-title class_">MtxCheckboxGroupOption</span>[] = [\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;steak&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;pizza&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;tacos&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span>,\n    },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>];\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.<span class="hljs-title function_">addLangs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">langs</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span>));\n    translate.<span class="hljs-title function_">setDefaultLang</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultlang</span>);\n  }\n}\n'},65007:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckbox</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatButton</span>, <span class="hljs-title class_">MatCheckbox</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  foods = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n\n  selectedFoods = [<span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  disabled = <span class="hljs-literal">false</span>;\n\n  <span class="hljs-title function_">onOptionChange</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n\n  <span class="hljs-title function_">toggleOptionDisabled</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>[<span class="hljs-number">1</span>].<span class="hljs-property">disabled</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>[<span class="hljs-number">1</span>].<span class="hljs-property">disabled</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> <span class="hljs-literal">true</span>);\n  }\n}\n'},42790:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='<h1 id="checkbox-group">Checkbox Group</h1>\n<h2 id="api-reference-for-material-extensions-checkbox-group">API reference for Material Extensions checkbox-group</h2>\n<p><code>import { MtxCheckboxGroupModule } from &apos;@ng-matero/extensions/checkbox-group&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxcheckboxgroup"><code>MtxCheckboxGroup</code></h4>\n<p>Selector: <code>[mtx-checkbox-group]</code></p>\n<p>Exported as: <code>mtxCheckboxGroup</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>items: any[]</code></td>\n<td align="left">Items array.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>bindLabel: string</code></td>\n<td align="left">Object property to use for label. Default is <strong><code>&apos;label&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>bindValue: string</code></td>\n<td align="left">Object property to use for selected model. By default binds to whole object. Default is <strong><code>&apos;value&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>compareWith: (a: any, b: any) =&gt; boolean</code></td>\n<td align="left">A function to compare the option values with the selected values. The first argument is a value from an option. The second is a value from the selection(model). A boolean should be returned.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showSelectAll: boolean</code></td>\n<td align="left">Whether show select all. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>selectAllLabel: string</code></td>\n<td align="left">The lable of select all. Default is <strong><code>&apos;Select All&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>change: EventEmitter&lt;{  model: MtxCheckboxGroupOption[];  index: number; }&gt;()</code></td>\n<td align="left">Event emitted when the selection changed.</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxcheckboxgroupoption"><code>MtxCheckboxGroupOption</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxCheckboxGroupOption</span> {\n  ariaDescribedby?: <span class="hljs-built_in">string</span>;\n  ariaLabel?: <span class="hljs-built_in">string</span>;\n  ariaLabelledby?: <span class="hljs-built_in">string</span>;\n  label?: <span class="hljs-built_in">any</span>;\n  value?: <span class="hljs-built_in">any</span>;\n  color?: <span class="hljs-built_in">string</span>;\n  checked?: <span class="hljs-built_in">boolean</span>;\n  disabled?: <span class="hljs-built_in">boolean</span>;\n  disableRipple?: <span class="hljs-built_in">boolean</span>;\n  indeterminate?: <span class="hljs-built_in">boolean</span>;\n  labelPosition?: <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n  id?: <span class="hljs-built_in">string</span>;\n  name?: <span class="hljs-built_in">string</span> | <span class="hljs-literal">null</span>;\n  required?: <span class="hljs-built_in">boolean</span>;\n  [<span class="hljs-attr">k</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span>;\n}\n</pre>\n'},26471:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars" [(ngModel)]="selectedCars"></mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},5760:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="mat-divider {\n  margin: 1rem 0;\n}\n"},80306:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatDivider } from '@angular/material/divider';\nimport { MtxCheckboxGroup, MtxCheckboxGroupOption } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MtxCheckboxGroup, FormsModule, MatDivider, JsonPipe],\n})\nexport class AppComponent {\n  foods: MtxCheckboxGroupOption[] = [\n    { label: 'Steak', value: 'steak', color: 'primary' },\n    { label: 'Pizza', value: 'pizza', color: 'accent' },\n    { label: 'Tacos', value: 'tacos', color: 'warn' },\n  ];\n  selectedFoods = ['steak', 'pizza', 'tacos'];\n\n  cars = ['Ford', 'Chevrolet', 'Dodge'];\n  selectedCars = ['Dodge'];\n}\n"},55731:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='<mtx-checkbox-group [items]="cars"\n                    bindLabel="name"\n                    bindValue="id"\n                    [(ngModel)]="selectedCars">\n</mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},4954:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="/** No CSS for this example */\n"},33914:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MtxCheckboxGroup } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MtxCheckboxGroup, FormsModule, JsonPipe],\n})\nexport class AppComponent {\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n\n  selectedCars = [3];\n}\n"},4139:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='<mtx-checkbox-group [items]="foods"\n                    [(ngModel)]="selectedFoods"\n                    [compareWith]="compareWith">\n</mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars"\n                    bindLabel="name"\n                    [(ngModel)]="selectedCars"\n                    [compareWith]="compareWith2">\n</mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},11442:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="mat-divider {\n  margin: 1rem 0;\n}\n"},41248:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatDivider } from '@angular/material/divider';\nimport { MtxCheckboxGroup } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MtxCheckboxGroup, FormsModule, MatDivider, JsonPipe],\n})\nexport class AppComponent {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza' },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n  selectedFoods = [{ label: 'Pizza', value: 'pizza' }];\n  compareWith(a: any, b: any) {\n    return a.value === b.value;\n  }\n\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  selectedCars = [\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  compareWith2(a: any, b: any) {\n    return a.id === b.id;\n  }\n}\n"},92127:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  @for (lang of langs; track lang) {\n    <mat-radio-button [value]="lang.value">{{lang.label}}</mat-radio-button>\n  }\n</mat-radio-group>\n\n<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n'},56564:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="/** No CSS for this example */\n"},13530:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { MtxCheckboxGroup, MtxCheckboxGroupOption } from '@ng-matero/extensions/checkbox-group';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MatRadioGroup, FormsModule, MatRadioButton, MtxCheckboxGroup, JsonPipe],\n})\nexport class AppComponent {\n  foods: MtxCheckboxGroupOption[] = [\n    {\n      label: this.translate.stream('steak'),\n      value: 'steak',\n    },\n    {\n      label: this.translate.stream('pizza'),\n      value: 'pizza',\n    },\n    {\n      label: this.translate.stream('tacos'),\n      value: 'tacos',\n    },\n  ];\n  selectedFoods = ['steak'];\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},6962:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='<p>\n  <button mat-raised-button (click)="toggleOptionDisabled()">Toggle Option[1] Disabled</button>\n  <mat-checkbox [(ngModel)]="disabled">Disabled checkbox group</mat-checkbox>\n</p>\n\n<mtx-checkbox-group [items]="foods"\n                    [(ngModel)]="selectedFoods"\n                    [disabled]="disabled"\n                    [showSelectAll]="true"\n                    selectAllLabel="Select all foods"\n                    (change)="onOptionChange($event)">\n</mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n'},98023:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="/** No CSS for this example */\n"},70328:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MtxCheckboxGroup } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [MatButton, MatCheckbox, FormsModule, MtxCheckboxGroup, JsonPipe],\n})\nexport class AppComponent {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza', disabled: true },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n\n  selectedFoods = ['tacos'];\n\n  disabled = false;\n\n  onOptionChange(e: any) {\n    console.log(e);\n  }\n\n  toggleOptionDisabled() {\n    this.foods[1].disabled = !this.foods[1].disabled;\n    this.foods = this.foods.filter(_ => true);\n  }\n}\n"},27699:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='{\n  "steak": "Steak",\n  "pizza": "Pizza",\n  "tacos": "Tacos"\n}\n'},50951:(p,o,a)=>{"use strict";a.r(o),a.d(o,{default:()=>c});const c='{\n  "steak": "\u725b\u6392",\n  "pizza": "\u62ab\u8428",\n  "tacos": "\u7389\u7c73\u5377"\n}\n'}}]);