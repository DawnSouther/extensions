(self.webpackChunkextensions_srcs=self.webpackChunkextensions_srcs||[]).push([[142],{25142:function(n,t,e){"use strict";e.r(t),e.d(t,{ColorPickerApiComponent:function(){return j},ColorPickerModule:function(){return k},ColorPickerOverviewComponent:function(){return x}});var s=e(54655),a=e(81940),o=e(37716),l=e(98295),c=e(90156),r=e(3679),p=e(76627);const i={title:"Basic",component:(()=>{class n{constructor(){this.color="#3f51b5"}changeColor(n){console.log(n)}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=o.Xpm({type:n,selectors:[["color-picker-example"]],decls:10,vars:1,consts:[["required","",3,"ngModel","ngModelChange","colorChange"],["matSuffix",""]],template:function(n,t){1&n&&(o.TgZ(0,"mat-form-field"),o.TgZ(1,"mat-label"),o._uU(2,"Color picker"),o.qZA(),o.TgZ(3,"mtx-color-picker",0),o.NdJ("ngModelChange",function(n){return t.color=n})("colorChange",function(n){return t.changeColor(n)}),o.qZA(),o.TgZ(4,"mat-icon",1),o._uU(5,"palette"),o.qZA(),o.TgZ(6,"mat-hint"),o._uU(7,"Choose your favorite color"),o.qZA(),o.TgZ(8,"mat-error"),o._uU(9,"Please enter the color"),o.qZA(),o.qZA()),2&n&&(o.xp6(3),o.Q6J("ngModel",t.color))},directives:[l.KE,l.hX,c.J,r.Q7,r.JJ,r.On,p.Hw,l.R9,l.bx,l.TO],styles:[""]}),n})(),files:[{file:"app.component.html",content:e(19007),filecontent:e(96444)},{file:"app.component.ts",content:e(64021),filecontent:e(54797)},{file:"app.component.scss",content:e(73365),filecontent:e(5461)}]};var h=e(38583),m=e(22281),u=e(29241);function f(n,t){if(1&n&&(o.ynx(0),o._UZ(1,"example-viewer",2),o.BQk()),2&n){const n=t.$implicit;o.xp6(1),o.Q6J("exampleData",n)}}function d(n,t){if(1&n&&(o.ynx(0),o.YNc(1,f,2,1,"ng-container",1),o.BQk()),2&n){const n=t.ngIf;o.xp6(1),o.Q6J("ngForOf",n.examples)}}function g(n,t){if(1&n&&(o.ynx(0),o._UZ(1,"doc-viewer",1),o.BQk()),2&n){const n=t.ngIf;o.xp6(1),o.Q6J("textContent",n.content.default)}}let x=(()=>{class n{constructor(n){this.route=n}}return n.\u0275fac=function(t){return new(t||n)(o.Y36(s.gz))},n.\u0275cmp=o.Xpm({type:n,selectors:[["app-color-picker-overview"]],decls:9,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"exampleData"]],template:function(n,t){1&n&&(o.TgZ(0,"p"),o.TgZ(1,"code"),o._uU(2,"mtx-color-picker"),o.qZA(),o._uU(3," has used Chrome picker style of "),o.TgZ(4,"code"),o._uU(5,"ngx-color"),o.qZA(),o._uU(6,", it can't change the picker style now.\n"),o.qZA(),o.YNc(7,d,2,1,"ng-container",0),o.ALo(8,"async")),2&n&&(o.xp6(7),o.Q6J("ngIf",o.lcZ(8,1,t.route.data)))},directives:[h.O5,h.sg,m.B],pipes:[h.Ov],encapsulation:2}),n})(),j=(()=>{class n{constructor(n){this.route=n}}return n.\u0275fac=function(t){return new(t||n)(o.Y36(s.gz))},n.\u0275cmp=o.Xpm({type:n,selectors:[["app-color-picker-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(n,t){1&n&&(o.YNc(0,g,2,1,"ng-container",0),o.ALo(1,"async")),2&n&&o.Q6J("ngIf",o.lcZ(1,1,t.route.data))},directives:[h.O5,u.z],pipes:[h.Ov],encapsulation:2}),n})(),k=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=o.oAB({type:n}),n.\u0275inj=o.cJS({imports:[[a.m,s.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:x,pathMatch:"full",data:{examples:[i]}},{path:"api",component:j,pathMatch:"full",data:{content:e(96089)}},{path:"**",redirectTo:"overview"}])]]}),n})()},19007:function(n){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-color-picker</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;color&quot;</span> (<span class="hljs-attr">colorChange</span>)=<span class="hljs-string">&quot;changeColor($event)&quot;</span> <span class="hljs-attr">required</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mtx-color-picker</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> <span class="hljs-attr">matSuffix</span>&gt;</span>palette<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-hint</span>&gt;</span>Choose your favorite color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-hint</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-error</span>&gt;</span>Please enter the color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-error</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n'},64021:function(n){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;color-picker-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  color = <span class="hljs-string">&#x27;#3f51b5&#x27;</span>;\n\n  <span class="hljs-function"><span class="hljs-title">changeColor</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},96089:function(n,t,e){"use strict";e.r(t),t.default='<h1 id="color-picker">Color Picker</h1>\n<h2 id="api-reference-for-material-extensions-color-picker">API reference for Material Extensions color-picker</h2>\n<p><code>import { MtxColorPickerModule } from &apos;@ng-matero/extensions/color-picker&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxcolorpicker"><code>MtxColorPicker</code></h4>\n<p>Selector: <code>[mtx-color-picker]</code></p>\n<p>Exported as: <code>mtxColorPicker</code></p>\n<h5 id="properties">Properties</h5>\n<p>The color picker component is just like a <code>matInput</code>.</p>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>value: string</code></td>\n<td align="left">Value of the color picker control.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>placeholder: string</code></td>\n<td align="left">Placeholder of the color picker control.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>disabled: boolean</code></td>\n<td align="left">Whether disabled the color picker control.</td>\n</tr>\n<tr>\n<td align="left">@Output() <code>colorChange: EventEmitter&lt;{ color: Color; $event: MouseEvent }&gt;</code></td>\n<td align="left">Event emitted when the color changed.</td>\n</tr>\n</tbody></table>\n'},96444:function(n,t,e){"use strict";e.r(t),t.default='<mat-form-field>\n  <mat-label>Color picker</mat-label>\n  <mtx-color-picker [(ngModel)]="color" (colorChange)="changeColor($event)" required>\n  </mtx-color-picker>\n  <mat-icon matSuffix>palette</mat-icon>\n  <mat-hint>Choose your favorite color</mat-hint>\n  <mat-error>Please enter the color</mat-error>\n</mat-form-field>\n'},54797:function(n,t,e){"use strict";e.r(t),t.default="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'color-picker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  color = '#3f51b5';\n\n  changeColor(e: any) {\n    console.log(e);\n  }\n}\n"},73365:function(n){"use strict";n.exports='module.exports = "<span class=\\"hljs-comment\\">/** No CSS for this example */</span>\\n"'},5461:function(n){"use strict";n.exports='export default "/** No CSS for this example */\\n";'}}]);