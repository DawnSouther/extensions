(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[598],{49598:(o,p,a)=>{"use strict";a.r(p),a.d(p,{ProgressApiComponent:()=>x,ProgressModule:()=>B,ProgressOverviewComponent:()=>f});var c=a(4521),b=a(38622),s=a(5e3),u=a(79814),m=a(93075),C=a(78029),v=a(77446),i=a(69808),h=a(67322),A=a(77531),k=a(68140),y=a(12779),M=a(76752),d=a(63191);const q=function(n,l){return{"mtx-progress-fill-striped":n,"mtx-progress-fill-animated":l}},T=function(n,l){return{"width.%":n,"background-color":l}},P=["*"];let j=(()=>{class n{constructor(){this.type="info",this.value=0,this._striped=!1,this._animate=!1}get striped(){return this._striped}set striped(t){this._striped=(0,d.Ig)(t)}get animate(){return this._animate}set animate(t){this._animate=(0,d.Ig)(t)}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=s.Xpm({type:n,selectors:[["mtx-progress"]],hostAttrs:[1,"mtx-progress"],hostVars:4,hostBindings:function(t,e){2&t&&s.Udp("height",e.height)("background-color",e.background)},inputs:{type:"type",value:"value",height:"height",color:"color",foreground:"foreground",background:"background",striped:"striped",animate:"animate"},exportAs:["mtxProgress"],ngContentSelectors:P,decls:2,vars:10,consts:[["role","progress-fill",3,"ngClass","ngStyle"]],template:function(t,e){1&t&&(s.F$t(),s.TgZ(0,"div",0),s.Hsn(1),s.qZA()),2&t&&(s.Tol("mtx-progress-fill mtx-progress-fill-"+e.type),s.Q6J("ngClass",s.WLB(4,q,e.striped,e.animate))("ngStyle",s.WLB(7,T,e.value,e.foreground)))},directives:[i.mk,i.PC],styles:[".mtx-progress{display:flex;height:1rem;margin:8px 0;overflow:hidden;font-size:.75rem;border-radius:.25rem}.mtx-progress-fill{display:flex;flex-direction:column;justify-content:center;text-align:center;transition:width .6s ease}.mtx-progress-fill-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.mtx-progress-fill-animated{-webkit-animation:mtx-progress-fill-stripes 1s linear infinite;animation:mtx-progress-fill-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.mtx-progress-fill-animated{-webkit-animation:none;animation:none}}@-webkit-keyframes mtx-progress-fill-stripes{0%{background-position:1rem 0}to{background-position:0 0}}@keyframes mtx-progress-fill-stripes{0%{background-position:1rem 0}to{background-position:0 0}}\n"],encapsulation:2,changeDetection:0}),n})();function Z(n,l){if(1&n){const t=s.EpF();s.TgZ(0,"mat-checkbox",6),s.NdJ("ngModelChange",function(g){return s.CHM(t),s.oxw().animate=g}),s._uU(1,"Animate "),s.qZA()}if(2&n){const t=s.oxw();s.Q6J("ngModel",t.animate)("labelPosition","before")}}const U={title:"Configurable progress",component:(()=>{class n{constructor(){this.type="info",this.value=50,this.striped=!1,this.animate=!1,this.height=16,this.foreground="",this.background=""}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=s.Xpm({type:n,selectors:[["progress-example"]],decls:45,vars:20,consts:[[3,"ngModel","ngModelChange"],["value","info"],["value","success"],["value","warning"],["value","danger"],["min","0","max","100","thumbLabel","",3,"ngModel","ngModelChange"],[3,"ngModel","labelPosition","ngModelChange"],[3,"ngModel","labelPosition","ngModelChange",4,"ngIf"],["min","1","max","16","thumbLabel","",3,"ngModel","ngModelChange"],["matInput","",3,"ngModel","mtxColorpicker","ngModelChange"],["matSuffix","",3,"for"],["cp1",""],["cp2",""],[3,"type","value","striped","animate","height","foreground","background"]],template:function(t,e){if(1&t&&(s.TgZ(0,"h2"),s._uU(1,"Progress configuration"),s.qZA(),s.TgZ(2,"section")(3,"label"),s._uU(4,"Type:"),s.qZA(),s.TgZ(5,"mat-radio-group",0),s.NdJ("ngModelChange",function(r){return e.type=r}),s.TgZ(6,"mat-radio-button",1),s._uU(7,"Info"),s.qZA(),s.TgZ(8,"mat-radio-button",2),s._uU(9,"Success"),s.qZA(),s.TgZ(10,"mat-radio-button",3),s._uU(11,"Warning"),s.qZA(),s.TgZ(12,"mat-radio-button",4),s._uU(13,"Danger"),s.qZA()()(),s.TgZ(14,"section")(15,"label"),s._uU(16,"Progress:"),s.qZA(),s.TgZ(17,"mat-slider",5),s.NdJ("ngModelChange",function(r){return e.value=r}),s.qZA()(),s.TgZ(18,"section")(19,"mat-checkbox",6),s.NdJ("ngModelChange",function(r){return e.striped=r}),s._uU(20,"Striped"),s.qZA(),s.YNc(21,Z,2,2,"mat-checkbox",7),s.qZA(),s.TgZ(22,"section")(23,"label"),s._uU(24,"Height:"),s.qZA(),s.TgZ(25,"mat-slider",8),s.NdJ("ngModelChange",function(r){return e.height=r}),s.qZA()(),s.TgZ(26,"section")(27,"mat-form-field")(28,"mat-label"),s._uU(29,"Foreground color"),s.qZA(),s.TgZ(30,"input",9),s.NdJ("ngModelChange",function(r){return e.foreground=r}),s.qZA(),s._UZ(31,"mtx-colorpicker-toggle",10)(32,"mtx-colorpicker",null,11),s.qZA(),s.TgZ(34,"mat-form-field")(35,"mat-label"),s._uU(36,"Background color"),s.qZA(),s.TgZ(37,"input",9),s.NdJ("ngModelChange",function(r){return e.background=r}),s.qZA(),s._UZ(38,"mtx-colorpicker-toggle",10)(39,"mtx-colorpicker",null,12),s.qZA()(),s.TgZ(41,"h2"),s._uU(42,"Result"),s.qZA(),s.TgZ(43,"mtx-progress",13),s._uU(44),s.qZA()),2&t){const g=s.MAs(33),r=s.MAs(40);s.xp6(5),s.Q6J("ngModel",e.type),s.xp6(12),s.Q6J("ngModel",e.value),s.xp6(2),s.Q6J("ngModel",e.striped)("labelPosition","before"),s.xp6(2),s.Q6J("ngIf",e.striped),s.xp6(4),s.Q6J("ngModel",e.height),s.xp6(5),s.Q6J("ngModel",e.foreground)("mtxColorpicker",g),s.xp6(1),s.Q6J("for",g),s.xp6(6),s.Q6J("ngModel",e.background)("mtxColorpicker",r),s.xp6(1),s.Q6J("for",r),s.xp6(5),s.Q6J("type",e.type)("value",e.value)("striped",e.striped)("animate",e.animate)("height",e.height+"px")("foreground",e.foreground)("background",e.background),s.xp6(1),s.hij(" ",e.height>=14?e.value+"%":"","\n")}},directives:[u.VQ,m.JJ,m.On,u.U0,C.pH,v.oG,i.O5,h.KE,h.hX,A.Nt,m.Fj,k.zA,y.s,h.R9,M.YK,j],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:1em}.mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin:1rem 1rem 1rem 0}.mat-form-field[_ngcontent-%COMP%]{margin-right:1rem}"]}),n})(),files:[{file:"app.component.html",content:a(21797),filecontent:a(37736)},{file:"app.component.ts",content:a(80125),filecontent:a(95138)},{file:"app.component.scss",content:a(27341),filecontent:a(76692)}]},E={title:"Custom Color",component:(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=s.Xpm({type:n,selectors:[["progress-example"]],decls:6,vars:5,consts:[["foreground","#3949AB",3,"value"],["foreground","#6D4C41",3,"value","striped"],["foreground","#880E4F","background","#FCE4EC",3,"value","striped"]],template:function(t,e){1&t&&(s.TgZ(0,"mtx-progress",0),s._uU(1,"40%"),s.qZA(),s.TgZ(2,"mtx-progress",1),s._uU(3,"70%"),s.qZA(),s.TgZ(4,"mtx-progress",2),s._uU(5,"60%\n"),s.qZA()),2&t&&(s.Q6J("value",40),s.xp6(2),s.Q6J("value",70)("striped",!0),s.xp6(2),s.Q6J("value",60)("striped",!0))},directives:[j],styles:[""]}),n})(),files:[{file:"app.component.html",content:a(1026),filecontent:a(27422)},{file:"app.component.ts",content:a(63270),filecontent:a(84207)},{file:"app.component.scss",content:a(57226),filecontent:a(94446)}]};var J=a(22281),I=a(29241);function F(n,l){if(1&n&&(s.ynx(0),s._UZ(1,"example-viewer",2),s.BQk()),2&n){const t=l.$implicit;s.xp6(1),s.Q6J("exampleData",t)}}function Q(n,l){if(1&n&&(s.ynx(0),s.YNc(1,F,2,1,"ng-container",1),s.BQk()),2&n){const t=l.ngIf;s.xp6(1),s.Q6J("ngForOf",t.examples)}}function O(n,l){if(1&n&&(s.ynx(0),s._UZ(1,"doc-viewer",1),s.BQk()),2&n){const t=l.ngIf;s.xp6(1),s.Q6J("textContent",t.content.default)}}let f=(()=>{class n{constructor(t){this.route=t}}return n.\u0275fac=function(t){return new(t||n)(s.Y36(c.gz))},n.\u0275cmp=s.Xpm({type:n,selectors:[["app-progress-overview"]],decls:2,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"exampleData"]],template:function(t,e){1&t&&(s.YNc(0,Q,2,1,"ng-container",0),s.ALo(1,"async")),2&t&&s.Q6J("ngIf",s.lcZ(1,1,e.route.data))},directives:[i.O5,i.sg,J.B],pipes:[i.Ov],encapsulation:2}),n})(),x=(()=>{class n{constructor(t){this.route=t}}return n.\u0275fac=function(t){return new(t||n)(s.Y36(c.gz))},n.\u0275cmp=s.Xpm({type:n,selectors:[["app-progress-api"]],decls:2,vars:3,consts:[[4,"ngIf"],[3,"textContent"]],template:function(t,e){1&t&&(s.YNc(0,O,2,1,"ng-container",0),s.ALo(1,"async")),2&t&&s.Q6J("ngIf",s.lcZ(1,1,e.route.data))},directives:[i.O5,I.z],pipes:[i.Ov],encapsulation:2}),n})(),B=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=s.oAB({type:n}),n.\u0275inj=s.cJS({imports:[[b.m8,c.Bz.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:f,pathMatch:"full",data:{examples:[U,E]}},{path:"api",component:x,pathMatch:"full",data:{content:a(99655)}},{path:"**",redirectTo:"overview"}])]]}),n})()},21797:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Progress configuration<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Type:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;type&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>Info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Success<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>Warning<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Progress:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slider</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">thumbLabel</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;value&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-slider</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;striped&quot;</span> [<span class="hljs-attr">labelPosition</span>]=<span class="hljs-string">&quot;&#x27;before&#x27;&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;striped&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;animate&quot;</span> [<span class="hljs-attr">labelPosition</span>]=<span class="hljs-string">&quot;&#x27;before&#x27;&quot;</span>&gt;</span>Animate\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Height:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slider</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;16&quot;</span> <span class="hljs-attr">thumbLabel</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;height&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-slider</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Foreground color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;foreground&quot;</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;cp1&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;cp1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">cp1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Background color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;background&quot;</span> [<span class="hljs-attr">mtxColorpicker</span>]=<span class="hljs-string">&quot;cp2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker-toggle</span> <span class="hljs-attr">matSuffix</span> [<span class="hljs-attr">for</span>]=<span class="hljs-string">&quot;cp2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker-toggle</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mtx-colorpicker</span> #<span class="hljs-attr">cp2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-colorpicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Result<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-progress</span> [<span class="hljs-attr">type</span>]=<span class="hljs-string">&quot;type&quot;</span>\n              [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;value&quot;</span>\n              [<span class="hljs-attr">striped</span>]=<span class="hljs-string">&quot;striped&quot;</span> [<span class="hljs-attr">animate</span>]=<span class="hljs-string">&quot;animate&quot;</span>\n              [<span class="hljs-attr">height</span>]=<span class="hljs-string">&quot;height + &#x27;px&#x27;&quot;</span>\n              [<span class="hljs-attr">foreground</span>]=<span class="hljs-string">&quot;foreground&quot;</span> [<span class="hljs-attr">background</span>]=<span class="hljs-string">&quot;background&quot;</span>&gt;</span>\n  {{height&gt;=14 ? value + &#x27;%&#x27; : &#x27;&#x27;}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-progress</span>&gt;</span>\n'},1026:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-progress</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;40&quot;</span> <span class="hljs-attr">foreground</span>=<span class="hljs-string">&quot;#3949AB&quot;</span>&gt;</span>40%<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-progress</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-progress</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;70&quot;</span> [<span class="hljs-attr">striped</span>]=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">foreground</span>=<span class="hljs-string">&quot;#6D4C41&quot;</span>&gt;</span>70%<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-progress</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-progress</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;60&quot;</span> [<span class="hljs-attr">striped</span>]=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">foreground</span>=<span class="hljs-string">&quot;#880E4F&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#FCE4EC&quot;</span>&gt;</span>60%\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-progress</span>&gt;</span>\n'},80125:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxProgressType</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/progress&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;progress-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">type</span>: <span class="hljs-title class_">MtxProgressType</span> = <span class="hljs-string">&#x27;info&#x27;</span>;\n  value = <span class="hljs-number">50</span>;\n  striped = <span class="hljs-literal">false</span>;\n  animate = <span class="hljs-literal">false</span>;\n  height = <span class="hljs-number">16</span>;\n  foreground = <span class="hljs-string">&#x27;&#x27;</span>;\n  background = <span class="hljs-string">&#x27;&#x27;</span>;\n}\n'},63270:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;progress-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {}\n'},99655:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<h1 id="progress">Progress</h1>\n<h2 id="api-reference-for-material-extensions-progress">API reference for Material Extensions Progress</h2>\n<p><code>import { MtxProgressModule } from &apos;@ng-matero/extensions/progress&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxprogress"><code>MtxProgress</code></h4>\n<p>Selector: <code>[mtx-progress]</code></p>\n<p>Exported as: <code>mtxProgress</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left"><strong>Name</strong></th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">@Input() <code>type: &apos;default&apos; | &apos;info&apos; | &apos;success&apos; | &apos;warning&apos; | &apos;danger&apos;</code></td>\n<td align="left">The progress types. Defaulted to <strong><code>&apos;info&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>value: number</code></td>\n<td align="left">The progress value. Defaulted to <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>height: number</code></td>\n<td align="left">The progress height.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>color: string</code></td>\n<td align="left">The progress text color.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>foreground: string</code></td>\n<td align="left">The progress bar color.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>background: string</code></td>\n<td align="left">The progress track color.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>striped: boolean</code></td>\n<td align="left">Whether applies striped class.</td>\n</tr>\n<tr>\n<td align="left">@Input() <code>animate: boolean</code></td>\n<td align="left">Whether applies animated class.</td>\n</tr>\n</tbody></table>\n'},37736:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<h2>Progress configuration</h2>\n\n<section>\n  <label>Type:</label>\n  <mat-radio-group [(ngModel)]="type">\n    <mat-radio-button value="info">Info</mat-radio-button>\n    <mat-radio-button value="success">Success</mat-radio-button>\n    <mat-radio-button value="warning">Warning</mat-radio-button>\n    <mat-radio-button value="danger">Danger</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n<section>\n  <label>Progress:</label>\n  <mat-slider min="0" max="100" thumbLabel [(ngModel)]="value"></mat-slider>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="striped" [labelPosition]="\'before\'">Striped</mat-checkbox>\n  <mat-checkbox *ngIf="striped" [(ngModel)]="animate" [labelPosition]="\'before\'">Animate\n  </mat-checkbox>\n</section>\n\n<section>\n  <label>Height:</label>\n  <mat-slider min="1" max="16" thumbLabel [(ngModel)]="height"></mat-slider>\n</section>\n\n<section>\n  <mat-form-field>\n    <mat-label>Foreground color</mat-label>\n    <input matInput [(ngModel)]="foreground" [mtxColorpicker]="cp1">\n    <mtx-colorpicker-toggle matSuffix [for]="cp1"></mtx-colorpicker-toggle>\n    <mtx-colorpicker #cp1></mtx-colorpicker>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Background color</mat-label>\n    <input matInput [(ngModel)]="background" [mtxColorpicker]="cp2">\n    <mtx-colorpicker-toggle matSuffix [for]="cp2"></mtx-colorpicker-toggle>\n    <mtx-colorpicker #cp2></mtx-colorpicker>\n  </mat-form-field>\n</section>\n\n<h2>Result</h2>\n\n<mtx-progress [type]="type"\n              [value]="value"\n              [striped]="striped" [animate]="animate"\n              [height]="height + \'px\'"\n              [foreground]="foreground" [background]="background">\n  {{height>=14 ? value + \'%\' : \'\'}}\n</mtx-progress>\n'},95138:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { Component } from '@angular/core';\nimport { MtxProgressType } from '@ng-matero/extensions/progress';\n\n@Component({\n  selector: 'progress-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  type: MtxProgressType = 'info';\n  value = 50;\n  striped = false;\n  animate = false;\n  height = 16;\n  foreground = '';\n  background = '';\n}\n"},27422:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<mtx-progress [value]="40" foreground="#3949AB">40%</mtx-progress>\n<mtx-progress [value]="70" [striped]="true" foreground="#6D4C41">70%</mtx-progress>\n<mtx-progress [value]="60" [striped]="true" foreground="#880E4F" background="#FCE4EC">60%\n</mtx-progress>\n'},84207:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'progress-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n"},27341:o=>{"use strict";o.exports='module.exports = "<span class=\\"hljs-selector-class\\">.mat-radio-button</span> {\\n  <span class=\\"hljs-attribute\\">margin</span>: <span class=\\"hljs-number\\">1em</span>;\\n}\\n\\n<span class=\\"hljs-selector-class\\">.mat-checkbox</span> {\\n  <span class=\\"hljs-attribute\\">display</span>: inline-block;\\n  <span class=\\"hljs-attribute\\">margin</span>: <span class=\\"hljs-number\\">1rem</span> <span class=\\"hljs-number\\">1rem</span> <span class=\\"hljs-number\\">1rem</span> <span class=\\"hljs-number\\">0</span>;\\n}\\n\\n<span class=\\"hljs-selector-class\\">.mat-form-field</span> {\\n  <span class=\\"hljs-attribute\\">margin-right</span>: <span class=\\"hljs-number\\">1rem</span>;\\n}\\n"'},57226:o=>{"use strict";o.exports='module.exports = "<span class=\\"hljs-comment\\">/** No CSS for this example */</span>\\n"'},76692:o=>{"use strict";o.exports='export default ".mat-radio-button {\\n  margin: 1em;\\n}\\n\\n.mat-checkbox {\\n  display: inline-block;\\n  margin: 1rem 1rem 1rem 0;\\n}\\n\\n.mat-form-field {\\n  margin-right: 1rem;\\n}\\n";'},94446:o=>{"use strict";o.exports='export default "/** No CSS for this example */\\n";'}}]);